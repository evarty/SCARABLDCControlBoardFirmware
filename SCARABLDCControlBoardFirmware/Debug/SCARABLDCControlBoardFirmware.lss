
SCARABLDCControlBoardFirmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003318  00400000  00400000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00403318  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00003ec0  20000434  0040374c  00020434  2**2
                  ALLOC
  3 .stack        00003004  200042f4  0040760c  00020434  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045e  2**0
                  CONTENTS, READONLY
  6 .debug_info   00002e50  00000000  00000000  000204b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ad  00000000  00000000  00023307  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000012e5  00000000  00000000  00023cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000148  00000000  00000000  00024f99  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c8  00000000  00000000  000250e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00010ff1  00000000  00000000  000251a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00003d30  00000000  00000000  0003619a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0004ab71  00000000  00000000  00039eca  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000009c0  00000000  00000000  00084a3c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 72 00 20 d1 01 40 00 cd 01 40 00 cd 01 40 00     .r. ..@...@...@.
  400010:	cd 01 40 00 cd 01 40 00 cd 01 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	cd 01 40 00 cd 01 40 00 00 00 00 00 cd 01 40 00     ..@...@.......@.
  40003c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  40004c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  40005c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  40006c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  40007c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  40008c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  40009c:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  4000ac:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  4000bc:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  4000cc:	cd 01 40 00 cd 01 40 00 cd 01 40 00 cd 01 40 00     ..@...@...@...@.
  4000dc:	cd 01 40 00 cd 01 40 00 00 00 00 00 00 00 00 00     ..@...@.........
	...

004000f8 <__do_global_dtors_aux>:
  4000f8:	b510      	push	{r4, lr}
  4000fa:	4c05      	ldr	r4, [pc, #20]	; (400110 <__do_global_dtors_aux+0x18>)
  4000fc:	7823      	ldrb	r3, [r4, #0]
  4000fe:	b933      	cbnz	r3, 40010e <__do_global_dtors_aux+0x16>
  400100:	4b04      	ldr	r3, [pc, #16]	; (400114 <__do_global_dtors_aux+0x1c>)
  400102:	b113      	cbz	r3, 40010a <__do_global_dtors_aux+0x12>
  400104:	4804      	ldr	r0, [pc, #16]	; (400118 <__do_global_dtors_aux+0x20>)
  400106:	f3af 8000 	nop.w
  40010a:	2301      	movs	r3, #1
  40010c:	7023      	strb	r3, [r4, #0]
  40010e:	bd10      	pop	{r4, pc}
  400110:	20000434 	.word	0x20000434
  400114:	00000000 	.word	0x00000000
  400118:	00403318 	.word	0x00403318

0040011c <frame_dummy>:
  40011c:	4b0c      	ldr	r3, [pc, #48]	; (400150 <frame_dummy+0x34>)
  40011e:	b143      	cbz	r3, 400132 <frame_dummy+0x16>
  400120:	480c      	ldr	r0, [pc, #48]	; (400154 <frame_dummy+0x38>)
  400122:	490d      	ldr	r1, [pc, #52]	; (400158 <frame_dummy+0x3c>)
  400124:	b510      	push	{r4, lr}
  400126:	f3af 8000 	nop.w
  40012a:	480c      	ldr	r0, [pc, #48]	; (40015c <frame_dummy+0x40>)
  40012c:	6803      	ldr	r3, [r0, #0]
  40012e:	b923      	cbnz	r3, 40013a <frame_dummy+0x1e>
  400130:	bd10      	pop	{r4, pc}
  400132:	480a      	ldr	r0, [pc, #40]	; (40015c <frame_dummy+0x40>)
  400134:	6803      	ldr	r3, [r0, #0]
  400136:	b933      	cbnz	r3, 400146 <frame_dummy+0x2a>
  400138:	4770      	bx	lr
  40013a:	4b09      	ldr	r3, [pc, #36]	; (400160 <frame_dummy+0x44>)
  40013c:	2b00      	cmp	r3, #0
  40013e:	d0f7      	beq.n	400130 <frame_dummy+0x14>
  400140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400144:	4718      	bx	r3
  400146:	4b06      	ldr	r3, [pc, #24]	; (400160 <frame_dummy+0x44>)
  400148:	2b00      	cmp	r3, #0
  40014a:	d0f5      	beq.n	400138 <frame_dummy+0x1c>
  40014c:	4718      	bx	r3
  40014e:	bf00      	nop
  400150:	00000000 	.word	0x00000000
  400154:	00403318 	.word	0x00403318
  400158:	20000438 	.word	0x20000438
  40015c:	00403318 	.word	0x00403318
  400160:	00000000 	.word	0x00000000

00400164 <ADC0Read>:
#define REG_AFEC1_CSELR (*(RwReg*)0x400B4064U)

uint32_t ADC0Read(uint32_t Channel)
{
	//Set the ADC channel
	REG_AFEC0_CSELR = (0xF & Channel) << AFE_CSELR_CSEL_Pos;
  400164:	f000 020f 	and.w	r2, r0, #15
  400168:	4b08      	ldr	r3, [pc, #32]	; (40018c <ADC0Read+0x28>)
  40016a:	601a      	str	r2, [r3, #0]
	//Start ADC conversion
	REG_AFEC0_CR |= AFE_CR_START;
  40016c:	4a08      	ldr	r2, [pc, #32]	; (400190 <ADC0Read+0x2c>)
  40016e:	6813      	ldr	r3, [r2, #0]
  400170:	f043 0302 	orr.w	r3, r3, #2
  400174:	6013      	str	r3, [r2, #0]
	//wait for conversion to complete
	while(!(REG_AFEC0_ISR & (1 << Channel)));
  400176:	2301      	movs	r3, #1
  400178:	fa03 f000 	lsl.w	r0, r3, r0
  40017c:	3230      	adds	r2, #48	; 0x30
  40017e:	6813      	ldr	r3, [r2, #0]
  400180:	4203      	tst	r3, r0
  400182:	d0fc      	beq.n	40017e <ADC0Read+0x1a>
	
	return REG_AFEC0_CDR & 0x0000FFFF;
  400184:	4b03      	ldr	r3, [pc, #12]	; (400194 <ADC0Read+0x30>)
  400186:	6818      	ldr	r0, [r3, #0]
}
  400188:	b280      	uxth	r0, r0
  40018a:	4770      	bx	lr
  40018c:	400b0064 	.word	0x400b0064
  400190:	400b0000 	.word	0x400b0000
  400194:	400b0068 	.word	0x400b0068

00400198 <ADC1Read>:


uint32_t ADC1Read(uint32_t Channel)
{
	//Set the ADC channel
	REG_AFEC1_CSELR |= (uint8_t)Channel << AFE_CSELR_CSEL_Pos;
  400198:	4a0a      	ldr	r2, [pc, #40]	; (4001c4 <ADC1Read+0x2c>)
  40019a:	6811      	ldr	r1, [r2, #0]
  40019c:	b2c3      	uxtb	r3, r0
  40019e:	430b      	orrs	r3, r1
  4001a0:	6013      	str	r3, [r2, #0]
	//Start ADC conversion
	REG_AFEC1_CR |= AFE_CR_START;
  4001a2:	3a64      	subs	r2, #100	; 0x64
  4001a4:	6813      	ldr	r3, [r2, #0]
  4001a6:	f043 0302 	orr.w	r3, r3, #2
  4001aa:	6013      	str	r3, [r2, #0]
	//wait for conversion to complete
	while(!(REG_AFEC1_ISR & (1 << Channel)));
  4001ac:	2301      	movs	r3, #1
  4001ae:	fa03 f000 	lsl.w	r0, r3, r0
  4001b2:	3230      	adds	r2, #48	; 0x30
  4001b4:	6813      	ldr	r3, [r2, #0]
  4001b6:	4203      	tst	r3, r0
  4001b8:	d0fc      	beq.n	4001b4 <ADC1Read+0x1c>
	
	return REG_AFEC1_CDR & 0x0000FFFF;
  4001ba:	4b03      	ldr	r3, [pc, #12]	; (4001c8 <ADC1Read+0x30>)
  4001bc:	6818      	ldr	r0, [r3, #0]
  4001be:	b280      	uxth	r0, r0
  4001c0:	4770      	bx	lr
  4001c2:	bf00      	nop
  4001c4:	400b4064 	.word	0x400b4064
  4001c8:	400b4068 	.word	0x400b4068

004001cc <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4001cc:	e7fe      	b.n	4001cc <Dummy_Handler>
	...

004001d0 <Reset_Handler>:
{
  4001d0:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  4001d2:	4b17      	ldr	r3, [pc, #92]	; (400230 <Reset_Handler+0x60>)
  4001d4:	4a17      	ldr	r2, [pc, #92]	; (400234 <Reset_Handler+0x64>)
  4001d6:	429a      	cmp	r2, r3
  4001d8:	d010      	beq.n	4001fc <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  4001da:	4b17      	ldr	r3, [pc, #92]	; (400238 <Reset_Handler+0x68>)
  4001dc:	4a14      	ldr	r2, [pc, #80]	; (400230 <Reset_Handler+0x60>)
  4001de:	429a      	cmp	r2, r3
  4001e0:	d20c      	bcs.n	4001fc <Reset_Handler+0x2c>
  4001e2:	3b01      	subs	r3, #1
  4001e4:	1a9b      	subs	r3, r3, r2
  4001e6:	f023 0303 	bic.w	r3, r3, #3
  4001ea:	3304      	adds	r3, #4
  4001ec:	4413      	add	r3, r2
  4001ee:	4911      	ldr	r1, [pc, #68]	; (400234 <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  4001f0:	f851 0b04 	ldr.w	r0, [r1], #4
  4001f4:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4001f8:	429a      	cmp	r2, r3
  4001fa:	d1f9      	bne.n	4001f0 <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  4001fc:	4b0f      	ldr	r3, [pc, #60]	; (40023c <Reset_Handler+0x6c>)
  4001fe:	4a10      	ldr	r2, [pc, #64]	; (400240 <Reset_Handler+0x70>)
  400200:	429a      	cmp	r2, r3
  400202:	d20a      	bcs.n	40021a <Reset_Handler+0x4a>
  400204:	3b01      	subs	r3, #1
  400206:	1a9b      	subs	r3, r3, r2
  400208:	f023 0303 	bic.w	r3, r3, #3
  40020c:	3304      	adds	r3, #4
  40020e:	4413      	add	r3, r2
                *pDest++ = 0;
  400210:	2100      	movs	r1, #0
  400212:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400216:	4293      	cmp	r3, r2
  400218:	d1fb      	bne.n	400212 <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40021a:	4a0a      	ldr	r2, [pc, #40]	; (400244 <Reset_Handler+0x74>)
  40021c:	4b0a      	ldr	r3, [pc, #40]	; (400248 <Reset_Handler+0x78>)
  40021e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400222:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  400224:	4b09      	ldr	r3, [pc, #36]	; (40024c <Reset_Handler+0x7c>)
  400226:	4798      	blx	r3
        main();
  400228:	4b09      	ldr	r3, [pc, #36]	; (400250 <Reset_Handler+0x80>)
  40022a:	4798      	blx	r3
  40022c:	e7fe      	b.n	40022c <Reset_Handler+0x5c>
  40022e:	bf00      	nop
  400230:	20000000 	.word	0x20000000
  400234:	00403318 	.word	0x00403318
  400238:	20000434 	.word	0x20000434
  40023c:	200042f4 	.word	0x200042f4
  400240:	20000434 	.word	0x20000434
  400244:	e000ed00 	.word	0xe000ed00
  400248:	00400000 	.word	0x00400000
  40024c:	00402fa9 	.word	0x00402fa9
  400250:	004002f9 	.word	0x004002f9

00400254 <SystemInit>:
 * Initialize the System and update the SystemFrequency variable.
 */
void SystemInit( void )
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC->EEFC_FMR = EEFC_FMR_FWS(5);
  400254:	f44f 62a0 	mov.w	r2, #1280	; 0x500
  400258:	4b1f      	ldr	r3, [pc, #124]	; (4002d8 <SystemInit+0x84>)
  40025a:	601a      	str	r2, [r3, #0]


	/* Initialize main oscillator */
	if ( !(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) )
  40025c:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  400260:	6a1b      	ldr	r3, [r3, #32]
  400262:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400266:	d107      	bne.n	400278 <SystemInit+0x24>
  {
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
  400268:	4a1c      	ldr	r2, [pc, #112]	; (4002dc <SystemInit+0x88>)
  40026a:	4b1d      	ldr	r3, [pc, #116]	; (4002e0 <SystemInit+0x8c>)
  40026c:	621a      	str	r2, [r3, #32]

		while ( !(PMC->PMC_SR & PMC_SR_MOSCXTS) )
  40026e:	461a      	mov	r2, r3
  400270:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400272:	f013 0f01 	tst.w	r3, #1
  400276:	d0fb      	beq.n	400270 <SystemInit+0x1c>
    {
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
  400278:	4a1a      	ldr	r2, [pc, #104]	; (4002e4 <SystemInit+0x90>)
  40027a:	4b19      	ldr	r3, [pc, #100]	; (4002e0 <SystemInit+0x8c>)
  40027c:	621a      	str	r2, [r3, #32]

	while ( !(PMC->PMC_SR & PMC_SR_MOSCSELS) )
  40027e:	461a      	mov	r2, r3
  400280:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400282:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  400286:	d0fb      	beq.n	400280 <SystemInit+0x2c>
  {
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
  400288:	4a15      	ldr	r2, [pc, #84]	; (4002e0 <SystemInit+0x8c>)
  40028a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40028c:	f023 0303 	bic.w	r3, r3, #3
  400290:	f043 0301 	orr.w	r3, r3, #1
  400294:	6313      	str	r3, [r2, #48]	; 0x30

	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  400296:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400298:	f013 0f08 	tst.w	r3, #8
  40029c:	d0fb      	beq.n	400296 <SystemInit+0x42>
  {
  }

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
  40029e:	4a12      	ldr	r2, [pc, #72]	; (4002e8 <SystemInit+0x94>)
  4002a0:	4b0f      	ldr	r3, [pc, #60]	; (4002e0 <SystemInit+0x8c>)
  4002a2:	629a      	str	r2, [r3, #40]	; 0x28
	while ( !(PMC->PMC_SR & PMC_SR_LOCKA) )
  4002a4:	461a      	mov	r2, r3
  4002a6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4002a8:	f013 0f02 	tst.w	r3, #2
  4002ac:	d0fb      	beq.n	4002a6 <SystemInit+0x52>
  {
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
  4002ae:	2211      	movs	r2, #17
  4002b0:	4b0b      	ldr	r3, [pc, #44]	; (4002e0 <SystemInit+0x8c>)
  4002b2:	631a      	str	r2, [r3, #48]	; 0x30
	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  4002b4:	461a      	mov	r2, r3
  4002b6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4002b8:	f013 0f08 	tst.w	r3, #8
  4002bc:	d0fb      	beq.n	4002b6 <SystemInit+0x62>
  {
  }

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
  4002be:	2212      	movs	r2, #18
  4002c0:	4b07      	ldr	r3, [pc, #28]	; (4002e0 <SystemInit+0x8c>)
  4002c2:	631a      	str	r2, [r3, #48]	; 0x30
	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  4002c4:	461a      	mov	r2, r3
  4002c6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4002c8:	f013 0f08 	tst.w	r3, #8
  4002cc:	d0fb      	beq.n	4002c6 <SystemInit+0x72>
  {
  }

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
  4002ce:	4a07      	ldr	r2, [pc, #28]	; (4002ec <SystemInit+0x98>)
  4002d0:	4b07      	ldr	r3, [pc, #28]	; (4002f0 <SystemInit+0x9c>)
  4002d2:	601a      	str	r2, [r3, #0]
  4002d4:	4770      	bx	lr
  4002d6:	bf00      	nop
  4002d8:	400e0a00 	.word	0x400e0a00
  4002dc:	00370809 	.word	0x00370809
  4002e0:	400e0400 	.word	0x400e0400
  4002e4:	01370809 	.word	0x01370809
  4002e8:	20133f01 	.word	0x20133f01
  4002ec:	07270e00 	.word	0x07270e00
  4002f0:	20000000 	.word	0x20000000
  4002f4:	00000000 	.word	0x00000000

004002f8 <main>:
#define REG_PIOA_ABCDSR2 (*(__IO uint32_t*)0x400E0E74U)
#define REG_PIOD_ABCDSR1 (*(__IO uint32_t*)0x400E1470U)


int main(void)
{
  4002f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4002fc:	b091      	sub	sp, #68	; 0x44
    /* Initialize the SAM system */
    SystemInit();
  4002fe:	4ba8      	ldr	r3, [pc, #672]	; (4005a0 <main+0x2a8>)
  400300:	4798      	blx	r3
	//Set up Crystal and main clock
	//This will occur only on startup, so speed is not a priority.
	//Following Process from datasheet section 29.15 Programming Sequence
	//Write protection starts as 0, so no need to deal with that 
	//Enable crystal oscillator
	REG_CKGR_MOR |= CKGR_MOR_KEY(0x37) | CKGR_MOR_MOSCXTST_Msk | CKGR_MOR_MOSCXTEN;
  400302:	4aa8      	ldr	r2, [pc, #672]	; (4005a4 <main+0x2ac>)
  400304:	6811      	ldr	r1, [r2, #0]
  400306:	4ba8      	ldr	r3, [pc, #672]	; (4005a8 <main+0x2b0>)
  400308:	430b      	orrs	r3, r1
  40030a:	6013      	str	r3, [r2, #0]
	//Wait for MOSCXTST field in PMC_SR to be set
	while(!(REG_PMC_SR & PMC_SR_MOSCXTS));
  40030c:	4ba7      	ldr	r3, [pc, #668]	; (4005ac <main+0x2b4>)
  40030e:	681a      	ldr	r2, [r3, #0]
  400310:	f012 0f01 	tst.w	r2, #1
  400314:	d0fb      	beq.n	40030e <main+0x16>
	//Switch the main clock to the external crystal
	REG_CKGR_MOR |= CKGR_MOR_KEY(0x37) | CKGR_MOR_MOSCSEL;
  400316:	4aa3      	ldr	r2, [pc, #652]	; (4005a4 <main+0x2ac>)
  400318:	6813      	ldr	r3, [r2, #0]
  40031a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  40031e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400322:	6013      	str	r3, [r2, #0]
	//Wait for MOSCELS bit to be set the PMC_SR register
	while(!(REG_PMC_SR & PMC_SR_MOSCSELS));
  400324:	4ba1      	ldr	r3, [pc, #644]	; (4005ac <main+0x2b4>)
  400326:	681a      	ldr	r2, [r3, #0]
  400328:	f412 3f80 	tst.w	r2, #65536	; 0x10000
  40032c:	d0fb      	beq.n	400326 <main+0x2e>
	//Check the clock frequency
	//Wait for check to be available
	while(!(REG_CKGR_MCFR & CKGR_MCFR_MAINFRDY))
  40032e:	4ba0      	ldr	r3, [pc, #640]	; (4005b0 <main+0x2b8>)
  400330:	681b      	ldr	r3, [r3, #0]
  400332:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  400336:	d10a      	bne.n	40034e <main+0x56>
	The default slow clock is 4 MHz. The crystal in the design
	is 12 MHz. Reading from MAINF gives the number of crystal cycles
	in 16 slow clock cycles. The crystal is three times
	as fast as the slow clock. So, 16*3 = 48.
	*/
	if((REG_CKGR_MCFR & CKGR_MCFR_MAINF_Pos) < 45)
  400338:	499d      	ldr	r1, [pc, #628]	; (4005b0 <main+0x2b8>)
	{
		REG_CKGR_MOR &= ~(CKGR_MOR_MOSCSEL);
  40033a:	4a9a      	ldr	r2, [pc, #616]	; (4005a4 <main+0x2ac>)
	if((REG_CKGR_MCFR & CKGR_MCFR_MAINF_Pos) < 45)
  40033c:	680b      	ldr	r3, [r1, #0]
		REG_CKGR_MOR &= ~(CKGR_MOR_MOSCSEL);
  40033e:	6813      	ldr	r3, [r2, #0]
  400340:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  400344:	6013      	str	r3, [r2, #0]
	while(!(REG_CKGR_MCFR & CKGR_MCFR_MAINFRDY))
  400346:	680b      	ldr	r3, [r1, #0]
  400348:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40034c:	d0f6      	beq.n	40033c <main+0x44>
	//At this point, the crystal is working and the main clock source
	//but I want a faster clock, so, break out the PLL
	
	//Setup PLL
	//Write the count register for the PLL setup time
	REG_CKGR_PLLAR |= CKGR_PLLAR_PLLACOUNT(0x000F);
  40034e:	4a99      	ldr	r2, [pc, #612]	; (4005b4 <main+0x2bc>)
  400350:	6813      	ldr	r3, [r2, #0]
  400352:	f443 6370 	orr.w	r3, r3, #3840	; 0xf00
  400356:	6013      	str	r3, [r2, #0]
	//Set PLL multiplier. multiplication value is this value + 1
	REG_CKGR_PLLAR |= CKGR_PLLAR_MULA(0x0009) | CKGR_PLLAR_DIVA(0x0001);
  400358:	6813      	ldr	r3, [r2, #0]
  40035a:	f443 2310 	orr.w	r3, r3, #589824	; 0x90000
  40035e:	f043 0301 	orr.w	r3, r3, #1
  400362:	6013      	str	r3, [r2, #0]
	//Wait for the LOCKA bit to be set
	while(!(REG_PMC_SR & PMC_SR_LOCKA));
  400364:	4b91      	ldr	r3, [pc, #580]	; (4005ac <main+0x2b4>)
  400366:	681a      	ldr	r2, [r3, #0]
  400368:	f012 0f02 	tst.w	r2, #2
  40036c:	d0fb      	beq.n	400366 <main+0x6e>
	//Select the PLL as master clock, following datasheet
	REG_PMC_MCKR |= PMC_MCKR_PRES_CLK_1;
  40036e:	4b92      	ldr	r3, [pc, #584]	; (4005b8 <main+0x2c0>)
  400370:	681a      	ldr	r2, [r3, #0]
  400372:	601a      	str	r2, [r3, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  400374:	3338      	adds	r3, #56	; 0x38
  400376:	681a      	ldr	r2, [r3, #0]
  400378:	f012 0f08 	tst.w	r2, #8
  40037c:	d0fb      	beq.n	400376 <main+0x7e>
	REG_PMC_MCKR |= PMC_MCKR_CSS_PLLA_CLK;
  40037e:	4a8e      	ldr	r2, [pc, #568]	; (4005b8 <main+0x2c0>)
  400380:	6813      	ldr	r3, [r2, #0]
  400382:	f043 0302 	orr.w	r3, r3, #2
  400386:	6013      	str	r3, [r2, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  400388:	4b88      	ldr	r3, [pc, #544]	; (4005ac <main+0x2b4>)
  40038a:	681a      	ldr	r2, [r3, #0]
  40038c:	f012 0f08 	tst.w	r2, #8
  400390:	d0fb      	beq.n	40038a <main+0x92>
	
	//Setup PIO
	//The encoder inputs are given to peripherals, so they are fine.
	//The hall effect inputs need to be configured.
	//Turn on PIO clock for all ?channels? I guess
	REG_PMC_PCER0 |= PMC_PCER0_PID9 | PMC_PCER0_PID10 | PMC_PCER0_PID11 | PMC_PCER0_PID12 | PMC_PCER0_PID13;
  400392:	4b8a      	ldr	r3, [pc, #552]	; (4005bc <main+0x2c4>)
  400394:	681a      	ldr	r2, [r3, #0]
  400396:	f442 5278 	orr.w	r2, r2, #15872	; 0x3e00
  40039a:	601a      	str	r2, [r3, #0]
	//Set relevant pins to be inputs
	//THESE ARE PLACEHOLDER VALUES.
	//enable PIO control
	REG_PIOA_PER |= PIO_PER_P0 | PIO_PER_P1 | PIO_PER_P2;
  40039c:	4988      	ldr	r1, [pc, #544]	; (4005c0 <main+0x2c8>)
  40039e:	680a      	ldr	r2, [r1, #0]
  4003a0:	f042 0207 	orr.w	r2, r2, #7
  4003a4:	600a      	str	r2, [r1, #0]
	//Disable output
	REG_PIOA_ODR |= PIO_ODR_P0 | PIO_ODR_P1 | PIO_ODR_P2;
  4003a6:	3114      	adds	r1, #20
  4003a8:	680a      	ldr	r2, [r1, #0]
  4003aa:	f042 0207 	orr.w	r2, r2, #7
  4003ae:	600a      	str	r2, [r1, #0]
	//Disable pullup resistors
	REG_PIOA_PUDR |= PIO_PUDR_P0 | PIO_PUDR_P1 | PIO_PUDR_P2;
  4003b0:	314c      	adds	r1, #76	; 0x4c
  4003b2:	680a      	ldr	r2, [r1, #0]
  4003b4:	f042 0207 	orr.w	r2, r2, #7
  4003b8:	600a      	str	r2, [r1, #0]
	//Disable pulldown resistors
	REG_PIOA_PPDDR |= PIO_PPDDR_P0 | PIO_PPDDR_P1 | PIO_PPDDR_P2;
  4003ba:	3130      	adds	r1, #48	; 0x30
  4003bc:	680a      	ldr	r2, [r1, #0]
  4003be:	f042 0207 	orr.w	r2, r2, #7
  4003c2:	600a      	str	r2, [r1, #0]
	//Setup the quadrature decoder
	//TIOA0 and TIOB0 are the quadrature signals.
	//TIOB1 is the index signal.
	//This follows AT42706 process in section 5.2.4
	//Configure IO pins to their peripheral functions
	REG_PIOA_PDR |= PIO_PER_P0 | PIO_PER_P1 | PIO_PER_P16;
  4003c4:	398c      	subs	r1, #140	; 0x8c
  4003c6:	680a      	ldr	r2, [r1, #0]
  4003c8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  4003cc:	f042 0203 	orr.w	r2, r2, #3
  4003d0:	600a      	str	r2, [r1, #0]
	REG_PIOA_ABCDSR1 |=  PIO_ABCDSR_P0 | PIO_ABCDSR_P1 | PIO_ABCDSR_P16;
  4003d2:	316c      	adds	r1, #108	; 0x6c
  4003d4:	680a      	ldr	r2, [r1, #0]
  4003d6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  4003da:	f042 0203 	orr.w	r2, r2, #3
  4003de:	600a      	str	r2, [r1, #0]
	//Enable channel 0 and 1 peripheral clocks
	//CURRENT CODE ENABLES MODULE 0
	REG_PMC_PCER0 |= PMC_PCER0_PID21 | PMC_PCER0_PID22;
  4003e0:	681a      	ldr	r2, [r3, #0]
  4003e2:	f442 02c0 	orr.w	r2, r2, #6291456	; 0x600000
  4003e6:	601a      	str	r2, [r3, #0]
	//Step 3
	REG_TC0_CMR0 &= ~(TC_CMR_WAVE);
  4003e8:	f5a1 21a1 	sub.w	r1, r1, #329728	; 0x50800
  4003ec:	f2a1 616c 	subw	r1, r1, #1644	; 0x66c
  4003f0:	680a      	ldr	r2, [r1, #0]
  4003f2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
  4003f6:	600a      	str	r2, [r1, #0]
	REG_TC0_CMR1 &= ~(TC_CMR_WAVE);
  4003f8:	4a72      	ldr	r2, [pc, #456]	; (4005c4 <main+0x2cc>)
  4003fa:	6810      	ldr	r0, [r2, #0]
  4003fc:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
  400400:	6010      	str	r0, [r2, #0]
	
	REG_TC0_CMR0 |= TC_CMR_TCCLKS_XC0;
  400402:	6808      	ldr	r0, [r1, #0]
  400404:	f040 0005 	orr.w	r0, r0, #5
  400408:	6008      	str	r0, [r1, #0]
	REG_TC0_CMR1 |= TC_CMR_TCCLKS_XC0;
  40040a:	6810      	ldr	r0, [r2, #0]
  40040c:	f040 0005 	orr.w	r0, r0, #5
  400410:	6010      	str	r0, [r2, #0]
	
	REG_TC0_CMR0 |= TC_CMR_ETRGEDG_RISING;
  400412:	6808      	ldr	r0, [r1, #0]
  400414:	f440 7080 	orr.w	r0, r0, #256	; 0x100
  400418:	6008      	str	r0, [r1, #0]
	REG_TC0_CMR1 |= TC_CMR_ETRGEDG_RISING;
  40041a:	6810      	ldr	r0, [r2, #0]
  40041c:	f440 7080 	orr.w	r0, r0, #256	; 0x100
  400420:	6010      	str	r0, [r2, #0]
	
	REG_TC0_CMR0 |= TC_CMR_ABETRG;
  400422:	6808      	ldr	r0, [r1, #0]
  400424:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
  400428:	6008      	str	r0, [r1, #0]
	REG_TC0_CMR1 |= TC_CMR_ABETRG;
  40042a:	6811      	ldr	r1, [r2, #0]
  40042c:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
  400430:	6011      	str	r1, [r2, #0]
	
	//Step 4
	REG_TC0_BMR |= TC_BMR_QDEN | TC_BMR_POSEN | TC_BMR_EDGPHA | TC_BMR_MAXFILT(1);
  400432:	4965      	ldr	r1, [pc, #404]	; (4005c8 <main+0x2d0>)
  400434:	680a      	ldr	r2, [r1, #0]
  400436:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
  40043a:	f442 5298 	orr.w	r2, r2, #4864	; 0x1300
  40043e:	600a      	str	r2, [r1, #0]
	//Step 5. Start TC0 and TC1
	REG_TC0_CCR0 |= TC_CCR_CLKEN;
  400440:	39c4      	subs	r1, #196	; 0xc4
  400442:	680a      	ldr	r2, [r1, #0]
  400444:	f042 0201 	orr.w	r2, r2, #1
  400448:	600a      	str	r2, [r1, #0]
	REG_TC0_CCR1 |= TC_CCR_CLKEN;
  40044a:	3140      	adds	r1, #64	; 0x40
  40044c:	680a      	ldr	r2, [r1, #0]
  40044e:	f042 0201 	orr.w	r2, r2, #1
  400452:	600a      	str	r2, [r1, #0]
	
	
	//Set up the ADC
	//Give pins to ADC rather than peripheral
	//Disable write protection
	REG_AFEC0_WPMR = AFE_WPMR_WPEN | AFE_WPMR_WPKEY(0x414443);
  400454:	f101 719d 	add.w	r1, r1, #20578304	; 0x13a0000
  400458:	f501 31a1 	add.w	r1, r1, #82432	; 0x14200
  40045c:	31c1      	adds	r1, #193	; 0xc1
  40045e:	4a5b      	ldr	r2, [pc, #364]	; (4005cc <main+0x2d4>)
  400460:	6011      	str	r1, [r2, #0]
	//Set the ADC so it will tell what channel a reading is from.
	REG_AFEC0_EMR |= AFE_EMR_TAG;
  400462:	495b      	ldr	r1, [pc, #364]	; (4005d0 <main+0x2d8>)
  400464:	680a      	ldr	r2, [r1, #0]
  400466:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
  40046a:	600a      	str	r2, [r1, #0]
	REG_AFEC1_EMR |= AFE_EMR_TAG;
  40046c:	f501 4180 	add.w	r1, r1, #16384	; 0x4000
  400470:	680a      	ldr	r2, [r1, #0]
  400472:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
  400476:	600a      	str	r2, [r1, #0]
	//Looks to be a bit weird. Need to consult my schematic. Woops. Forgot to connect those. Yay for V2!
	//NEED TO FIGURE OUT WHICH PINS TO USE AND HOW MANY PHASES TO MEASURE. V1 ONLY MEASURES 2 PHASES
	REG_AFEC0_CHER |= AFE_CHER_CH0;//For Channel 0
  400478:	f5a1 517f 	sub.w	r1, r1, #16320	; 0x3fc0
  40047c:	3934      	subs	r1, #52	; 0x34
  40047e:	680a      	ldr	r2, [r1, #0]
  400480:	f042 0201 	orr.w	r2, r2, #1
  400484:	600a      	str	r2, [r1, #0]
	REG_AFEC1_CHER |= AFE_CHER_CH1;//For Channel 1
  400486:	f501 4180 	add.w	r1, r1, #16384	; 0x4000
  40048a:	680a      	ldr	r2, [r1, #0]
  40048c:	f042 0202 	orr.w	r2, r2, #2
  400490:	600a      	str	r2, [r1, #0]
	//Enable ADC clock (PMC stuff)
	REG_PMC_PCER0 |= PMC_PCER0_PID30 | PMC_PCER0_PID31;
  400492:	681a      	ldr	r2, [r3, #0]
  400494:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
  400498:	601a      	str	r2, [r3, #0]
	//Setup various settings. AFEC_MR starts as 0, so don't need to change anything that should be 0.
	REG_AFEC0_MR |= AFE_MR_TRANSFER(2) | AFE_MR_STARTUP_SUT512;
  40049a:	f5a1 4180 	sub.w	r1, r1, #16384	; 0x4000
  40049e:	3910      	subs	r1, #16
  4004a0:	680a      	ldr	r2, [r1, #0]
  4004a2:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
  4004a6:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
  4004aa:	600a      	str	r2, [r1, #0]
	
	
	
	//Set up SPI
	//Enable peripheral clock
	REG_PMC_PCER0 |= PMC_PCER0_PID19;
  4004ac:	681a      	ldr	r2, [r3, #0]
  4004ae:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
  4004b2:	601a      	str	r2, [r3, #0]
	//Need to connect the SS line from the master (screw terminal in this case) to NPCS0 pin
	//Set to slave mode
	REG_SPI_MR &= ~(SPI_MR_MSTR);
  4004b4:	4a47      	ldr	r2, [pc, #284]	; (4005d4 <main+0x2dc>)
  4004b6:	6813      	ldr	r3, [r2, #0]
  4004b8:	f023 0301 	bic.w	r3, r3, #1
  4004bc:	6013      	str	r3, [r2, #0]
	//Just use the default polarity and phase settings since I'm coding both master and slave.
	//Enable SPI
	REG_SPI_CR |= SPI_CR_SPIEN;
  4004be:	3a04      	subs	r2, #4
  4004c0:	6813      	ldr	r3, [r2, #0]
  4004c2:	f043 0301 	orr.w	r3, r3, #1
  4004c6:	6013      	str	r3, [r2, #0]
	//Set for 16 bit words
	REG_SPI_CSR |= SPI_CSR_BITS_16_BIT;
  4004c8:	3230      	adds	r2, #48	; 0x30
  4004ca:	6813      	ldr	r3, [r2, #0]
  4004cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4004d0:	6013      	str	r3, [r2, #0]
	float KpTorque = 2.4;
	float MotorTorqueConstant = 1.8;
	float ClarkVoltageCommand[2];
	float ParkCurrentCommand[2] = {0,0};
	uint32_t PositionError = 0;
	float ParkVoltageReference[2] = {0,0};
  4004d2:	2300      	movs	r3, #0
  4004d4:	9308      	str	r3, [sp, #32]
  4004d6:	9309      	str	r3, [sp, #36]	; 0x24
  4004d8:	4d3f      	ldr	r5, [pc, #252]	; (4005d8 <main+0x2e0>)
	uint32_t HallB = 0;
	uint32_t HallC = 0;
	
	//Construct arrays of sine and cosine values. Memory heavy (like a quarter of the RAM), but should increase runtime speed.
	static float SinArrayVar[ENCODERRESOLUTION];
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  4004da:	2400      	movs	r4, #0
		SinArrayVar[i] = sin((float)i/2000.*6.283185);
  4004dc:	f8df b124 	ldr.w	fp, [pc, #292]	; 400604 <main+0x30c>
  4004e0:	f8df a124 	ldr.w	sl, [pc, #292]	; 400608 <main+0x310>
  4004e4:	f8df 9124 	ldr.w	r9, [pc, #292]	; 40060c <main+0x314>
  4004e8:	f8df 8124 	ldr.w	r8, [pc, #292]	; 400610 <main+0x318>
  4004ec:	4f3b      	ldr	r7, [pc, #236]	; (4005dc <main+0x2e4>)
  4004ee:	4e3c      	ldr	r6, [pc, #240]	; (4005e0 <main+0x2e8>)
  4004f0:	4620      	mov	r0, r4
  4004f2:	47d8      	blx	fp
  4004f4:	47d0      	blx	sl
  4004f6:	2200      	movs	r2, #0
  4004f8:	4b3a      	ldr	r3, [pc, #232]	; (4005e4 <main+0x2ec>)
  4004fa:	47c8      	blx	r9
  4004fc:	a326      	add	r3, pc, #152	; (adr r3, 400598 <main+0x2a0>)
  4004fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  400502:	47c0      	blx	r8
  400504:	47b8      	blx	r7
  400506:	47b0      	blx	r6
  400508:	f845 0f04 	str.w	r0, [r5, #4]!
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  40050c:	3401      	adds	r4, #1
  40050e:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
  400512:	d1ed      	bne.n	4004f0 <main+0x1f8>
  400514:	4d34      	ldr	r5, [pc, #208]	; (4005e8 <main+0x2f0>)
  400516:	2400      	movs	r4, #0
	}
	static float CosArrayVar[ENCODERRESOLUTION];
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
		CosArrayVar[i] = cos((float)i/2000.*6.283185);
  400518:	f8df b0e8 	ldr.w	fp, [pc, #232]	; 400604 <main+0x30c>
  40051c:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 400608 <main+0x310>
  400520:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 40060c <main+0x314>
  400524:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 400610 <main+0x318>
  400528:	4f30      	ldr	r7, [pc, #192]	; (4005ec <main+0x2f4>)
  40052a:	4e2d      	ldr	r6, [pc, #180]	; (4005e0 <main+0x2e8>)
  40052c:	4620      	mov	r0, r4
  40052e:	47d8      	blx	fp
  400530:	47d0      	blx	sl
  400532:	2200      	movs	r2, #0
  400534:	4b2b      	ldr	r3, [pc, #172]	; (4005e4 <main+0x2ec>)
  400536:	47c8      	blx	r9
  400538:	a317      	add	r3, pc, #92	; (adr r3, 400598 <main+0x2a0>)
  40053a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40053e:	47c0      	blx	r8
  400540:	47b8      	blx	r7
  400542:	47b0      	blx	r6
  400544:	f845 0f04 	str.w	r0, [r5, #4]!
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  400548:	3401      	adds	r4, #1
  40054a:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
  40054e:	d1ed      	bne.n	40052c <main+0x234>
	
	//This is the loop that will run when the motor just boots up.
	//It has not yet caught the index, so the vector control won't work yet
	//This loop just runs the motor very slowly using 6 step commutation using the Hall sensors
	//Set output pins to be output
	REG_PIOD_PER |= PIO_PER_P20 | PIO_PER_P21 | PIO_PER_P22 | PIO_PER_P24 | PIO_PER_P25 | PIO_PER_P26;
  400550:	4b27      	ldr	r3, [pc, #156]	; (4005f0 <main+0x2f8>)
  400552:	681a      	ldr	r2, [r3, #0]
  400554:	f042 62ee 	orr.w	r2, r2, #124780544	; 0x7700000
  400558:	601a      	str	r2, [r3, #0]
	REG_PIOD_OER |= PIO_OER_P20 | PIO_OER_P21 | PIO_OER_P22 | PIO_OER_P24 | PIO_OER_P25 | PIO_OER_P26;
  40055a:	4926      	ldr	r1, [pc, #152]	; (4005f4 <main+0x2fc>)
  40055c:	680a      	ldr	r2, [r1, #0]
  40055e:	f042 62ee 	orr.w	r2, r2, #124780544	; 0x7700000
  400562:	600a      	str	r2, [r1, #0]
	//Set the Hall  Pins to be inputs. See diagram. 
	//HallA is connected to PD30.
	//HallB is connected to PA07.
	//HallC is connected to PA08.
	REG_PIOD_PER |= PIO_PER_P30;
  400564:	681a      	ldr	r2, [r3, #0]
  400566:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
  40056a:	601a      	str	r2, [r3, #0]
	REG_PIOA_PER |= PIO_PER_P7 | PIO_PER_P8;
  40056c:	4a14      	ldr	r2, [pc, #80]	; (4005c0 <main+0x2c8>)
  40056e:	6813      	ldr	r3, [r2, #0]
  400570:	f443 73c0 	orr.w	r3, r3, #384	; 0x180
  400574:	6013      	str	r3, [r2, #0]
	REG_PIOD_ODR |= PIO_ODR_P30;
  400576:	f202 6214 	addw	r2, r2, #1556	; 0x614
  40057a:	6813      	ldr	r3, [r2, #0]
  40057c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
  400580:	6013      	str	r3, [r2, #0]
	REG_PIOA_ODR |= PIO_ODR_P7 | PIO_ODR_P8;
  400582:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  400586:	6813      	ldr	r3, [r2, #0]
  400588:	f443 73c0 	orr.w	r3, r3, #384	; 0x180
  40058c:	6013      	str	r3, [r2, #0]
	while (!HasBeenIndex)
	{
		//Measure the Hall sensor outputs
		HallA = (REG_PIOD_PDSR & PIO_PDSR_P30);
  40058e:	4e1a      	ldr	r6, [pc, #104]	; (4005f8 <main+0x300>)
		HallB = (REG_PIOA_PDSR & PIO_PDSR_P7);
  400590:	4c1a      	ldr	r4, [pc, #104]	; (4005fc <main+0x304>)
		HallC = (REG_PIOA_PDSR & PIO_PDSR_P8);
		//Energize the windings in accordance with simple six step commutation
		SixStepCommutation(000,000,0,HallA,HallB,HallC);
		//Check if the index has been passed.
		HasBeenIndex = REG_TC0_CV1;
  400592:	4d1b      	ldr	r5, [pc, #108]	; (400600 <main+0x308>)
  400594:	e03e      	b.n	400614 <main+0x31c>
  400596:	bf00      	nop
  400598:	3fa6defc 	.word	0x3fa6defc
  40059c:	401921fb 	.word	0x401921fb
  4005a0:	00400255 	.word	0x00400255
  4005a4:	400e0420 	.word	0x400e0420
  4005a8:	0037ff01 	.word	0x0037ff01
  4005ac:	400e0468 	.word	0x400e0468
  4005b0:	400e0424 	.word	0x400e0424
  4005b4:	400e0428 	.word	0x400e0428
  4005b8:	400e0430 	.word	0x400e0430
  4005bc:	400e0410 	.word	0x400e0410
  4005c0:	400e0e00 	.word	0x400e0e00
  4005c4:	40090044 	.word	0x40090044
  4005c8:	400900c4 	.word	0x400900c4
  4005cc:	400b00e4 	.word	0x400b00e4
  4005d0:	400b0008 	.word	0x400b0008
  4005d4:	40088004 	.word	0x40088004
  4005d8:	2000044c 	.word	0x2000044c
  4005dc:	00400ca5 	.word	0x00400ca5
  4005e0:	00402921 	.word	0x00402921
  4005e4:	409f4000 	.word	0x409f4000
  4005e8:	2000238c 	.word	0x2000238c
  4005ec:	00400c11 	.word	0x00400c11
  4005f0:	400e1400 	.word	0x400e1400
  4005f4:	400e1410 	.word	0x400e1410
  4005f8:	400e143c 	.word	0x400e143c
  4005fc:	400e0e3c 	.word	0x400e0e3c
  400600:	40090050 	.word	0x40090050
  400604:	00402b2d 	.word	0x00402b2d
  400608:	004022b5 	.word	0x004022b5
  40060c:	004025b1 	.word	0x004025b1
  400610:	0040235d 	.word	0x0040235d
		HallA = (REG_PIOD_PDSR & PIO_PDSR_P30);
  400614:	6833      	ldr	r3, [r6, #0]
		HallB = (REG_PIOA_PDSR & PIO_PDSR_P7);
  400616:	6822      	ldr	r2, [r4, #0]
		HallC = (REG_PIOA_PDSR & PIO_PDSR_P8);
  400618:	6821      	ldr	r1, [r4, #0]
  40061a:	f401 7180 	and.w	r1, r1, #256	; 0x100
		SixStepCommutation(000,000,0,HallA,HallB,HallC);
  40061e:	9101      	str	r1, [sp, #4]
		HallB = (REG_PIOA_PDSR & PIO_PDSR_P7);
  400620:	f002 0280 	and.w	r2, r2, #128	; 0x80
		SixStepCommutation(000,000,0,HallA,HallB,HallC);
  400624:	9200      	str	r2, [sp, #0]
  400626:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
  40062a:	2200      	movs	r2, #0
  40062c:	4611      	mov	r1, r2
  40062e:	4610      	mov	r0, r2
  400630:	4f51      	ldr	r7, [pc, #324]	; (400778 <main+0x480>)
  400632:	47b8      	blx	r7
		HasBeenIndex = REG_TC0_CV1;
  400634:	682b      	ldr	r3, [r5, #0]
	while (!HasBeenIndex)
  400636:	2b00      	cmp	r3, #0
  400638:	d0ec      	beq.n	400614 <main+0x31c>
	//Putting PWM setup code below the six step section so that the pins are not given to the peripheral
	
	//Set up PWM
	//Need to do PIO stuff for PWM enabling and activate the peripheral clock
	//Give the relevant pins to the PWM peripheral. (PIO stuff)
	REG_PIOD_ABCDSR1 |= PIO_ABCDSR_P20 | PIO_ABCDSR_P21 | PIO_ABCDSR_P22 | PIO_ABCDSR_P24 | PIO_ABCDSR_P25 | PIO_ABCDSR_P26;
  40063a:	4a50      	ldr	r2, [pc, #320]	; (40077c <main+0x484>)
  40063c:	6813      	ldr	r3, [r2, #0]
  40063e:	f043 63ee 	orr.w	r3, r3, #124780544	; 0x7700000
  400642:	6013      	str	r3, [r2, #0]
	//Active the PWM clocks (PMC stuff)
	REG_PMC_PCER1 |= PMC_PCER1_PID36;
  400644:	f5a2 6277 	sub.w	r2, r2, #3952	; 0xf70
  400648:	6813      	ldr	r3, [r2, #0]
  40064a:	f043 0310 	orr.w	r3, r3, #16
  40064e:	6013      	str	r3, [r2, #0]
	//Following steps in the datasheet 39.6.5.1
	//Disable write protection of PWM registers
	REG_PWM_WPCR = PWM_WPCR_WPKEY(0x50574D) | PWM_WPCR_WPCMD(0x0);
  400650:	4a4b      	ldr	r2, [pc, #300]	; (400780 <main+0x488>)
  400652:	4b4c      	ldr	r3, [pc, #304]	; (400784 <main+0x48c>)
  400654:	601a      	str	r2, [r3, #0]
	//Select the clock for each channel. Will use CLKA dealt with just above.
	//Also set the alignment, polarity, deadtime, update type, event selection
	//Set for no deadtime, the FET driver will take care of that.
	//Register starts at zero, so CPOL bit doesn't need to change. CES also should be 0.
	//Probably don't need to set up 1 and 2, since I'm going to sync them, but oh well
	REG_PWM_CMR0 |= PWM_CMR_CPRE_MCK | PWM_CMR_CALG;
  400656:	4a4c      	ldr	r2, [pc, #304]	; (400788 <main+0x490>)
  400658:	6813      	ldr	r3, [r2, #0]
  40065a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  40065e:	6013      	str	r3, [r2, #0]
	REG_PWM_CMR1 |= PWM_CMR_CPRE_MCK | PWM_CMR_CALG;
  400660:	3220      	adds	r2, #32
  400662:	6813      	ldr	r3, [r2, #0]
  400664:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400668:	6013      	str	r3, [r2, #0]
	REG_PWM_CMR2 |= PWM_CMR_CPRE_MCK | PWM_CMR_CALG;
  40066a:	3220      	adds	r2, #32
  40066c:	6813      	ldr	r3, [r2, #0]
  40066e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400672:	6013      	str	r3, [r2, #0]
	//Set period of PWM
	//At 24 V, 4800 give me a resolution of 5 mV
	//I am going to assert this is enough
	REG_PWM_CPRD0 = PWMMAXVALUE;
  400674:	f44f 5396 	mov.w	r3, #4800	; 0x12c0
  400678:	3a34      	subs	r2, #52	; 0x34
  40067a:	6013      	str	r3, [r2, #0]
	REG_PWM_CPRD1 = PWMMAXVALUE;
  40067c:	3220      	adds	r2, #32
  40067e:	6013      	str	r3, [r2, #0]
	REG_PWM_CPRD2 = PWMMAXVALUE;
  400680:	3220      	adds	r2, #32
  400682:	6013      	str	r3, [r2, #0]
	//Init the duty cycle at 0
	REG_PWM_CDTY0 = 0;
  400684:	2300      	movs	r3, #0
  400686:	3a48      	subs	r2, #72	; 0x48
  400688:	6013      	str	r3, [r2, #0]
	REG_PWM_CDTY1 = 0;
  40068a:	3220      	adds	r2, #32
  40068c:	6013      	str	r3, [r2, #0]
	REG_PWM_CDTY2 = 0;
  40068e:	3220      	adds	r2, #32
  400690:	6013      	str	r3, [r2, #0]
	//Sync channels 1 and 2 to channel 0
	//Also set update method. Default is manual update, so that's fine
	REG_PWM_SCM |= PWM_SCM_SYNC0 | PWM_SCM_SYNC1 | PWM_SCM_SYNC2;
  400692:	f5a2 7209 	sub.w	r2, r2, #548	; 0x224
  400696:	6813      	ldr	r3, [r2, #0]
  400698:	f043 0307 	orr.w	r3, r3, #7
  40069c:	6013      	str	r3, [r2, #0]
	//Enable the interrupt channels. Might need them
	REG_PWM_ENA |= PWM_ENA_CHID0 | PWM_ENA_CHID1 | PWM_ENA_CHID2;
  40069e:	3a1c      	subs	r2, #28
  4006a0:	6813      	ldr	r3, [r2, #0]
  4006a2:	f043 0307 	orr.w	r3, r3, #7
  4006a6:	6013      	str	r3, [r2, #0]
    while (1) 
    {
				
		
		//Must first measure the phase currents of A and B.
		CurrentA = ADC0Read(0);
  4006a8:	2000      	movs	r0, #0
  4006aa:	4b38      	ldr	r3, [pc, #224]	; (40078c <main+0x494>)
  4006ac:	4798      	blx	r3
  4006ae:	4604      	mov	r4, r0
		CurrentB = ADC1Read(1);
  4006b0:	2001      	movs	r0, #1
  4006b2:	4b37      	ldr	r3, [pc, #220]	; (400790 <main+0x498>)
  4006b4:	4798      	blx	r3
  4006b6:	4681      	mov	r9, r0
		CurrentA = (float)CurrentA/(4096.)*3.3;
  4006b8:	4d36      	ldr	r5, [pc, #216]	; (400794 <main+0x49c>)
  4006ba:	4620      	mov	r0, r4
  4006bc:	47a8      	blx	r5
  4006be:	4e36      	ldr	r6, [pc, #216]	; (400798 <main+0x4a0>)
  4006c0:	47b0      	blx	r6
  4006c2:	4c36      	ldr	r4, [pc, #216]	; (40079c <main+0x4a4>)
  4006c4:	2200      	movs	r2, #0
  4006c6:	4b36      	ldr	r3, [pc, #216]	; (4007a0 <main+0x4a8>)
  4006c8:	47a0      	blx	r4
  4006ca:	a329      	add	r3, pc, #164	; (adr r3, 400770 <main+0x478>)
  4006cc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4006d0:	47a0      	blx	r4
  4006d2:	e9cd 0102 	strd	r0, r1, [sp, #8]
		CurrentB = (float)CurrentB/(4096.)*3.3;
  4006d6:	4648      	mov	r0, r9
  4006d8:	47a8      	blx	r5
  4006da:	47b0      	blx	r6
  4006dc:	2200      	movs	r2, #0
  4006de:	4b30      	ldr	r3, [pc, #192]	; (4007a0 <main+0x4a8>)
  4006e0:	47a0      	blx	r4
  4006e2:	a323      	add	r3, pc, #140	; (adr r3, 400770 <main+0x478>)
  4006e4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4006e8:	47a0      	blx	r4
  4006ea:	4680      	mov	r8, r0
  4006ec:	4689      	mov	r9, r1
		
		
		//Initial transform of measured current to rotating frame current (where the reference is constant)
		RotorPosition = QDECGetPostionSingle();
  4006ee:	f8df a0ec 	ldr.w	sl, [pc, #236]	; 4007dc <main+0x4e4>
  4006f2:	47d0      	blx	sl
  4006f4:	4683      	mov	fp, r0
		CurrentB = (float)CurrentB/(4096.)*3.3;
  4006f6:	4c2b      	ldr	r4, [pc, #172]	; (4007a4 <main+0x4ac>)
  4006f8:	4640      	mov	r0, r8
  4006fa:	4649      	mov	r1, r9
  4006fc:	47a0      	blx	r4
  4006fe:	4680      	mov	r8, r0
		CurrentA = (float)CurrentA/(4096.)*3.3;
  400700:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400704:	47a0      	blx	r4
		ClarkTransform(ClarkCurrentMeasure, CurrentA, CurrentB);
  400706:	4642      	mov	r2, r8
  400708:	4601      	mov	r1, r0
  40070a:	a80e      	add	r0, sp, #56	; 0x38
  40070c:	4b26      	ldr	r3, [pc, #152]	; (4007a8 <main+0x4b0>)
  40070e:	4798      	blx	r3
		ParkTransform(ParkCurrentMeasure, ClarkCurrentMeasure, RotorPosition, SinArrayVar, CosArrayVar);
  400710:	4e26      	ldr	r6, [pc, #152]	; (4007ac <main+0x4b4>)
  400712:	4f27      	ldr	r7, [pc, #156]	; (4007b0 <main+0x4b8>)
  400714:	9700      	str	r7, [sp, #0]
  400716:	4633      	mov	r3, r6
  400718:	465a      	mov	r2, fp
  40071a:	a90e      	add	r1, sp, #56	; 0x38
  40071c:	a80c      	add	r0, sp, #48	; 0x30
  40071e:	4c25      	ldr	r4, [pc, #148]	; (4007b4 <main+0x4bc>)
  400720:	47a0      	blx	r4
		
		//Temporary P controller for Torque. This is position control, it assumes a desired position will be provided.
		MotorPosition = QDECGetPositionTotal();
  400722:	4b25      	ldr	r3, [pc, #148]	; (4007b8 <main+0x4c0>)
  400724:	4798      	blx	r3
		PositionError = CommandedPosition - MotorPosition;
		CommandedTorque = (float)PositionError*KpTorque;
  400726:	4240      	negs	r0, r0
  400728:	47a8      	blx	r5
  40072a:	4c24      	ldr	r4, [pc, #144]	; (4007bc <main+0x4c4>)
  40072c:	4924      	ldr	r1, [pc, #144]	; (4007c0 <main+0x4c8>)
  40072e:	47a0      	blx	r4
		
		//Define the reference Park Currents
		//ParkCurrent[0] is the flux current. This is 0 for a BLDC.
		//ParkCurrent[1] is the torque current. This depends on the desired torque.
		ParkCurrentCommand[0] = 0;
		ParkCurrentCommand[1] = MotorTorqueConstant*CommandedTorque;
  400730:	4924      	ldr	r1, [pc, #144]	; (4007c4 <main+0x4cc>)
  400732:	47a0      	blx	r4
		
		ParkCurrentError[0] = ParkCurrentCommand[0] - ParkCurrentMeasure[0];
		ParkCurrentError[1] = ParkCurrentCommand[1] - ParkCurrentMeasure[1];
  400734:	4d24      	ldr	r5, [pc, #144]	; (4007c8 <main+0x4d0>)
  400736:	990d      	ldr	r1, [sp, #52]	; 0x34
  400738:	47a8      	blx	r5
  40073a:	4680      	mov	r8, r0
		ParkCurrentError[0] = ParkCurrentCommand[0] - ParkCurrentMeasure[0];
  40073c:	990c      	ldr	r1, [sp, #48]	; 0x30
  40073e:	2000      	movs	r0, #0
  400740:	47a8      	blx	r5
		
		//Now, regulate the Park currents via some controller to get the Park Voltage references.
		//Temporarily just a P controller
		ParkVoltageReference[0] = ParkCurrentError[0]*KParkFlux;
  400742:	4922      	ldr	r1, [pc, #136]	; (4007cc <main+0x4d4>)
  400744:	47a0      	blx	r4
  400746:	9008      	str	r0, [sp, #32]
		ParkVoltageReference[1] = ParkCurrentError[1]*KParkTorque;
  400748:	4921      	ldr	r1, [pc, #132]	; (4007d0 <main+0x4d8>)
  40074a:	4640      	mov	r0, r8
  40074c:	47a0      	blx	r4
  40074e:	9009      	str	r0, [sp, #36]	; 0x24
		
		//Inverse Park transform to get the commanded Clark Voltages
		//Update rotor position again first.
		RotorPosition = QDECGetPostionSingle();
  400750:	47d0      	blx	sl
		InversePark(ClarkVoltageCommand, ParkVoltageReference, RotorPosition, SinArrayVar, CosArrayVar);
  400752:	9700      	str	r7, [sp, #0]
  400754:	4633      	mov	r3, r6
  400756:	4602      	mov	r2, r0
  400758:	a908      	add	r1, sp, #32
  40075a:	a80a      	add	r0, sp, #40	; 0x28
  40075c:	4c1d      	ldr	r4, [pc, #116]	; (4007d4 <main+0x4dc>)
  40075e:	47a0      	blx	r4
		
		//The ClarkVoltageCommand values will be passed to a space vector PWM scheme for output.
		//This gives back the PWM compare values and invert status for each switch. 
		//[0]-[5] are the compare values. [6]-[11] are the invert statuses.
		SVPWMBase(SVPWMOutputValues, ClarkVoltageCommand[0], ClarkVoltageCommand[1], PWMMAXVALUE);
  400760:	f44f 5396 	mov.w	r3, #4800	; 0x12c0
  400764:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  400766:	990a      	ldr	r1, [sp, #40]	; 0x28
  400768:	a804      	add	r0, sp, #16
  40076a:	4c1b      	ldr	r4, [pc, #108]	; (4007d8 <main+0x4e0>)
  40076c:	47a0      	blx	r4
  40076e:	e79b      	b.n	4006a8 <main+0x3b0>
  400770:	66666666 	.word	0x66666666
  400774:	400a6666 	.word	0x400a6666
  400778:	00400809 	.word	0x00400809
  40077c:	400e1470 	.word	0x400e1470
  400780:	50574d00 	.word	0x50574d00
  400784:	400000e4 	.word	0x400000e4
  400788:	40000200 	.word	0x40000200
  40078c:	00400165 	.word	0x00400165
  400790:	00400199 	.word	0x00400199
  400794:	00402b2d 	.word	0x00402b2d
  400798:	004022b5 	.word	0x004022b5
  40079c:	0040235d 	.word	0x0040235d
  4007a0:	3f300000 	.word	0x3f300000
  4007a4:	004028e1 	.word	0x004028e1
  4007a8:	00400ae1 	.word	0x00400ae1
  4007ac:	20000450 	.word	0x20000450
  4007b0:	20002390 	.word	0x20002390
  4007b4:	00400b59 	.word	0x00400b59
  4007b8:	004007e1 	.word	0x004007e1
  4007bc:	00402bdd 	.word	0x00402bdd
  4007c0:	4019999a 	.word	0x4019999a
  4007c4:	3fe66666 	.word	0x3fe66666
  4007c8:	004029c9 	.word	0x004029c9
  4007cc:	3f333333 	.word	0x3f333333
  4007d0:	3fa66666 	.word	0x3fa66666
  4007d4:	00400bb5 	.word	0x00400bb5
  4007d8:	00400871 	.word	0x00400871
  4007dc:	004007fd 	.word	0x004007fd

004007e0 <QDECGetPositionTotal>:
	return REG_TC0_QISR & TC_QISR_DIR;
}

uint32_t QDECGetPositionTotal(void)
{
	uint32_t Position = REG_TC0_CV0;
  4007e0:	4b04      	ldr	r3, [pc, #16]	; (4007f4 <QDECGetPositionTotal+0x14>)
  4007e2:	681b      	ldr	r3, [r3, #0]
	uint32_t Revolution = REG_TC0_CV1;
  4007e4:	4a04      	ldr	r2, [pc, #16]	; (4007f8 <QDECGetPositionTotal+0x18>)
  4007e6:	6812      	ldr	r2, [r2, #0]
	
	return Position + 2000*Revolution;
}
  4007e8:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
  4007ec:	fb00 3002 	mla	r0, r0, r2, r3
  4007f0:	4770      	bx	lr
  4007f2:	bf00      	nop
  4007f4:	40090010 	.word	0x40090010
  4007f8:	40090050 	.word	0x40090050

004007fc <QDECGetPostionSingle>:

uint32_t QDECGetPostionSingle(void)
{
	return REG_TC0_CV0;
  4007fc:	4b01      	ldr	r3, [pc, #4]	; (400804 <QDECGetPostionSingle+0x8>)
  4007fe:	6818      	ldr	r0, [r3, #0]
  400800:	4770      	bx	lr
  400802:	bf00      	nop
  400804:	40090010 	.word	0x40090010

00400808 <SixStepCommutation>:
	}
	*/
	//pick which outputs to turn on
	//Direction == 0  --> Clockwise
	//Direction == 1  --> AntiClockwise
	if (Direction == 0)
  400808:	b922      	cbnz	r2, 400814 <SixStepCommutation+0xc>
	{
		if (!HallA && !HallB && HallC)//001
  40080a:	b96b      	cbnz	r3, 400828 <SixStepCommutation+0x20>
  40080c:	9b00      	ldr	r3, [sp, #0]
  40080e:	bb0b      	cbnz	r3, 400854 <SixStepCommutation+0x4c>
  400810:	9b01      	ldr	r3, [sp, #4]
  400812:	b923      	cbnz	r3, 40081e <SixStepCommutation+0x16>
	{
		asm("nop");
	}
	*/
	//Set the outputs to 0
	REG_PIOD_CODR = 0xFFFFFFFF;
  400814:	f04f 32ff 	mov.w	r2, #4294967295
  400818:	4b12      	ldr	r3, [pc, #72]	; (400864 <SixStepCommutation+0x5c>)
  40081a:	601a      	str	r2, [r3, #0]
  40081c:	4770      	bx	lr
			REG_PIOD_SODR = (1<<HALLAUPPER) | (1<<HALLBLOWER);
  40081e:	f04f 7204 	mov.w	r2, #34603008	; 0x2100000
  400822:	4b11      	ldr	r3, [pc, #68]	; (400868 <SixStepCommutation+0x60>)
  400824:	601a      	str	r2, [r3, #0]
  400826:	e7f5      	b.n	400814 <SixStepCommutation+0xc>
		}else if (HallA && !HallB && HallC)//101
  400828:	9b00      	ldr	r3, [sp, #0]
  40082a:	b95b      	cbnz	r3, 400844 <SixStepCommutation+0x3c>
  40082c:	9b01      	ldr	r3, [sp, #4]
  40082e:	b923      	cbnz	r3, 40083a <SixStepCommutation+0x32>
			REG_PIOD_SODR = (1<<HALLBUPPER) | (1<<HALLCLOWER);
  400830:	f04f 6284 	mov.w	r2, #69206016	; 0x4200000
  400834:	4b0c      	ldr	r3, [pc, #48]	; (400868 <SixStepCommutation+0x60>)
  400836:	601a      	str	r2, [r3, #0]
  400838:	e7ec      	b.n	400814 <SixStepCommutation+0xc>
			REG_PIOD_SODR = (1<<HALLAUPPER) | (1<<HALLCLOWER);
  40083a:	f04f 6282 	mov.w	r2, #68157440	; 0x4100000
  40083e:	4b0a      	ldr	r3, [pc, #40]	; (400868 <SixStepCommutation+0x60>)
  400840:	601a      	str	r2, [r3, #0]
  400842:	e7e7      	b.n	400814 <SixStepCommutation+0xc>
		}else if (HallA && HallB && !HallC)//110
  400844:	9b01      	ldr	r3, [sp, #4]
  400846:	2b00      	cmp	r3, #0
  400848:	d1e4      	bne.n	400814 <SixStepCommutation+0xc>
			REG_PIOD_SODR = (1<<HALLALOWER) | (1<<HALLBUPPER);
  40084a:	f04f 7290 	mov.w	r2, #18874368	; 0x1200000
  40084e:	4b06      	ldr	r3, [pc, #24]	; (400868 <SixStepCommutation+0x60>)
  400850:	601a      	str	r2, [r3, #0]
  400852:	e7df      	b.n	400814 <SixStepCommutation+0xc>
		}else if (!HallA && HallB && !HallC)//010
  400854:	9b01      	ldr	r3, [sp, #4]
  400856:	2b00      	cmp	r3, #0
  400858:	d1dc      	bne.n	400814 <SixStepCommutation+0xc>
			REG_PIOD_SODR = (1<<HALLALOWER) | (HALLCUPPER);
  40085a:	4a04      	ldr	r2, [pc, #16]	; (40086c <SixStepCommutation+0x64>)
  40085c:	4b02      	ldr	r3, [pc, #8]	; (400868 <SixStepCommutation+0x60>)
  40085e:	601a      	str	r2, [r3, #0]
  400860:	e7d8      	b.n	400814 <SixStepCommutation+0xc>
  400862:	bf00      	nop
  400864:	400e1434 	.word	0x400e1434
  400868:	400e1430 	.word	0x400e1430
  40086c:	01000016 	.word	0x01000016

00400870 <SVPWMBase>:

//Takes reference Clark voltages and the Max PWM count value as input.
//Returns PWM compare values for each mosfet and whether they should be inverted

void SVPWMBase(uint32_t SVPWMOuput[] ,float ClarkVoltageA, float ClarkVoltageB, uint32_t PWMMax)
{
  400870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400874:	b085      	sub	sp, #20
  400876:	4604      	mov	r4, r0
  400878:	460d      	mov	r5, r1
  40087a:	4616      	mov	r6, r2
  40087c:	469a      	mov	sl, r3
	
	uint32_t Sector = 0;
	uint32_t Q = 0;
	float SVPWMVdc = 16;
	float ClarkVoltageAAbs = fabs(ClarkVoltageA);
  40087e:	f021 4000 	bic.w	r0, r1, #2147483648	; 0x80000000
	//The first 6 values are the PWM compare values. The second 6 are whether they should be inverted. 1 is inverted. 0 is non-inverted.
	//uint32_t SVPWMOuput[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
	
	
	//We will use b to determine the sector. a and c will be used later
	float a = ClarkVoltageAAbs + ONEOVERROOTTHREE*ClarkVoltageBAbs;
  400882:	4f8b      	ldr	r7, [pc, #556]	; (400ab0 <SVPWMBase+0x240>)
  400884:	47b8      	blx	r7
  400886:	4680      	mov	r8, r0
  400888:	4689      	mov	r9, r1
	float ClarkVoltageBAbs = fabs(ClarkVoltageB);
  40088a:	f026 4000 	bic.w	r0, r6, #2147483648	; 0x80000000
	float a = ClarkVoltageAAbs + ONEOVERROOTTHREE*ClarkVoltageBAbs;
  40088e:	47b8      	blx	r7
  400890:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400894:	a382      	add	r3, pc, #520	; (adr r3, 400aa0 <SVPWMBase+0x230>)
  400896:	e9d3 2300 	ldrd	r2, r3, [r3]
  40089a:	4f86      	ldr	r7, [pc, #536]	; (400ab4 <SVPWMBase+0x244>)
  40089c:	47b8      	blx	r7
  40089e:	e9cd 0100 	strd	r0, r1, [sp]
  4008a2:	4602      	mov	r2, r0
  4008a4:	460b      	mov	r3, r1
  4008a6:	4640      	mov	r0, r8
  4008a8:	4649      	mov	r1, r9
  4008aa:	4f83      	ldr	r7, [pc, #524]	; (400ab8 <SVPWMBase+0x248>)
  4008ac:	47b8      	blx	r7
  4008ae:	4f83      	ldr	r7, [pc, #524]	; (400abc <SVPWMBase+0x24c>)
  4008b0:	47b8      	blx	r7
  4008b2:	4683      	mov	fp, r0
	float b = ClarkVoltageAAbs - ONEOVERROOTTHREE*ClarkVoltageBAbs;
  4008b4:	e9dd 2300 	ldrd	r2, r3, [sp]
  4008b8:	4640      	mov	r0, r8
  4008ba:	4649      	mov	r1, r9
  4008bc:	f8df 8218 	ldr.w	r8, [pc, #536]	; 400ad8 <SVPWMBase+0x268>
  4008c0:	47c0      	blx	r8
  4008c2:	47b8      	blx	r7
  4008c4:	4607      	mov	r7, r0
	float c = TWOOVERROOTTHREE*ClarkVoltageBAbs;
	
	
	//Determine what sector we are in.
	//This used the flowchart from chapter 2 of "Vector Control of Three-Phase AC Machines" by Quang and Dittrich.
	if (ClarkVoltageB < 0)
  4008c6:	2100      	movs	r1, #0
  4008c8:	4630      	mov	r0, r6
  4008ca:	4b7d      	ldr	r3, [pc, #500]	; (400ac0 <SVPWMBase+0x250>)
  4008cc:	4798      	blx	r3
  4008ce:	2800      	cmp	r0, #0
  4008d0:	d150      	bne.n	400974 <SVPWMBase+0x104>
	float c = TWOOVERROOTTHREE*ClarkVoltageBAbs;
  4008d2:	a375      	add	r3, pc, #468	; (adr r3, 400aa8 <SVPWMBase+0x238>)
  4008d4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4008d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4008dc:	4e75      	ldr	r6, [pc, #468]	; (400ab4 <SVPWMBase+0x244>)
  4008de:	47b0      	blx	r6
  4008e0:	4b76      	ldr	r3, [pc, #472]	; (400abc <SVPWMBase+0x24c>)
  4008e2:	4798      	blx	r3
  4008e4:	4606      	mov	r6, r0
			}
		}
	} 
	else
	{
		if (ClarkVoltageA < 0)
  4008e6:	2100      	movs	r1, #0
  4008e8:	4628      	mov	r0, r5
  4008ea:	4b75      	ldr	r3, [pc, #468]	; (400ac0 <SVPWMBase+0x250>)
  4008ec:	4798      	blx	r3
  4008ee:	2800      	cmp	r0, #0
  4008f0:	d164      	bne.n	4009bc <SVPWMBase+0x14c>
			}
		} 
		else
		{
			Q = 1;
			if (b < 0)
  4008f2:	2100      	movs	r1, #0
  4008f4:	4638      	mov	r0, r7
  4008f6:	4b72      	ldr	r3, [pc, #456]	; (400ac0 <SVPWMBase+0x250>)
  4008f8:	4798      	blx	r3
  4008fa:	2800      	cmp	r0, #0
  4008fc:	f040 80a7 	bne.w	400a4e <SVPWMBase+0x1de>
	{
		Ur = c;
		Ul = b;
	}
	//Now we have Ur and Ul. We can get the relative times by dividing these by the voltage of the full vectors Vdc
	T1 = Ur/SVPWMVdc;
  400900:	4d70      	ldr	r5, [pc, #448]	; (400ac4 <SVPWMBase+0x254>)
  400902:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  400906:	4638      	mov	r0, r7
  400908:	47a8      	blx	r5
  40090a:	4680      	mov	r8, r0
	T2 = Ul/SVPWMVdc;
  40090c:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  400910:	4630      	mov	r0, r6
  400912:	47a8      	blx	r5
  400914:	4607      	mov	r7, r0
	T0 = 1 - T1 - T2;
  400916:	4e6c      	ldr	r6, [pc, #432]	; (400ac8 <SVPWMBase+0x258>)
  400918:	4641      	mov	r1, r8
  40091a:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  40091e:	47b0      	blx	r6
  400920:	4639      	mov	r1, r7
  400922:	47b0      	blx	r6
	//I decided the method used above is less computationally intensive to get the times.
	//But, I am going to use this new paper for the switching levels because they provide a nice chart with the values
	//laid out for all the switches. This is then easy to convert to PWM compare values.
	//I assume that the full phase correct PWM generation where the counter counts both up and down is used.
	//This generates center-aligned PWM.
	float x = (T0/2);
  400924:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  400928:	47a8      	blx	r5
  40092a:	4605      	mov	r5, r0
	float y = ((T0/2) + T1);
  40092c:	4e67      	ldr	r6, [pc, #412]	; (400acc <SVPWMBase+0x25c>)
  40092e:	4641      	mov	r1, r8
  400930:	47b0      	blx	r6
  400932:	4683      	mov	fp, r0
	float z = ((T0/2) + T1 + T2);
  400934:	4601      	mov	r1, r0
  400936:	4638      	mov	r0, r7
  400938:	47b0      	blx	r6
  40093a:	4681      	mov	r9, r0
	if (Sector == 1)
	{
		USwitch = x;
		Invert = 0;
  40093c:	f04f 0800 	mov.w	r8, #0
		Invert = 1;
		VSwitch = x;
		WSwitch = y;
	
	}
	USwitch = USwitch*PWMMax;
  400940:	4650      	mov	r0, sl
  400942:	4b63      	ldr	r3, [pc, #396]	; (400ad0 <SVPWMBase+0x260>)
  400944:	4798      	blx	r3
  400946:	4607      	mov	r7, r0
  400948:	4e5e      	ldr	r6, [pc, #376]	; (400ac4 <SVPWMBase+0x254>)
  40094a:	4601      	mov	r1, r0
  40094c:	4628      	mov	r0, r5
  40094e:	47b0      	blx	r6
	VSwitch = VSwitch*PWMMax;
	WSwitch = WSwitch*PWMMax;
	
	SVPWMOuput[0] = (uint32_t)USwitch;
  400950:	4d60      	ldr	r5, [pc, #384]	; (400ad4 <SVPWMBase+0x264>)
  400952:	47a8      	blx	r5
  400954:	6020      	str	r0, [r4, #0]
	VSwitch = VSwitch*PWMMax;
  400956:	4639      	mov	r1, r7
  400958:	4658      	mov	r0, fp
  40095a:	47b0      	blx	r6
	SVPWMOuput[1] = (uint32_t)VSwitch;
  40095c:	47a8      	blx	r5
  40095e:	6060      	str	r0, [r4, #4]
	WSwitch = WSwitch*PWMMax;
  400960:	4639      	mov	r1, r7
  400962:	4648      	mov	r0, r9
  400964:	47b0      	blx	r6
	SVPWMOuput[2] = (uint32_t)WSwitch;
  400966:	47a8      	blx	r5
  400968:	60a0      	str	r0, [r4, #8]
	SVPWMOuput[3] = Invert;
  40096a:	f8c4 800c 	str.w	r8, [r4, #12]
	
	
  40096e:	b005      	add	sp, #20
  400970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (ClarkVoltageA < 0)
  400974:	2100      	movs	r1, #0
  400976:	4628      	mov	r0, r5
  400978:	4b51      	ldr	r3, [pc, #324]	; (400ac0 <SVPWMBase+0x250>)
  40097a:	4798      	blx	r3
  40097c:	b988      	cbnz	r0, 4009a2 <SVPWMBase+0x132>
			if (b < 0)
  40097e:	f04f 0801 	mov.w	r8, #1
  400982:	2100      	movs	r1, #0
  400984:	4638      	mov	r0, r7
  400986:	4b4e      	ldr	r3, [pc, #312]	; (400ac0 <SVPWMBase+0x250>)
  400988:	4798      	blx	r3
  40098a:	b908      	cbnz	r0, 400990 <SVPWMBase+0x120>
  40098c:	f04f 0800 	mov.w	r8, #0
  400990:	f088 0801 	eor.w	r8, r8, #1
		Invert = 0;
  400994:	fa5f f888 	uxtb.w	r8, r8
	float y = ((T0/2) + T1);
  400998:	f04f 597c 	mov.w	r9, #1056964608	; 0x3f000000
	float x = (T0/2);
  40099c:	46cb      	mov	fp, r9
	float z = ((T0/2) + T1 + T2);
  40099e:	464d      	mov	r5, r9
  4009a0:	e7ce      	b.n	400940 <SVPWMBase+0xd0>
			if (b < 0)
  4009a2:	2100      	movs	r1, #0
  4009a4:	4638      	mov	r0, r7
  4009a6:	4b46      	ldr	r3, [pc, #280]	; (400ac0 <SVPWMBase+0x250>)
  4009a8:	4798      	blx	r3
  4009aa:	2800      	cmp	r0, #0
  4009ac:	d12c      	bne.n	400a08 <SVPWMBase+0x198>
		Invert = 1;
  4009ae:	f04f 0801 	mov.w	r8, #1
	float z = ((T0/2) + T1 + T2);
  4009b2:	f04f 597c 	mov.w	r9, #1056964608	; 0x3f000000
	float y = ((T0/2) + T1);
  4009b6:	46cb      	mov	fp, r9
	float x = (T0/2);
  4009b8:	464d      	mov	r5, r9
  4009ba:	e7c1      	b.n	400940 <SVPWMBase+0xd0>
			if (b < 0)
  4009bc:	2100      	movs	r1, #0
  4009be:	4638      	mov	r0, r7
  4009c0:	4b3f      	ldr	r3, [pc, #252]	; (400ac0 <SVPWMBase+0x250>)
  4009c2:	4798      	blx	r3
  4009c4:	2800      	cmp	r0, #0
  4009c6:	d166      	bne.n	400a96 <SVPWMBase+0x226>
	T1 = Ur/SVPWMVdc;
  4009c8:	4d3e      	ldr	r5, [pc, #248]	; (400ac4 <SVPWMBase+0x254>)
  4009ca:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  4009ce:	4630      	mov	r0, r6
  4009d0:	47a8      	blx	r5
  4009d2:	4680      	mov	r8, r0
	T2 = Ul/SVPWMVdc;
  4009d4:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  4009d8:	4638      	mov	r0, r7
  4009da:	47a8      	blx	r5
  4009dc:	4606      	mov	r6, r0
	T0 = 1 - T1 - T2;
  4009de:	4f3a      	ldr	r7, [pc, #232]	; (400ac8 <SVPWMBase+0x258>)
  4009e0:	4641      	mov	r1, r8
  4009e2:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4009e6:	47b8      	blx	r7
  4009e8:	4631      	mov	r1, r6
  4009ea:	47b8      	blx	r7
	float x = (T0/2);
  4009ec:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4009f0:	47a8      	blx	r5
  4009f2:	4683      	mov	fp, r0
	float y = ((T0/2) + T1);
  4009f4:	4d35      	ldr	r5, [pc, #212]	; (400acc <SVPWMBase+0x25c>)
  4009f6:	4641      	mov	r1, r8
  4009f8:	47a8      	blx	r5
  4009fa:	4681      	mov	r9, r0
	float z = ((T0/2) + T1 + T2);
  4009fc:	4631      	mov	r1, r6
  4009fe:	47a8      	blx	r5
  400a00:	4605      	mov	r5, r0
		Invert = 0;
  400a02:	f04f 0800 	mov.w	r8, #0
  400a06:	e79b      	b.n	400940 <SVPWMBase+0xd0>
	T1 = Ur/SVPWMVdc;
  400a08:	4d2e      	ldr	r5, [pc, #184]	; (400ac4 <SVPWMBase+0x254>)
  400a0a:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  400a0e:	4658      	mov	r0, fp
  400a10:	47a8      	blx	r5
  400a12:	4680      	mov	r8, r0
		Ul = -b;
  400a14:	f107 4000 	add.w	r0, r7, #2147483648	; 0x80000000
	T2 = Ul/SVPWMVdc;
  400a18:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  400a1c:	47a8      	blx	r5
  400a1e:	4607      	mov	r7, r0
	T0 = 1 - T1 - T2;
  400a20:	4e29      	ldr	r6, [pc, #164]	; (400ac8 <SVPWMBase+0x258>)
  400a22:	4641      	mov	r1, r8
  400a24:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  400a28:	47b0      	blx	r6
  400a2a:	4639      	mov	r1, r7
  400a2c:	47b0      	blx	r6
	float x = (T0/2);
  400a2e:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  400a32:	47a8      	blx	r5
  400a34:	4681      	mov	r9, r0
	float y = ((T0/2) + T1);
  400a36:	4e25      	ldr	r6, [pc, #148]	; (400acc <SVPWMBase+0x25c>)
  400a38:	4601      	mov	r1, r0
  400a3a:	4640      	mov	r0, r8
  400a3c:	47b0      	blx	r6
  400a3e:	4605      	mov	r5, r0
	float z = ((T0/2) + T1 + T2);
  400a40:	4601      	mov	r1, r0
  400a42:	4638      	mov	r0, r7
  400a44:	47b0      	blx	r6
  400a46:	4683      	mov	fp, r0
		Invert = 0;
  400a48:	f04f 0800 	mov.w	r8, #0
  400a4c:	e778      	b.n	400940 <SVPWMBase+0xd0>
		Ul = -b;
  400a4e:	f107 4700 	add.w	r7, r7, #2147483648	; 0x80000000
	T1 = Ur/SVPWMVdc;
  400a52:	4d1c      	ldr	r5, [pc, #112]	; (400ac4 <SVPWMBase+0x254>)
  400a54:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  400a58:	4658      	mov	r0, fp
  400a5a:	47a8      	blx	r5
  400a5c:	4680      	mov	r8, r0
	T2 = Ul/SVPWMVdc;
  400a5e:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
  400a62:	4638      	mov	r0, r7
  400a64:	47a8      	blx	r5
  400a66:	4607      	mov	r7, r0
	T0 = 1 - T1 - T2;
  400a68:	4e17      	ldr	r6, [pc, #92]	; (400ac8 <SVPWMBase+0x258>)
  400a6a:	4641      	mov	r1, r8
  400a6c:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  400a70:	47b0      	blx	r6
  400a72:	4639      	mov	r1, r7
  400a74:	47b0      	blx	r6
	float x = (T0/2);
  400a76:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  400a7a:	47a8      	blx	r5
  400a7c:	4681      	mov	r9, r0
	float y = ((T0/2) + T1);
  400a7e:	4e13      	ldr	r6, [pc, #76]	; (400acc <SVPWMBase+0x25c>)
  400a80:	4601      	mov	r1, r0
  400a82:	4640      	mov	r0, r8
  400a84:	47b0      	blx	r6
  400a86:	4605      	mov	r5, r0
	float z = ((T0/2) + T1 + T2);
  400a88:	4601      	mov	r1, r0
  400a8a:	4638      	mov	r0, r7
  400a8c:	47b0      	blx	r6
  400a8e:	4683      	mov	fp, r0
		Invert = 1;
  400a90:	f04f 0801 	mov.w	r8, #1
  400a94:	e754      	b.n	400940 <SVPWMBase+0xd0>
		Ur = -b;
  400a96:	f107 4000 	add.w	r0, r7, #2147483648	; 0x80000000
		Ul = a;
  400a9a:	465f      	mov	r7, fp
		Ur = -b;
  400a9c:	4683      	mov	fp, r0
		Ul = a;
  400a9e:	e7d8      	b.n	400a52 <SVPWMBase+0x1e2>
  400aa0:	b50b0f28 	.word	0xb50b0f28
  400aa4:	3fe279a6 	.word	0x3fe279a6
  400aa8:	b50b0f28 	.word	0xb50b0f28
  400aac:	3ff279a6 	.word	0x3ff279a6
  400ab0:	004022b5 	.word	0x004022b5
  400ab4:	0040235d 	.word	0x0040235d
  400ab8:	00401ff9 	.word	0x00401ff9
  400abc:	00402921 	.word	0x00402921
  400ac0:	00402f19 	.word	0x00402f19
  400ac4:	00402bdd 	.word	0x00402bdd
  400ac8:	004029c9 	.word	0x004029c9
  400acc:	004029cd 	.word	0x004029cd
  400ad0:	00402b2d 	.word	0x00402b2d
  400ad4:	00402f69 	.word	0x00402f69
  400ad8:	00401ff5 	.word	0x00401ff5
  400adc:	00000000 	.word	0x00000000

00400ae0 <ClarkTransform>:
#include "Transforms.h"


//Clark Transform. Input is measured winding currents. Output is Clark currents, which are rotating.
//element[0] is i_alpha. element[1] is i_beta.
void ClarkTransform(float ClarkCurrent[], uint32_t CurrentA, uint32_t CurrentB){
  400ae0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400ae4:	4604      	mov	r4, r0
  400ae6:	4617      	mov	r7, r2
		
	//ClarkCurrent[0] is i_alpha. ClarkCurrent[1] is i_beta.
	ClarkCurrent[0] = (float) CurrentA;
  400ae8:	4d15      	ldr	r5, [pc, #84]	; (400b40 <ClarkTransform+0x60>)
  400aea:	4608      	mov	r0, r1
  400aec:	47a8      	blx	r5
  400aee:	4606      	mov	r6, r0
  400af0:	6020      	str	r0, [r4, #0]
	ClarkCurrent[1] = (float) CurrentA/1.73205 + (float) CurrentB*1.15470;
  400af2:	4638      	mov	r0, r7
  400af4:	47a8      	blx	r5
  400af6:	4d13      	ldr	r5, [pc, #76]	; (400b44 <ClarkTransform+0x64>)
  400af8:	47a8      	blx	r5
  400afa:	a30d      	add	r3, pc, #52	; (adr r3, 400b30 <ClarkTransform+0x50>)
  400afc:	e9d3 2300 	ldrd	r2, r3, [r3]
  400b00:	4f11      	ldr	r7, [pc, #68]	; (400b48 <ClarkTransform+0x68>)
  400b02:	47b8      	blx	r7
  400b04:	4680      	mov	r8, r0
  400b06:	4689      	mov	r9, r1
  400b08:	4630      	mov	r0, r6
  400b0a:	47a8      	blx	r5
  400b0c:	a30a      	add	r3, pc, #40	; (adr r3, 400b38 <ClarkTransform+0x58>)
  400b0e:	e9d3 2300 	ldrd	r2, r3, [r3]
  400b12:	4d0e      	ldr	r5, [pc, #56]	; (400b4c <ClarkTransform+0x6c>)
  400b14:	47a8      	blx	r5
  400b16:	4602      	mov	r2, r0
  400b18:	460b      	mov	r3, r1
  400b1a:	4640      	mov	r0, r8
  400b1c:	4649      	mov	r1, r9
  400b1e:	4d0c      	ldr	r5, [pc, #48]	; (400b50 <ClarkTransform+0x70>)
  400b20:	47a8      	blx	r5
  400b22:	4b0c      	ldr	r3, [pc, #48]	; (400b54 <ClarkTransform+0x74>)
  400b24:	4798      	blx	r3
  400b26:	6060      	str	r0, [r4, #4]
  400b28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400b2c:	f3af 8000 	nop.w
  400b30:	b50b0f28 	.word	0xb50b0f28
  400b34:	3ff279a6 	.word	0x3ff279a6
  400b38:	0f9096bc 	.word	0x0f9096bc
  400b3c:	3ffbb67a 	.word	0x3ffbb67a
  400b40:	00402b2d 	.word	0x00402b2d
  400b44:	004022b5 	.word	0x004022b5
  400b48:	0040235d 	.word	0x0040235d
  400b4c:	004025b1 	.word	0x004025b1
  400b50:	00401ff9 	.word	0x00401ff9
  400b54:	00402921 	.word	0x00402921

00400b58 <ParkTransform>:
	
}

//Park Transform. Input is Clark currents. Output is Park currents, which are stationary.
//element[0] is i_d (flux). element[1] is i_q (torque).
void ParkTransform(float ParkCurrent[], float ClarkCurrent[], uint32_t RotorPosition, float SinArray[], float CosArray[]){
  400b58:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400b5c:	4607      	mov	r7, r0
  400b5e:	460d      	mov	r5, r1
  400b60:	4616      	mov	r6, r2
  400b62:	469a      	mov	sl, r3
  400b64:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
	
	//ParkCurrent[0] is i_d. ParkCurrent[1] is i_q.
	ParkCurrent[0] = ClarkCurrent[0]*CosArray[RotorPosition] + ClarkCurrent[1]*SinArray[RotorPosition];
  400b68:	4c10      	ldr	r4, [pc, #64]	; (400bac <ParkTransform+0x54>)
  400b6a:	f859 1022 	ldr.w	r1, [r9, r2, lsl #2]
  400b6e:	6828      	ldr	r0, [r5, #0]
  400b70:	47a0      	blx	r4
  400b72:	4683      	mov	fp, r0
  400b74:	f85a 1026 	ldr.w	r1, [sl, r6, lsl #2]
  400b78:	6868      	ldr	r0, [r5, #4]
  400b7a:	47a0      	blx	r4
  400b7c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 400bb0 <ParkTransform+0x58>
  400b80:	4601      	mov	r1, r0
  400b82:	4658      	mov	r0, fp
  400b84:	47c0      	blx	r8
  400b86:	6038      	str	r0, [r7, #0]
	ParkCurrent[1] = -ClarkCurrent[0]*SinArray[RotorPosition] + ClarkCurrent[1]*CosArray[RotorPosition];
  400b88:	6828      	ldr	r0, [r5, #0]
  400b8a:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  400b8e:	f85a 1026 	ldr.w	r1, [sl, r6, lsl #2]
  400b92:	47a0      	blx	r4
  400b94:	4682      	mov	sl, r0
  400b96:	f859 1026 	ldr.w	r1, [r9, r6, lsl #2]
  400b9a:	6868      	ldr	r0, [r5, #4]
  400b9c:	47a0      	blx	r4
  400b9e:	4601      	mov	r1, r0
  400ba0:	4650      	mov	r0, sl
  400ba2:	47c0      	blx	r8
  400ba4:	6078      	str	r0, [r7, #4]
  400ba6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400baa:	bf00      	nop
  400bac:	00402bdd 	.word	0x00402bdd
  400bb0:	004029cd 	.word	0x004029cd

00400bb4 <InversePark>:
}

//Inverse Park Transform. Input is stationary reference voltages, which are the Park reference voltages. Outputs the Clark reference voltages.
//element[0] is V_alpha_ref. element[1] is V_beta_ref.
//The stationary reference voltages come from the control loop.
void InversePark(float ClarkVoltageRef[], float StationaryVoltageRef[], uint32_t RotorPosition, float SinArray[], float CosArray[]){
  400bb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400bb8:	4607      	mov	r7, r0
  400bba:	460d      	mov	r5, r1
  400bbc:	4616      	mov	r6, r2
  400bbe:	4699      	mov	r9, r3
  400bc0:	f8dd 8020 	ldr.w	r8, [sp, #32]
	
	ClarkVoltageRef[0] = StationaryVoltageRef[0]*CosArray[RotorPosition] - StationaryVoltageRef[1]*SinArray[RotorPosition];
  400bc4:	4c0f      	ldr	r4, [pc, #60]	; (400c04 <InversePark+0x50>)
  400bc6:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
  400bca:	6828      	ldr	r0, [r5, #0]
  400bcc:	47a0      	blx	r4
  400bce:	4682      	mov	sl, r0
  400bd0:	f859 1026 	ldr.w	r1, [r9, r6, lsl #2]
  400bd4:	6868      	ldr	r0, [r5, #4]
  400bd6:	47a0      	blx	r4
  400bd8:	4601      	mov	r1, r0
  400bda:	4650      	mov	r0, sl
  400bdc:	4b0a      	ldr	r3, [pc, #40]	; (400c08 <InversePark+0x54>)
  400bde:	4798      	blx	r3
  400be0:	6038      	str	r0, [r7, #0]
	ClarkVoltageRef[1] = StationaryVoltageRef[0]*SinArray[RotorPosition] + StationaryVoltageRef[1]*CosArray[RotorPosition];
  400be2:	f859 1026 	ldr.w	r1, [r9, r6, lsl #2]
  400be6:	6828      	ldr	r0, [r5, #0]
  400be8:	47a0      	blx	r4
  400bea:	4681      	mov	r9, r0
  400bec:	f858 1026 	ldr.w	r1, [r8, r6, lsl #2]
  400bf0:	6868      	ldr	r0, [r5, #4]
  400bf2:	47a0      	blx	r4
  400bf4:	4601      	mov	r1, r0
  400bf6:	4648      	mov	r0, r9
  400bf8:	4b04      	ldr	r3, [pc, #16]	; (400c0c <InversePark+0x58>)
  400bfa:	4798      	blx	r3
  400bfc:	6078      	str	r0, [r7, #4]
  400bfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400c02:	bf00      	nop
  400c04:	00402bdd 	.word	0x00402bdd
  400c08:	004029c9 	.word	0x004029c9
  400c0c:	004029cd 	.word	0x004029cd

00400c10 <cos>:
  400c10:	b530      	push	{r4, r5, lr}
  400c12:	4a22      	ldr	r2, [pc, #136]	; (400c9c <cos+0x8c>)
  400c14:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  400c18:	4293      	cmp	r3, r2
  400c1a:	b087      	sub	sp, #28
  400c1c:	dd1b      	ble.n	400c56 <cos+0x46>
  400c1e:	4a20      	ldr	r2, [pc, #128]	; (400ca0 <cos+0x90>)
  400c20:	4293      	cmp	r3, r2
  400c22:	dd05      	ble.n	400c30 <cos+0x20>
  400c24:	4602      	mov	r2, r0
  400c26:	460b      	mov	r3, r1
  400c28:	f001 f9e4 	bl	401ff4 <__aeabi_dsub>
  400c2c:	b007      	add	sp, #28
  400c2e:	bd30      	pop	{r4, r5, pc}
  400c30:	aa02      	add	r2, sp, #8
  400c32:	f000 f87d 	bl	400d30 <__ieee754_rem_pio2>
  400c36:	f000 0303 	and.w	r3, r0, #3
  400c3a:	2b01      	cmp	r3, #1
  400c3c:	d01a      	beq.n	400c74 <cos+0x64>
  400c3e:	2b02      	cmp	r3, #2
  400c40:	d00f      	beq.n	400c62 <cos+0x52>
  400c42:	b31b      	cbz	r3, 400c8c <cos+0x7c>
  400c44:	2401      	movs	r4, #1
  400c46:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400c4a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400c4e:	9400      	str	r4, [sp, #0]
  400c50:	f000 fffe 	bl	401c50 <__kernel_sin>
  400c54:	e7ea      	b.n	400c2c <cos+0x1c>
  400c56:	2200      	movs	r2, #0
  400c58:	2300      	movs	r3, #0
  400c5a:	f000 fa8d 	bl	401178 <__kernel_cos>
  400c5e:	b007      	add	sp, #28
  400c60:	bd30      	pop	{r4, r5, pc}
  400c62:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400c66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400c6a:	f000 fa85 	bl	401178 <__kernel_cos>
  400c6e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400c72:	e7db      	b.n	400c2c <cos+0x1c>
  400c74:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  400c78:	9300      	str	r3, [sp, #0]
  400c7a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400c7e:	4622      	mov	r2, r4
  400c80:	462b      	mov	r3, r5
  400c82:	f000 ffe5 	bl	401c50 <__kernel_sin>
  400c86:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400c8a:	e7cf      	b.n	400c2c <cos+0x1c>
  400c8c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400c90:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400c94:	f000 fa70 	bl	401178 <__kernel_cos>
  400c98:	e7c8      	b.n	400c2c <cos+0x1c>
  400c9a:	bf00      	nop
  400c9c:	3fe921fb 	.word	0x3fe921fb
  400ca0:	7fefffff 	.word	0x7fefffff

00400ca4 <sin>:
  400ca4:	b530      	push	{r4, r5, lr}
  400ca6:	4a1f      	ldr	r2, [pc, #124]	; (400d24 <sin+0x80>)
  400ca8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  400cac:	4293      	cmp	r3, r2
  400cae:	b087      	sub	sp, #28
  400cb0:	dd1b      	ble.n	400cea <sin+0x46>
  400cb2:	4a1d      	ldr	r2, [pc, #116]	; (400d28 <sin+0x84>)
  400cb4:	4293      	cmp	r3, r2
  400cb6:	dd05      	ble.n	400cc4 <sin+0x20>
  400cb8:	4602      	mov	r2, r0
  400cba:	460b      	mov	r3, r1
  400cbc:	f001 f99a 	bl	401ff4 <__aeabi_dsub>
  400cc0:	b007      	add	sp, #28
  400cc2:	bd30      	pop	{r4, r5, pc}
  400cc4:	aa02      	add	r2, sp, #8
  400cc6:	f000 f833 	bl	400d30 <__ieee754_rem_pio2>
  400cca:	f000 0003 	and.w	r0, r0, #3
  400cce:	2801      	cmp	r0, #1
  400cd0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400cd4:	d01a      	beq.n	400d0c <sin+0x68>
  400cd6:	2802      	cmp	r0, #2
  400cd8:	d00f      	beq.n	400cfa <sin+0x56>
  400cda:	b1e0      	cbz	r0, 400d16 <sin+0x72>
  400cdc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400ce0:	f000 fa4a 	bl	401178 <__kernel_cos>
  400ce4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400ce8:	e7ea      	b.n	400cc0 <sin+0x1c>
  400cea:	2300      	movs	r3, #0
  400cec:	9300      	str	r3, [sp, #0]
  400cee:	2200      	movs	r2, #0
  400cf0:	2300      	movs	r3, #0
  400cf2:	f000 ffad 	bl	401c50 <__kernel_sin>
  400cf6:	b007      	add	sp, #28
  400cf8:	bd30      	pop	{r4, r5, pc}
  400cfa:	2401      	movs	r4, #1
  400cfc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d00:	9400      	str	r4, [sp, #0]
  400d02:	f000 ffa5 	bl	401c50 <__kernel_sin>
  400d06:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400d0a:	e7d9      	b.n	400cc0 <sin+0x1c>
  400d0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d10:	f000 fa32 	bl	401178 <__kernel_cos>
  400d14:	e7d4      	b.n	400cc0 <sin+0x1c>
  400d16:	2401      	movs	r4, #1
  400d18:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d1c:	9400      	str	r4, [sp, #0]
  400d1e:	f000 ff97 	bl	401c50 <__kernel_sin>
  400d22:	e7cd      	b.n	400cc0 <sin+0x1c>
  400d24:	3fe921fb 	.word	0x3fe921fb
  400d28:	7fefffff 	.word	0x7fefffff
  400d2c:	00000000 	.word	0x00000000

00400d30 <__ieee754_rem_pio2>:
  400d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d34:	4e9a      	ldr	r6, [pc, #616]	; (400fa0 <__ieee754_rem_pio2+0x270>)
  400d36:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  400d3a:	42b7      	cmp	r7, r6
  400d3c:	b091      	sub	sp, #68	; 0x44
  400d3e:	f340 808e 	ble.w	400e5e <__ieee754_rem_pio2+0x12e>
  400d42:	4692      	mov	sl, r2
  400d44:	4a97      	ldr	r2, [pc, #604]	; (400fa4 <__ieee754_rem_pio2+0x274>)
  400d46:	4297      	cmp	r7, r2
  400d48:	460c      	mov	r4, r1
  400d4a:	dc26      	bgt.n	400d9a <__ieee754_rem_pio2+0x6a>
  400d4c:	2900      	cmp	r1, #0
  400d4e:	a38a      	add	r3, pc, #552	; (adr r3, 400f78 <__ieee754_rem_pio2+0x248>)
  400d50:	e9d3 2300 	ldrd	r2, r3, [r3]
  400d54:	f340 81b4 	ble.w	4010c0 <__ieee754_rem_pio2+0x390>
  400d58:	f001 f94c 	bl	401ff4 <__aeabi_dsub>
  400d5c:	4b92      	ldr	r3, [pc, #584]	; (400fa8 <__ieee754_rem_pio2+0x278>)
  400d5e:	429f      	cmp	r7, r3
  400d60:	4604      	mov	r4, r0
  400d62:	460d      	mov	r5, r1
  400d64:	f000 8090 	beq.w	400e88 <__ieee754_rem_pio2+0x158>
  400d68:	a385      	add	r3, pc, #532	; (adr r3, 400f80 <__ieee754_rem_pio2+0x250>)
  400d6a:	e9d3 2300 	ldrd	r2, r3, [r3]
  400d6e:	f001 f941 	bl	401ff4 <__aeabi_dsub>
  400d72:	4602      	mov	r2, r0
  400d74:	460b      	mov	r3, r1
  400d76:	e9ca 2300 	strd	r2, r3, [sl]
  400d7a:	4620      	mov	r0, r4
  400d7c:	4629      	mov	r1, r5
  400d7e:	f001 f939 	bl	401ff4 <__aeabi_dsub>
  400d82:	a37f      	add	r3, pc, #508	; (adr r3, 400f80 <__ieee754_rem_pio2+0x250>)
  400d84:	e9d3 2300 	ldrd	r2, r3, [r3]
  400d88:	f001 f934 	bl	401ff4 <__aeabi_dsub>
  400d8c:	2501      	movs	r5, #1
  400d8e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  400d92:	4628      	mov	r0, r5
  400d94:	b011      	add	sp, #68	; 0x44
  400d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400d9a:	4a84      	ldr	r2, [pc, #528]	; (400fac <__ieee754_rem_pio2+0x27c>)
  400d9c:	4297      	cmp	r7, r2
  400d9e:	f340 8090 	ble.w	400ec2 <__ieee754_rem_pio2+0x192>
  400da2:	4a83      	ldr	r2, [pc, #524]	; (400fb0 <__ieee754_rem_pio2+0x280>)
  400da4:	4297      	cmp	r7, r2
  400da6:	dc65      	bgt.n	400e74 <__ieee754_rem_pio2+0x144>
  400da8:	153d      	asrs	r5, r7, #20
  400daa:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
  400dae:	eba7 5305 	sub.w	r3, r7, r5, lsl #20
  400db2:	4619      	mov	r1, r3
  400db4:	461f      	mov	r7, r3
  400db6:	4606      	mov	r6, r0
  400db8:	f001 fd6a 	bl	402890 <__aeabi_d2iz>
  400dbc:	f001 fa68 	bl	402290 <__aeabi_i2d>
  400dc0:	4680      	mov	r8, r0
  400dc2:	4689      	mov	r9, r1
  400dc4:	4602      	mov	r2, r0
  400dc6:	460b      	mov	r3, r1
  400dc8:	4630      	mov	r0, r6
  400dca:	4639      	mov	r1, r7
  400dcc:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  400dd0:	f001 f910 	bl	401ff4 <__aeabi_dsub>
  400dd4:	2200      	movs	r2, #0
  400dd6:	4b77      	ldr	r3, [pc, #476]	; (400fb4 <__ieee754_rem_pio2+0x284>)
  400dd8:	f001 fac0 	bl	40235c <__aeabi_dmul>
  400ddc:	4689      	mov	r9, r1
  400dde:	4680      	mov	r8, r0
  400de0:	f001 fd56 	bl	402890 <__aeabi_d2iz>
  400de4:	f001 fa54 	bl	402290 <__aeabi_i2d>
  400de8:	4602      	mov	r2, r0
  400dea:	460b      	mov	r3, r1
  400dec:	4606      	mov	r6, r0
  400dee:	460f      	mov	r7, r1
  400df0:	4640      	mov	r0, r8
  400df2:	4649      	mov	r1, r9
  400df4:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
  400df8:	f001 f8fc 	bl	401ff4 <__aeabi_dsub>
  400dfc:	2200      	movs	r2, #0
  400dfe:	4b6d      	ldr	r3, [pc, #436]	; (400fb4 <__ieee754_rem_pio2+0x284>)
  400e00:	f001 faac 	bl	40235c <__aeabi_dmul>
  400e04:	2200      	movs	r2, #0
  400e06:	2300      	movs	r3, #0
  400e08:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  400e0c:	f001 fd0e 	bl	40282c <__aeabi_dcmpeq>
  400e10:	2800      	cmp	r0, #0
  400e12:	f000 8173 	beq.w	4010fc <__ieee754_rem_pio2+0x3cc>
  400e16:	2300      	movs	r3, #0
  400e18:	4630      	mov	r0, r6
  400e1a:	4639      	mov	r1, r7
  400e1c:	2200      	movs	r2, #0
  400e1e:	f001 fd05 	bl	40282c <__aeabi_dcmpeq>
  400e22:	2800      	cmp	r0, #0
  400e24:	bf14      	ite	ne
  400e26:	2301      	movne	r3, #1
  400e28:	2302      	moveq	r3, #2
  400e2a:	4a63      	ldr	r2, [pc, #396]	; (400fb8 <__ieee754_rem_pio2+0x288>)
  400e2c:	9201      	str	r2, [sp, #4]
  400e2e:	2102      	movs	r1, #2
  400e30:	462a      	mov	r2, r5
  400e32:	9100      	str	r1, [sp, #0]
  400e34:	a80a      	add	r0, sp, #40	; 0x28
  400e36:	4651      	mov	r1, sl
  400e38:	f000 fac2 	bl	4013c0 <__kernel_rem_pio2>
  400e3c:	2c00      	cmp	r4, #0
  400e3e:	4605      	mov	r5, r0
  400e40:	da14      	bge.n	400e6c <__ieee754_rem_pio2+0x13c>
  400e42:	f8da 2004 	ldr.w	r2, [sl, #4]
  400e46:	f8da 300c 	ldr.w	r3, [sl, #12]
  400e4a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  400e4e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  400e52:	4245      	negs	r5, r0
  400e54:	f8ca 2004 	str.w	r2, [sl, #4]
  400e58:	f8ca 300c 	str.w	r3, [sl, #12]
  400e5c:	e006      	b.n	400e6c <__ieee754_rem_pio2+0x13c>
  400e5e:	e9c2 0100 	strd	r0, r1, [r2]
  400e62:	2500      	movs	r5, #0
  400e64:	2400      	movs	r4, #0
  400e66:	e9c2 4502 	strd	r4, r5, [r2, #8]
  400e6a:	2500      	movs	r5, #0
  400e6c:	4628      	mov	r0, r5
  400e6e:	b011      	add	sp, #68	; 0x44
  400e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400e74:	4602      	mov	r2, r0
  400e76:	460b      	mov	r3, r1
  400e78:	f001 f8bc 	bl	401ff4 <__aeabi_dsub>
  400e7c:	2500      	movs	r5, #0
  400e7e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  400e82:	e9ca 0100 	strd	r0, r1, [sl]
  400e86:	e7f1      	b.n	400e6c <__ieee754_rem_pio2+0x13c>
  400e88:	a33f      	add	r3, pc, #252	; (adr r3, 400f88 <__ieee754_rem_pio2+0x258>)
  400e8a:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e8e:	f001 f8b1 	bl	401ff4 <__aeabi_dsub>
  400e92:	a33f      	add	r3, pc, #252	; (adr r3, 400f90 <__ieee754_rem_pio2+0x260>)
  400e94:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e98:	460d      	mov	r5, r1
  400e9a:	4604      	mov	r4, r0
  400e9c:	f001 f8aa 	bl	401ff4 <__aeabi_dsub>
  400ea0:	4602      	mov	r2, r0
  400ea2:	460b      	mov	r3, r1
  400ea4:	e9ca 2300 	strd	r2, r3, [sl]
  400ea8:	4629      	mov	r1, r5
  400eaa:	4620      	mov	r0, r4
  400eac:	f001 f8a2 	bl	401ff4 <__aeabi_dsub>
  400eb0:	a337      	add	r3, pc, #220	; (adr r3, 400f90 <__ieee754_rem_pio2+0x260>)
  400eb2:	e9d3 2300 	ldrd	r2, r3, [r3]
  400eb6:	f001 f89d 	bl	401ff4 <__aeabi_dsub>
  400eba:	2501      	movs	r5, #1
  400ebc:	e9ca 0102 	strd	r0, r1, [sl, #8]
  400ec0:	e7d4      	b.n	400e6c <__ieee754_rem_pio2+0x13c>
  400ec2:	f000 ff7b 	bl	401dbc <fabs>
  400ec6:	a334      	add	r3, pc, #208	; (adr r3, 400f98 <__ieee754_rem_pio2+0x268>)
  400ec8:	e9d3 2300 	ldrd	r2, r3, [r3]
  400ecc:	4680      	mov	r8, r0
  400ece:	4689      	mov	r9, r1
  400ed0:	f001 fa44 	bl	40235c <__aeabi_dmul>
  400ed4:	2200      	movs	r2, #0
  400ed6:	4b39      	ldr	r3, [pc, #228]	; (400fbc <__ieee754_rem_pio2+0x28c>)
  400ed8:	f001 f88e 	bl	401ff8 <__adddf3>
  400edc:	f001 fcd8 	bl	402890 <__aeabi_d2iz>
  400ee0:	4605      	mov	r5, r0
  400ee2:	f001 f9d5 	bl	402290 <__aeabi_i2d>
  400ee6:	a324      	add	r3, pc, #144	; (adr r3, 400f78 <__ieee754_rem_pio2+0x248>)
  400ee8:	e9d3 2300 	ldrd	r2, r3, [r3]
  400eec:	e9cd 0104 	strd	r0, r1, [sp, #16]
  400ef0:	f001 fa34 	bl	40235c <__aeabi_dmul>
  400ef4:	4602      	mov	r2, r0
  400ef6:	460b      	mov	r3, r1
  400ef8:	4640      	mov	r0, r8
  400efa:	4649      	mov	r1, r9
  400efc:	f001 f87a 	bl	401ff4 <__aeabi_dsub>
  400f00:	a31f      	add	r3, pc, #124	; (adr r3, 400f80 <__ieee754_rem_pio2+0x250>)
  400f02:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f06:	4680      	mov	r8, r0
  400f08:	4689      	mov	r9, r1
  400f0a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400f0e:	f001 fa25 	bl	40235c <__aeabi_dmul>
  400f12:	2d1f      	cmp	r5, #31
  400f14:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400f18:	dc54      	bgt.n	400fc4 <__ieee754_rem_pio2+0x294>
  400f1a:	4b29      	ldr	r3, [pc, #164]	; (400fc0 <__ieee754_rem_pio2+0x290>)
  400f1c:	1e6a      	subs	r2, r5, #1
  400f1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  400f22:	429f      	cmp	r7, r3
  400f24:	d04e      	beq.n	400fc4 <__ieee754_rem_pio2+0x294>
  400f26:	4602      	mov	r2, r0
  400f28:	460b      	mov	r3, r1
  400f2a:	4640      	mov	r0, r8
  400f2c:	4649      	mov	r1, r9
  400f2e:	f001 f861 	bl	401ff4 <__aeabi_dsub>
  400f32:	4602      	mov	r2, r0
  400f34:	460b      	mov	r3, r1
  400f36:	e9ca 2300 	strd	r2, r3, [sl]
  400f3a:	4683      	mov	fp, r0
  400f3c:	460e      	mov	r6, r1
  400f3e:	465a      	mov	r2, fp
  400f40:	4633      	mov	r3, r6
  400f42:	4640      	mov	r0, r8
  400f44:	4649      	mov	r1, r9
  400f46:	f001 f855 	bl	401ff4 <__aeabi_dsub>
  400f4a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400f4e:	f001 f851 	bl	401ff4 <__aeabi_dsub>
  400f52:	2c00      	cmp	r4, #0
  400f54:	4602      	mov	r2, r0
  400f56:	460b      	mov	r3, r1
  400f58:	e9ca 2302 	strd	r2, r3, [sl, #8]
  400f5c:	da86      	bge.n	400e6c <__ieee754_rem_pio2+0x13c>
  400f5e:	465b      	mov	r3, fp
  400f60:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
  400f64:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400f68:	e88a 0048 	stmia.w	sl, {r3, r6}
  400f6c:	f8ca 100c 	str.w	r1, [sl, #12]
  400f70:	f8ca 0008 	str.w	r0, [sl, #8]
  400f74:	426d      	negs	r5, r5
  400f76:	e779      	b.n	400e6c <__ieee754_rem_pio2+0x13c>
  400f78:	54400000 	.word	0x54400000
  400f7c:	3ff921fb 	.word	0x3ff921fb
  400f80:	1a626331 	.word	0x1a626331
  400f84:	3dd0b461 	.word	0x3dd0b461
  400f88:	1a600000 	.word	0x1a600000
  400f8c:	3dd0b461 	.word	0x3dd0b461
  400f90:	2e037073 	.word	0x2e037073
  400f94:	3ba3198a 	.word	0x3ba3198a
  400f98:	6dc9c883 	.word	0x6dc9c883
  400f9c:	3fe45f30 	.word	0x3fe45f30
  400fa0:	3fe921fb 	.word	0x3fe921fb
  400fa4:	4002d97b 	.word	0x4002d97b
  400fa8:	3ff921fb 	.word	0x3ff921fb
  400fac:	413921fb 	.word	0x413921fb
  400fb0:	7fefffff 	.word	0x7fefffff
  400fb4:	41700000 	.word	0x41700000
  400fb8:	00403198 	.word	0x00403198
  400fbc:	3fe00000 	.word	0x3fe00000
  400fc0:	00403118 	.word	0x00403118
  400fc4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400fc8:	4640      	mov	r0, r8
  400fca:	4649      	mov	r1, r9
  400fcc:	f001 f812 	bl	401ff4 <__aeabi_dsub>
  400fd0:	153a      	asrs	r2, r7, #20
  400fd2:	f3c1 530a 	ubfx	r3, r1, #20, #11
  400fd6:	1ad3      	subs	r3, r2, r3
  400fd8:	2b10      	cmp	r3, #16
  400fda:	4683      	mov	fp, r0
  400fdc:	460e      	mov	r6, r1
  400fde:	9209      	str	r2, [sp, #36]	; 0x24
  400fe0:	e9ca 0100 	strd	r0, r1, [sl]
  400fe4:	ddab      	ble.n	400f3e <__ieee754_rem_pio2+0x20e>
  400fe6:	a358      	add	r3, pc, #352	; (adr r3, 401148 <__ieee754_rem_pio2+0x418>)
  400fe8:	e9d3 2300 	ldrd	r2, r3, [r3]
  400fec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400ff0:	f001 f9b4 	bl	40235c <__aeabi_dmul>
  400ff4:	4606      	mov	r6, r0
  400ff6:	460f      	mov	r7, r1
  400ff8:	4602      	mov	r2, r0
  400ffa:	460b      	mov	r3, r1
  400ffc:	4640      	mov	r0, r8
  400ffe:	4649      	mov	r1, r9
  401000:	f000 fff8 	bl	401ff4 <__aeabi_dsub>
  401004:	e9cd 0106 	strd	r0, r1, [sp, #24]
  401008:	4602      	mov	r2, r0
  40100a:	460b      	mov	r3, r1
  40100c:	4640      	mov	r0, r8
  40100e:	4649      	mov	r1, r9
  401010:	f000 fff0 	bl	401ff4 <__aeabi_dsub>
  401014:	4632      	mov	r2, r6
  401016:	463b      	mov	r3, r7
  401018:	f000 ffec 	bl	401ff4 <__aeabi_dsub>
  40101c:	a34c      	add	r3, pc, #304	; (adr r3, 401150 <__ieee754_rem_pio2+0x420>)
  40101e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401022:	4606      	mov	r6, r0
  401024:	460f      	mov	r7, r1
  401026:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40102a:	f001 f997 	bl	40235c <__aeabi_dmul>
  40102e:	4632      	mov	r2, r6
  401030:	463b      	mov	r3, r7
  401032:	f000 ffdf 	bl	401ff4 <__aeabi_dsub>
  401036:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  40103a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40103e:	4602      	mov	r2, r0
  401040:	460b      	mov	r3, r1
  401042:	4640      	mov	r0, r8
  401044:	4649      	mov	r1, r9
  401046:	f000 ffd5 	bl	401ff4 <__aeabi_dsub>
  40104a:	460b      	mov	r3, r1
  40104c:	f3c1 570a 	ubfx	r7, r1, #20, #11
  401050:	460e      	mov	r6, r1
  401052:	9909      	ldr	r1, [sp, #36]	; 0x24
  401054:	1bcf      	subs	r7, r1, r7
  401056:	4602      	mov	r2, r0
  401058:	2f31      	cmp	r7, #49	; 0x31
  40105a:	4683      	mov	fp, r0
  40105c:	e9ca 2300 	strd	r2, r3, [sl]
  401060:	dd6c      	ble.n	40113c <__ieee754_rem_pio2+0x40c>
  401062:	a33d      	add	r3, pc, #244	; (adr r3, 401158 <__ieee754_rem_pio2+0x428>)
  401064:	e9d3 2300 	ldrd	r2, r3, [r3]
  401068:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40106c:	f001 f976 	bl	40235c <__aeabi_dmul>
  401070:	4606      	mov	r6, r0
  401072:	460f      	mov	r7, r1
  401074:	4602      	mov	r2, r0
  401076:	460b      	mov	r3, r1
  401078:	4640      	mov	r0, r8
  40107a:	4649      	mov	r1, r9
  40107c:	e9cd 8906 	strd	r8, r9, [sp, #24]
  401080:	f000 ffb8 	bl	401ff4 <__aeabi_dsub>
  401084:	4602      	mov	r2, r0
  401086:	460b      	mov	r3, r1
  401088:	4680      	mov	r8, r0
  40108a:	4689      	mov	r9, r1
  40108c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  401090:	f000 ffb0 	bl	401ff4 <__aeabi_dsub>
  401094:	4632      	mov	r2, r6
  401096:	463b      	mov	r3, r7
  401098:	f000 ffac 	bl	401ff4 <__aeabi_dsub>
  40109c:	a330      	add	r3, pc, #192	; (adr r3, 401160 <__ieee754_rem_pio2+0x430>)
  40109e:	e9d3 2300 	ldrd	r2, r3, [r3]
  4010a2:	4606      	mov	r6, r0
  4010a4:	460f      	mov	r7, r1
  4010a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4010aa:	f001 f957 	bl	40235c <__aeabi_dmul>
  4010ae:	4632      	mov	r2, r6
  4010b0:	463b      	mov	r3, r7
  4010b2:	f000 ff9f 	bl	401ff4 <__aeabi_dsub>
  4010b6:	4602      	mov	r2, r0
  4010b8:	460b      	mov	r3, r1
  4010ba:	e9cd 2302 	strd	r2, r3, [sp, #8]
  4010be:	e734      	b.n	400f2a <__ieee754_rem_pio2+0x1fa>
  4010c0:	f000 ff9a 	bl	401ff8 <__adddf3>
  4010c4:	4b2a      	ldr	r3, [pc, #168]	; (401170 <__ieee754_rem_pio2+0x440>)
  4010c6:	429f      	cmp	r7, r3
  4010c8:	4604      	mov	r4, r0
  4010ca:	460d      	mov	r5, r1
  4010cc:	d018      	beq.n	401100 <__ieee754_rem_pio2+0x3d0>
  4010ce:	a326      	add	r3, pc, #152	; (adr r3, 401168 <__ieee754_rem_pio2+0x438>)
  4010d0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4010d4:	f000 ff90 	bl	401ff8 <__adddf3>
  4010d8:	4602      	mov	r2, r0
  4010da:	460b      	mov	r3, r1
  4010dc:	e9ca 2300 	strd	r2, r3, [sl]
  4010e0:	4629      	mov	r1, r5
  4010e2:	4620      	mov	r0, r4
  4010e4:	f000 ff86 	bl	401ff4 <__aeabi_dsub>
  4010e8:	a31f      	add	r3, pc, #124	; (adr r3, 401168 <__ieee754_rem_pio2+0x438>)
  4010ea:	e9d3 2300 	ldrd	r2, r3, [r3]
  4010ee:	f000 ff83 	bl	401ff8 <__adddf3>
  4010f2:	f04f 35ff 	mov.w	r5, #4294967295
  4010f6:	e9ca 0102 	strd	r0, r1, [sl, #8]
  4010fa:	e6b7      	b.n	400e6c <__ieee754_rem_pio2+0x13c>
  4010fc:	2303      	movs	r3, #3
  4010fe:	e694      	b.n	400e2a <__ieee754_rem_pio2+0xfa>
  401100:	a311      	add	r3, pc, #68	; (adr r3, 401148 <__ieee754_rem_pio2+0x418>)
  401102:	e9d3 2300 	ldrd	r2, r3, [r3]
  401106:	f000 ff77 	bl	401ff8 <__adddf3>
  40110a:	a311      	add	r3, pc, #68	; (adr r3, 401150 <__ieee754_rem_pio2+0x420>)
  40110c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401110:	460d      	mov	r5, r1
  401112:	4604      	mov	r4, r0
  401114:	f000 ff70 	bl	401ff8 <__adddf3>
  401118:	4602      	mov	r2, r0
  40111a:	460b      	mov	r3, r1
  40111c:	e9ca 2300 	strd	r2, r3, [sl]
  401120:	4629      	mov	r1, r5
  401122:	4620      	mov	r0, r4
  401124:	f000 ff66 	bl	401ff4 <__aeabi_dsub>
  401128:	a309      	add	r3, pc, #36	; (adr r3, 401150 <__ieee754_rem_pio2+0x420>)
  40112a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40112e:	f000 ff63 	bl	401ff8 <__adddf3>
  401132:	f04f 35ff 	mov.w	r5, #4294967295
  401136:	e9ca 0102 	strd	r0, r1, [sl, #8]
  40113a:	e697      	b.n	400e6c <__ieee754_rem_pio2+0x13c>
  40113c:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  401140:	e6fd      	b.n	400f3e <__ieee754_rem_pio2+0x20e>
  401142:	bf00      	nop
  401144:	f3af 8000 	nop.w
  401148:	1a600000 	.word	0x1a600000
  40114c:	3dd0b461 	.word	0x3dd0b461
  401150:	2e037073 	.word	0x2e037073
  401154:	3ba3198a 	.word	0x3ba3198a
  401158:	2e000000 	.word	0x2e000000
  40115c:	3ba3198a 	.word	0x3ba3198a
  401160:	252049c1 	.word	0x252049c1
  401164:	397b839a 	.word	0x397b839a
  401168:	1a626331 	.word	0x1a626331
  40116c:	3dd0b461 	.word	0x3dd0b461
  401170:	3ff921fb 	.word	0x3ff921fb
  401174:	00000000 	.word	0x00000000

00401178 <__kernel_cos>:
  401178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40117c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  401180:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  401184:	b085      	sub	sp, #20
  401186:	460c      	mov	r4, r1
  401188:	4692      	mov	sl, r2
  40118a:	469b      	mov	fp, r3
  40118c:	4605      	mov	r5, r0
  40118e:	da6b      	bge.n	401268 <__kernel_cos+0xf0>
  401190:	f001 fb7e 	bl	402890 <__aeabi_d2iz>
  401194:	2800      	cmp	r0, #0
  401196:	f000 80e8 	beq.w	40136a <__kernel_cos+0x1f2>
  40119a:	462a      	mov	r2, r5
  40119c:	4623      	mov	r3, r4
  40119e:	4628      	mov	r0, r5
  4011a0:	4621      	mov	r1, r4
  4011a2:	f001 f8db 	bl	40235c <__aeabi_dmul>
  4011a6:	a374      	add	r3, pc, #464	; (adr r3, 401378 <__kernel_cos+0x200>)
  4011a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011ac:	4680      	mov	r8, r0
  4011ae:	4689      	mov	r9, r1
  4011b0:	f001 f8d4 	bl	40235c <__aeabi_dmul>
  4011b4:	a372      	add	r3, pc, #456	; (adr r3, 401380 <__kernel_cos+0x208>)
  4011b6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011ba:	f000 ff1d 	bl	401ff8 <__adddf3>
  4011be:	4642      	mov	r2, r8
  4011c0:	464b      	mov	r3, r9
  4011c2:	f001 f8cb 	bl	40235c <__aeabi_dmul>
  4011c6:	a370      	add	r3, pc, #448	; (adr r3, 401388 <__kernel_cos+0x210>)
  4011c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011cc:	f000 ff12 	bl	401ff4 <__aeabi_dsub>
  4011d0:	4642      	mov	r2, r8
  4011d2:	464b      	mov	r3, r9
  4011d4:	f001 f8c2 	bl	40235c <__aeabi_dmul>
  4011d8:	a36d      	add	r3, pc, #436	; (adr r3, 401390 <__kernel_cos+0x218>)
  4011da:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011de:	f000 ff0b 	bl	401ff8 <__adddf3>
  4011e2:	4642      	mov	r2, r8
  4011e4:	464b      	mov	r3, r9
  4011e6:	f001 f8b9 	bl	40235c <__aeabi_dmul>
  4011ea:	a36b      	add	r3, pc, #428	; (adr r3, 401398 <__kernel_cos+0x220>)
  4011ec:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011f0:	f000 ff00 	bl	401ff4 <__aeabi_dsub>
  4011f4:	4642      	mov	r2, r8
  4011f6:	464b      	mov	r3, r9
  4011f8:	f001 f8b0 	bl	40235c <__aeabi_dmul>
  4011fc:	a368      	add	r3, pc, #416	; (adr r3, 4013a0 <__kernel_cos+0x228>)
  4011fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  401202:	f000 fef9 	bl	401ff8 <__adddf3>
  401206:	4642      	mov	r2, r8
  401208:	464b      	mov	r3, r9
  40120a:	f001 f8a7 	bl	40235c <__aeabi_dmul>
  40120e:	e9cd 0100 	strd	r0, r1, [sp]
  401212:	2200      	movs	r2, #0
  401214:	4b64      	ldr	r3, [pc, #400]	; (4013a8 <__kernel_cos+0x230>)
  401216:	4640      	mov	r0, r8
  401218:	4649      	mov	r1, r9
  40121a:	f001 f89f 	bl	40235c <__aeabi_dmul>
  40121e:	e9dd 2300 	ldrd	r2, r3, [sp]
  401222:	4606      	mov	r6, r0
  401224:	460f      	mov	r7, r1
  401226:	4640      	mov	r0, r8
  401228:	4649      	mov	r1, r9
  40122a:	f001 f897 	bl	40235c <__aeabi_dmul>
  40122e:	4652      	mov	r2, sl
  401230:	4680      	mov	r8, r0
  401232:	4689      	mov	r9, r1
  401234:	465b      	mov	r3, fp
  401236:	4628      	mov	r0, r5
  401238:	4621      	mov	r1, r4
  40123a:	f001 f88f 	bl	40235c <__aeabi_dmul>
  40123e:	4602      	mov	r2, r0
  401240:	460b      	mov	r3, r1
  401242:	4640      	mov	r0, r8
  401244:	4649      	mov	r1, r9
  401246:	f000 fed5 	bl	401ff4 <__aeabi_dsub>
  40124a:	4602      	mov	r2, r0
  40124c:	460b      	mov	r3, r1
  40124e:	4630      	mov	r0, r6
  401250:	4639      	mov	r1, r7
  401252:	f000 fecf 	bl	401ff4 <__aeabi_dsub>
  401256:	4602      	mov	r2, r0
  401258:	460b      	mov	r3, r1
  40125a:	2000      	movs	r0, #0
  40125c:	4953      	ldr	r1, [pc, #332]	; (4013ac <__kernel_cos+0x234>)
  40125e:	f000 fec9 	bl	401ff4 <__aeabi_dsub>
  401262:	b005      	add	sp, #20
  401264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401268:	4602      	mov	r2, r0
  40126a:	460b      	mov	r3, r1
  40126c:	f001 f876 	bl	40235c <__aeabi_dmul>
  401270:	a341      	add	r3, pc, #260	; (adr r3, 401378 <__kernel_cos+0x200>)
  401272:	e9d3 2300 	ldrd	r2, r3, [r3]
  401276:	4680      	mov	r8, r0
  401278:	4689      	mov	r9, r1
  40127a:	f001 f86f 	bl	40235c <__aeabi_dmul>
  40127e:	a340      	add	r3, pc, #256	; (adr r3, 401380 <__kernel_cos+0x208>)
  401280:	e9d3 2300 	ldrd	r2, r3, [r3]
  401284:	f000 feb8 	bl	401ff8 <__adddf3>
  401288:	4642      	mov	r2, r8
  40128a:	464b      	mov	r3, r9
  40128c:	f001 f866 	bl	40235c <__aeabi_dmul>
  401290:	a33d      	add	r3, pc, #244	; (adr r3, 401388 <__kernel_cos+0x210>)
  401292:	e9d3 2300 	ldrd	r2, r3, [r3]
  401296:	f000 fead 	bl	401ff4 <__aeabi_dsub>
  40129a:	4642      	mov	r2, r8
  40129c:	464b      	mov	r3, r9
  40129e:	f001 f85d 	bl	40235c <__aeabi_dmul>
  4012a2:	a33b      	add	r3, pc, #236	; (adr r3, 401390 <__kernel_cos+0x218>)
  4012a4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012a8:	f000 fea6 	bl	401ff8 <__adddf3>
  4012ac:	4642      	mov	r2, r8
  4012ae:	464b      	mov	r3, r9
  4012b0:	f001 f854 	bl	40235c <__aeabi_dmul>
  4012b4:	a338      	add	r3, pc, #224	; (adr r3, 401398 <__kernel_cos+0x220>)
  4012b6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012ba:	f000 fe9b 	bl	401ff4 <__aeabi_dsub>
  4012be:	4642      	mov	r2, r8
  4012c0:	464b      	mov	r3, r9
  4012c2:	f001 f84b 	bl	40235c <__aeabi_dmul>
  4012c6:	a336      	add	r3, pc, #216	; (adr r3, 4013a0 <__kernel_cos+0x228>)
  4012c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012cc:	f000 fe94 	bl	401ff8 <__adddf3>
  4012d0:	464b      	mov	r3, r9
  4012d2:	4642      	mov	r2, r8
  4012d4:	f001 f842 	bl	40235c <__aeabi_dmul>
  4012d8:	4b35      	ldr	r3, [pc, #212]	; (4013b0 <__kernel_cos+0x238>)
  4012da:	429e      	cmp	r6, r3
  4012dc:	e9cd 0100 	strd	r0, r1, [sp]
  4012e0:	dd97      	ble.n	401212 <__kernel_cos+0x9a>
  4012e2:	4b34      	ldr	r3, [pc, #208]	; (4013b4 <__kernel_cos+0x23c>)
  4012e4:	429e      	cmp	r6, r3
  4012e6:	f04f 0200 	mov.w	r2, #0
  4012ea:	dc38      	bgt.n	40135e <__kernel_cos+0x1e6>
  4012ec:	f5a6 1300 	sub.w	r3, r6, #2097152	; 0x200000
  4012f0:	2000      	movs	r0, #0
  4012f2:	492e      	ldr	r1, [pc, #184]	; (4013ac <__kernel_cos+0x234>)
  4012f4:	4616      	mov	r6, r2
  4012f6:	461f      	mov	r7, r3
  4012f8:	f000 fe7c 	bl	401ff4 <__aeabi_dsub>
  4012fc:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401300:	2200      	movs	r2, #0
  401302:	4b29      	ldr	r3, [pc, #164]	; (4013a8 <__kernel_cos+0x230>)
  401304:	4640      	mov	r0, r8
  401306:	4649      	mov	r1, r9
  401308:	f001 f828 	bl	40235c <__aeabi_dmul>
  40130c:	4632      	mov	r2, r6
  40130e:	463b      	mov	r3, r7
  401310:	f000 fe70 	bl	401ff4 <__aeabi_dsub>
  401314:	e9dd 2300 	ldrd	r2, r3, [sp]
  401318:	4606      	mov	r6, r0
  40131a:	460f      	mov	r7, r1
  40131c:	4640      	mov	r0, r8
  40131e:	4649      	mov	r1, r9
  401320:	f001 f81c 	bl	40235c <__aeabi_dmul>
  401324:	4652      	mov	r2, sl
  401326:	4680      	mov	r8, r0
  401328:	4689      	mov	r9, r1
  40132a:	465b      	mov	r3, fp
  40132c:	4628      	mov	r0, r5
  40132e:	4621      	mov	r1, r4
  401330:	f001 f814 	bl	40235c <__aeabi_dmul>
  401334:	4602      	mov	r2, r0
  401336:	460b      	mov	r3, r1
  401338:	4640      	mov	r0, r8
  40133a:	4649      	mov	r1, r9
  40133c:	f000 fe5a 	bl	401ff4 <__aeabi_dsub>
  401340:	4602      	mov	r2, r0
  401342:	460b      	mov	r3, r1
  401344:	4630      	mov	r0, r6
  401346:	4639      	mov	r1, r7
  401348:	f000 fe54 	bl	401ff4 <__aeabi_dsub>
  40134c:	4602      	mov	r2, r0
  40134e:	460b      	mov	r3, r1
  401350:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401354:	f000 fe4e 	bl	401ff4 <__aeabi_dsub>
  401358:	b005      	add	sp, #20
  40135a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40135e:	4b16      	ldr	r3, [pc, #88]	; (4013b8 <__kernel_cos+0x240>)
  401360:	4f16      	ldr	r7, [pc, #88]	; (4013bc <__kernel_cos+0x244>)
  401362:	e9cd 2302 	strd	r2, r3, [sp, #8]
  401366:	2600      	movs	r6, #0
  401368:	e7ca      	b.n	401300 <__kernel_cos+0x188>
  40136a:	4910      	ldr	r1, [pc, #64]	; (4013ac <__kernel_cos+0x234>)
  40136c:	2000      	movs	r0, #0
  40136e:	b005      	add	sp, #20
  401370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401374:	f3af 8000 	nop.w
  401378:	be8838d4 	.word	0xbe8838d4
  40137c:	bda8fae9 	.word	0xbda8fae9
  401380:	bdb4b1c4 	.word	0xbdb4b1c4
  401384:	3e21ee9e 	.word	0x3e21ee9e
  401388:	809c52ad 	.word	0x809c52ad
  40138c:	3e927e4f 	.word	0x3e927e4f
  401390:	19cb1590 	.word	0x19cb1590
  401394:	3efa01a0 	.word	0x3efa01a0
  401398:	16c15177 	.word	0x16c15177
  40139c:	3f56c16c 	.word	0x3f56c16c
  4013a0:	5555554c 	.word	0x5555554c
  4013a4:	3fa55555 	.word	0x3fa55555
  4013a8:	3fe00000 	.word	0x3fe00000
  4013ac:	3ff00000 	.word	0x3ff00000
  4013b0:	3fd33332 	.word	0x3fd33332
  4013b4:	3fe90000 	.word	0x3fe90000
  4013b8:	3fe70000 	.word	0x3fe70000
  4013bc:	3fd20000 	.word	0x3fd20000

004013c0 <__kernel_rem_pio2>:
  4013c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4013c4:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
  4013c8:	4c9c      	ldr	r4, [pc, #624]	; (40163c <__kernel_rem_pio2+0x27c>)
  4013ca:	9ea2      	ldr	r6, [sp, #648]	; 0x288
  4013cc:	4d9c      	ldr	r5, [pc, #624]	; (401640 <__kernel_rem_pio2+0x280>)
  4013ce:	f854 4026 	ldr.w	r4, [r4, r6, lsl #2]
  4013d2:	9405      	str	r4, [sp, #20]
  4013d4:	4626      	mov	r6, r4
  4013d6:	1ed4      	subs	r4, r2, #3
  4013d8:	fb85 7504 	smull	r7, r5, r5, r4
  4013dc:	17e4      	asrs	r4, r4, #31
  4013de:	ebc4 04a5 	rsb	r4, r4, r5, asr #2
  4013e2:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
  4013e6:	461d      	mov	r5, r3
  4013e8:	9308      	str	r3, [sp, #32]
  4013ea:	1c63      	adds	r3, r4, #1
  4013ec:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
  4013f0:	3d01      	subs	r5, #1
  4013f2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  4013f6:	9304      	str	r3, [sp, #16]
  4013f8:	462b      	mov	r3, r5
  4013fa:	9409      	str	r4, [sp, #36]	; 0x24
  4013fc:	9502      	str	r5, [sp, #8]
  4013fe:	1b65      	subs	r5, r4, r5
  401400:	18f4      	adds	r4, r6, r3
  401402:	9003      	str	r0, [sp, #12]
  401404:	9106      	str	r1, [sp, #24]
  401406:	d41a      	bmi.n	40143e <__kernel_rem_pio2+0x7e>
  401408:	442c      	add	r4, r5
  40140a:	3401      	adds	r4, #1
  40140c:	f10d 0878 	add.w	r8, sp, #120	; 0x78
  401410:	2600      	movs	r6, #0
  401412:	2700      	movs	r7, #0
  401414:	f8dd 928c 	ldr.w	r9, [sp, #652]	; 0x28c
  401418:	e008      	b.n	40142c <__kernel_rem_pio2+0x6c>
  40141a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
  40141e:	f000 ff37 	bl	402290 <__aeabi_i2d>
  401422:	3501      	adds	r5, #1
  401424:	42a5      	cmp	r5, r4
  401426:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  40142a:	d008      	beq.n	40143e <__kernel_rem_pio2+0x7e>
  40142c:	2d00      	cmp	r5, #0
  40142e:	daf4      	bge.n	40141a <__kernel_rem_pio2+0x5a>
  401430:	3501      	adds	r5, #1
  401432:	4630      	mov	r0, r6
  401434:	4639      	mov	r1, r7
  401436:	42a5      	cmp	r5, r4
  401438:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  40143c:	d1f6      	bne.n	40142c <__kernel_rem_pio2+0x6c>
  40143e:	9b05      	ldr	r3, [sp, #20]
  401440:	2b00      	cmp	r3, #0
  401442:	db2e      	blt.n	4014a2 <__kernel_rem_pio2+0xe2>
  401444:	9b08      	ldr	r3, [sp, #32]
  401446:	ea4f 09c3 	mov.w	r9, r3, lsl #3
  40144a:	9b03      	ldr	r3, [sp, #12]
  40144c:	f1a9 0808 	sub.w	r8, r9, #8
  401450:	4498      	add	r8, r3
  401452:	ab20      	add	r3, sp, #128	; 0x80
  401454:	4499      	add	r9, r3
  401456:	9b05      	ldr	r3, [sp, #20]
  401458:	aa70      	add	r2, sp, #448	; 0x1c0
  40145a:	eb02 0bc3 	add.w	fp, r2, r3, lsl #3
  40145e:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  401462:	9b02      	ldr	r3, [sp, #8]
  401464:	2b00      	cmp	r3, #0
  401466:	f2c0 830f 	blt.w	401a88 <__kernel_rem_pio2+0x6c8>
  40146a:	9b03      	ldr	r3, [sp, #12]
  40146c:	464d      	mov	r5, r9
  40146e:	f1a3 0408 	sub.w	r4, r3, #8
  401472:	2600      	movs	r6, #0
  401474:	2700      	movs	r7, #0
  401476:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  40147a:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  40147e:	f000 ff6d 	bl	40235c <__aeabi_dmul>
  401482:	4602      	mov	r2, r0
  401484:	460b      	mov	r3, r1
  401486:	4630      	mov	r0, r6
  401488:	4639      	mov	r1, r7
  40148a:	f000 fdb5 	bl	401ff8 <__adddf3>
  40148e:	4544      	cmp	r4, r8
  401490:	4606      	mov	r6, r0
  401492:	460f      	mov	r7, r1
  401494:	d1ef      	bne.n	401476 <__kernel_rem_pio2+0xb6>
  401496:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  40149a:	45da      	cmp	sl, fp
  40149c:	f109 0908 	add.w	r9, r9, #8
  4014a0:	d1df      	bne.n	401462 <__kernel_rem_pio2+0xa2>
  4014a2:	9805      	ldr	r0, [sp, #20]
  4014a4:	9a08      	ldr	r2, [sp, #32]
  4014a6:	9000      	str	r0, [sp, #0]
  4014a8:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  4014ac:	3b01      	subs	r3, #1
  4014ae:	009b      	lsls	r3, r3, #2
  4014b0:	ac0c      	add	r4, sp, #48	; 0x30
  4014b2:	1f19      	subs	r1, r3, #4
  4014b4:	4423      	add	r3, r4
  4014b6:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
  4014ba:	930b      	str	r3, [sp, #44]	; 0x2c
  4014bc:	9b03      	ldr	r3, [sp, #12]
  4014be:	3a01      	subs	r2, #1
  4014c0:	4421      	add	r1, r4
  4014c2:	910a      	str	r1, [sp, #40]	; 0x28
  4014c4:	eb03 0bc2 	add.w	fp, r3, r2, lsl #3
  4014c8:	9a00      	ldr	r2, [sp, #0]
  4014ca:	a998      	add	r1, sp, #608	; 0x260
  4014cc:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  4014d0:	2a00      	cmp	r2, #0
  4014d2:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
  4014d6:	4613      	mov	r3, r2
  4014d8:	dd2b      	ble.n	401532 <__kernel_rem_pio2+0x172>
  4014da:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  4014de:	f1a8 08a8 	sub.w	r8, r8, #168	; 0xa8
  4014e2:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  4014e6:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  4014ea:	2200      	movs	r2, #0
  4014ec:	4b55      	ldr	r3, [pc, #340]	; (401644 <__kernel_rem_pio2+0x284>)
  4014ee:	4620      	mov	r0, r4
  4014f0:	4629      	mov	r1, r5
  4014f2:	f000 ff33 	bl	40235c <__aeabi_dmul>
  4014f6:	f001 f9cb 	bl	402890 <__aeabi_d2iz>
  4014fa:	f000 fec9 	bl	402290 <__aeabi_i2d>
  4014fe:	2200      	movs	r2, #0
  401500:	4b51      	ldr	r3, [pc, #324]	; (401648 <__kernel_rem_pio2+0x288>)
  401502:	4606      	mov	r6, r0
  401504:	460f      	mov	r7, r1
  401506:	f000 ff29 	bl	40235c <__aeabi_dmul>
  40150a:	4602      	mov	r2, r0
  40150c:	460b      	mov	r3, r1
  40150e:	4620      	mov	r0, r4
  401510:	4629      	mov	r1, r5
  401512:	f000 fd6f 	bl	401ff4 <__aeabi_dsub>
  401516:	f001 f9bb 	bl	402890 <__aeabi_d2iz>
  40151a:	e878 2302 	ldrd	r2, r3, [r8], #-8
  40151e:	f849 0f04 	str.w	r0, [r9, #4]!
  401522:	4639      	mov	r1, r7
  401524:	4630      	mov	r0, r6
  401526:	f000 fd67 	bl	401ff8 <__adddf3>
  40152a:	45d0      	cmp	r8, sl
  40152c:	4604      	mov	r4, r0
  40152e:	460d      	mov	r5, r1
  401530:	d1db      	bne.n	4014ea <__kernel_rem_pio2+0x12a>
  401532:	f8dd 9010 	ldr.w	r9, [sp, #16]
  401536:	4620      	mov	r0, r4
  401538:	4629      	mov	r1, r5
  40153a:	464a      	mov	r2, r9
  40153c:	f000 fcd0 	bl	401ee0 <scalbn>
  401540:	2200      	movs	r2, #0
  401542:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
  401546:	4604      	mov	r4, r0
  401548:	460d      	mov	r5, r1
  40154a:	f000 ff07 	bl	40235c <__aeabi_dmul>
  40154e:	f000 fc3b 	bl	401dc8 <floor>
  401552:	2200      	movs	r2, #0
  401554:	4b3d      	ldr	r3, [pc, #244]	; (40164c <__kernel_rem_pio2+0x28c>)
  401556:	f000 ff01 	bl	40235c <__aeabi_dmul>
  40155a:	4602      	mov	r2, r0
  40155c:	460b      	mov	r3, r1
  40155e:	4620      	mov	r0, r4
  401560:	4629      	mov	r1, r5
  401562:	f000 fd47 	bl	401ff4 <__aeabi_dsub>
  401566:	460d      	mov	r5, r1
  401568:	4604      	mov	r4, r0
  40156a:	f001 f991 	bl	402890 <__aeabi_d2iz>
  40156e:	4680      	mov	r8, r0
  401570:	f000 fe8e 	bl	402290 <__aeabi_i2d>
  401574:	460b      	mov	r3, r1
  401576:	4602      	mov	r2, r0
  401578:	4629      	mov	r1, r5
  40157a:	4620      	mov	r0, r4
  40157c:	f000 fd3a 	bl	401ff4 <__aeabi_dsub>
  401580:	464b      	mov	r3, r9
  401582:	2b00      	cmp	r3, #0
  401584:	4606      	mov	r6, r0
  401586:	460f      	mov	r7, r1
  401588:	f340 80f7 	ble.w	40177a <__kernel_rem_pio2+0x3ba>
  40158c:	9a00      	ldr	r2, [sp, #0]
  40158e:	a90c      	add	r1, sp, #48	; 0x30
  401590:	3a01      	subs	r2, #1
  401592:	f1c9 0318 	rsb	r3, r9, #24
  401596:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
  40159a:	fa45 f103 	asr.w	r1, r5, r3
  40159e:	fa01 f303 	lsl.w	r3, r1, r3
  4015a2:	a80c      	add	r0, sp, #48	; 0x30
  4015a4:	1aeb      	subs	r3, r5, r3
  4015a6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  4015aa:	f1c9 0517 	rsb	r5, r9, #23
  4015ae:	4488      	add	r8, r1
  4015b0:	fa43 f505 	asr.w	r5, r3, r5
  4015b4:	2d00      	cmp	r5, #0
  4015b6:	dd63      	ble.n	401680 <__kernel_rem_pio2+0x2c0>
  4015b8:	9b00      	ldr	r3, [sp, #0]
  4015ba:	2b00      	cmp	r3, #0
  4015bc:	f108 0801 	add.w	r8, r8, #1
  4015c0:	f340 8281 	ble.w	401ac6 <__kernel_rem_pio2+0x706>
  4015c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4015c6:	2c00      	cmp	r4, #0
  4015c8:	f000 8318 	beq.w	401bfc <__kernel_rem_pio2+0x83c>
  4015cc:	2001      	movs	r0, #1
  4015ce:	2300      	movs	r3, #0
  4015d0:	aa0c      	add	r2, sp, #48	; 0x30
  4015d2:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
  4015d6:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
  4015da:	9a00      	ldr	r2, [sp, #0]
  4015dc:	4282      	cmp	r2, r0
  4015de:	dd19      	ble.n	401614 <__kernel_rem_pio2+0x254>
  4015e0:	aa0c      	add	r2, sp, #48	; 0x30
  4015e2:	ac0c      	add	r4, sp, #48	; 0x30
  4015e4:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
  4015e8:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
  4015ec:	1a51      	subs	r1, r2, r1
  4015ee:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
  4015f2:	9900      	ldr	r1, [sp, #0]
  4015f4:	3302      	adds	r3, #2
  4015f6:	4299      	cmp	r1, r3
  4015f8:	dd0c      	ble.n	401614 <__kernel_rem_pio2+0x254>
  4015fa:	4610      	mov	r0, r2
  4015fc:	9a00      	ldr	r2, [sp, #0]
  4015fe:	a90c      	add	r1, sp, #48	; 0x30
  401600:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  401604:	eb01 0182 	add.w	r1, r1, r2, lsl #2
  401608:	681a      	ldr	r2, [r3, #0]
  40160a:	1a82      	subs	r2, r0, r2
  40160c:	f843 2b04 	str.w	r2, [r3], #4
  401610:	428b      	cmp	r3, r1
  401612:	d1f9      	bne.n	401608 <__kernel_rem_pio2+0x248>
  401614:	9b04      	ldr	r3, [sp, #16]
  401616:	2b00      	cmp	r3, #0
  401618:	dd1a      	ble.n	401650 <__kernel_rem_pio2+0x290>
  40161a:	9b04      	ldr	r3, [sp, #16]
  40161c:	2b01      	cmp	r3, #1
  40161e:	f04f 0401 	mov.w	r4, #1
  401622:	f040 8258 	bne.w	401ad6 <__kernel_rem_pio2+0x716>
  401626:	9b00      	ldr	r3, [sp, #0]
  401628:	1e5a      	subs	r2, r3, #1
  40162a:	ab0c      	add	r3, sp, #48	; 0x30
  40162c:	a90c      	add	r1, sp, #48	; 0x30
  40162e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  401632:	f3c3 0316 	ubfx	r3, r3, #0, #23
  401636:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  40163a:	e258      	b.n	401aee <__kernel_rem_pio2+0x72e>
  40163c:	004032e0 	.word	0x004032e0
  401640:	2aaaaaab 	.word	0x2aaaaaab
  401644:	3e700000 	.word	0x3e700000
  401648:	41700000 	.word	0x41700000
  40164c:	40200000 	.word	0x40200000
  401650:	2d02      	cmp	r5, #2
  401652:	d115      	bne.n	401680 <__kernel_rem_pio2+0x2c0>
  401654:	4632      	mov	r2, r6
  401656:	463b      	mov	r3, r7
  401658:	2000      	movs	r0, #0
  40165a:	4997      	ldr	r1, [pc, #604]	; (4018b8 <__kernel_rem_pio2+0x4f8>)
  40165c:	f000 fcca 	bl	401ff4 <__aeabi_dsub>
  401660:	4606      	mov	r6, r0
  401662:	460f      	mov	r7, r1
  401664:	9a04      	ldr	r2, [sp, #16]
  401666:	4994      	ldr	r1, [pc, #592]	; (4018b8 <__kernel_rem_pio2+0x4f8>)
  401668:	2000      	movs	r0, #0
  40166a:	f000 fc39 	bl	401ee0 <scalbn>
  40166e:	4602      	mov	r2, r0
  401670:	460b      	mov	r3, r1
  401672:	4630      	mov	r0, r6
  401674:	4639      	mov	r1, r7
  401676:	f000 fcbd 	bl	401ff4 <__aeabi_dsub>
  40167a:	2502      	movs	r5, #2
  40167c:	4606      	mov	r6, r0
  40167e:	460f      	mov	r7, r1
  401680:	2200      	movs	r2, #0
  401682:	2300      	movs	r3, #0
  401684:	4630      	mov	r0, r6
  401686:	4639      	mov	r1, r7
  401688:	f001 f8d0 	bl	40282c <__aeabi_dcmpeq>
  40168c:	2800      	cmp	r0, #0
  40168e:	f000 8252 	beq.w	401b36 <__kernel_rem_pio2+0x776>
  401692:	9a00      	ldr	r2, [sp, #0]
  401694:	9b05      	ldr	r3, [sp, #20]
  401696:	1e50      	subs	r0, r2, #1
  401698:	4283      	cmp	r3, r0
  40169a:	dc0f      	bgt.n	4016bc <__kernel_rem_pio2+0x2fc>
  40169c:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
  4016a0:	3b01      	subs	r3, #1
  4016a2:	aa0c      	add	r2, sp, #48	; 0x30
  4016a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4016a6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4016aa:	2200      	movs	r2, #0
  4016ac:	f853 1904 	ldr.w	r1, [r3], #-4
  4016b0:	42a3      	cmp	r3, r4
  4016b2:	ea42 0201 	orr.w	r2, r2, r1
  4016b6:	d1f9      	bne.n	4016ac <__kernel_rem_pio2+0x2ec>
  4016b8:	2a00      	cmp	r2, #0
  4016ba:	d16f      	bne.n	40179c <__kernel_rem_pio2+0x3dc>
  4016bc:	9b05      	ldr	r3, [sp, #20]
  4016be:	aa0c      	add	r2, sp, #48	; 0x30
  4016c0:	3b01      	subs	r3, #1
  4016c2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4016c6:	2b00      	cmp	r3, #0
  4016c8:	f040 8233 	bne.w	401b32 <__kernel_rem_pio2+0x772>
  4016cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4016ce:	2301      	movs	r3, #1
  4016d0:	f852 1904 	ldr.w	r1, [r2], #-4
  4016d4:	3301      	adds	r3, #1
  4016d6:	2900      	cmp	r1, #0
  4016d8:	d0fa      	beq.n	4016d0 <__kernel_rem_pio2+0x310>
  4016da:	9a00      	ldr	r2, [sp, #0]
  4016dc:	18d3      	adds	r3, r2, r3
  4016de:	f102 0a01 	add.w	sl, r2, #1
  4016e2:	459a      	cmp	sl, r3
  4016e4:	9307      	str	r3, [sp, #28]
  4016e6:	dc3d      	bgt.n	401764 <__kernel_rem_pio2+0x3a4>
  4016e8:	9b00      	ldr	r3, [sp, #0]
  4016ea:	9908      	ldr	r1, [sp, #32]
  4016ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4016ee:	440b      	add	r3, r1
  4016f0:	9907      	ldr	r1, [sp, #28]
  4016f2:	eb0a 0802 	add.w	r8, sl, r2
  4016f6:	4699      	mov	r9, r3
  4016f8:	ab20      	add	r3, sp, #128	; 0x80
  4016fa:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
  4016fe:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
  401702:	188b      	adds	r3, r1, r2
  401704:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  401706:	f108 38ff 	add.w	r8, r8, #4294967295
  40170a:	eb02 0888 	add.w	r8, r2, r8, lsl #2
  40170e:	aa70      	add	r2, sp, #448	; 0x1c0
  401710:	eb02 0aca 	add.w	sl, r2, sl, lsl #3
  401714:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  401716:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40171a:	9300      	str	r3, [sp, #0]
  40171c:	f858 0f04 	ldr.w	r0, [r8, #4]!
  401720:	f000 fdb6 	bl	402290 <__aeabi_i2d>
  401724:	9b02      	ldr	r3, [sp, #8]
  401726:	2b00      	cmp	r3, #0
  401728:	e8e9 0102 	strd	r0, r1, [r9], #8
  40172c:	db1d      	blt.n	40176a <__kernel_rem_pio2+0x3aa>
  40172e:	9b03      	ldr	r3, [sp, #12]
  401730:	464d      	mov	r5, r9
  401732:	f1a3 0408 	sub.w	r4, r3, #8
  401736:	2600      	movs	r6, #0
  401738:	2700      	movs	r7, #0
  40173a:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  40173e:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  401742:	f000 fe0b 	bl	40235c <__aeabi_dmul>
  401746:	4602      	mov	r2, r0
  401748:	460b      	mov	r3, r1
  40174a:	4630      	mov	r0, r6
  40174c:	4639      	mov	r1, r7
  40174e:	f000 fc53 	bl	401ff8 <__adddf3>
  401752:	455c      	cmp	r4, fp
  401754:	4606      	mov	r6, r0
  401756:	460f      	mov	r7, r1
  401758:	d1ef      	bne.n	40173a <__kernel_rem_pio2+0x37a>
  40175a:	9b00      	ldr	r3, [sp, #0]
  40175c:	4598      	cmp	r8, r3
  40175e:	e8ea 6702 	strd	r6, r7, [sl], #8
  401762:	d1db      	bne.n	40171c <__kernel_rem_pio2+0x35c>
  401764:	9b07      	ldr	r3, [sp, #28]
  401766:	9300      	str	r3, [sp, #0]
  401768:	e6ae      	b.n	4014c8 <__kernel_rem_pio2+0x108>
  40176a:	9b00      	ldr	r3, [sp, #0]
  40176c:	2600      	movs	r6, #0
  40176e:	2700      	movs	r7, #0
  401770:	4598      	cmp	r8, r3
  401772:	e8ea 6702 	strd	r6, r7, [sl], #8
  401776:	d1d1      	bne.n	40171c <__kernel_rem_pio2+0x35c>
  401778:	e7f4      	b.n	401764 <__kernel_rem_pio2+0x3a4>
  40177a:	d106      	bne.n	40178a <__kernel_rem_pio2+0x3ca>
  40177c:	9b00      	ldr	r3, [sp, #0]
  40177e:	aa0c      	add	r2, sp, #48	; 0x30
  401780:	3b01      	subs	r3, #1
  401782:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  401786:	15ed      	asrs	r5, r5, #23
  401788:	e714      	b.n	4015b4 <__kernel_rem_pio2+0x1f4>
  40178a:	2200      	movs	r2, #0
  40178c:	4b4b      	ldr	r3, [pc, #300]	; (4018bc <__kernel_rem_pio2+0x4fc>)
  40178e:	f001 f86b 	bl	402868 <__aeabi_dcmpge>
  401792:	2800      	cmp	r0, #0
  401794:	f040 8182 	bne.w	401a9c <__kernel_rem_pio2+0x6dc>
  401798:	4605      	mov	r5, r0
  40179a:	e771      	b.n	401680 <__kernel_rem_pio2+0x2c0>
  40179c:	a90c      	add	r1, sp, #48	; 0x30
  40179e:	9502      	str	r5, [sp, #8]
  4017a0:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
  4017a4:	9904      	ldr	r1, [sp, #16]
  4017a6:	f8cd 801c 	str.w	r8, [sp, #28]
  4017aa:	3918      	subs	r1, #24
  4017ac:	4602      	mov	r2, r0
  4017ae:	9000      	str	r0, [sp, #0]
  4017b0:	9104      	str	r1, [sp, #16]
  4017b2:	b96b      	cbnz	r3, 4017d0 <__kernel_rem_pio2+0x410>
  4017b4:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  4017b8:	3b01      	subs	r3, #1
  4017ba:	a80c      	add	r0, sp, #48	; 0x30
  4017bc:	eb00 0383 	add.w	r3, r0, r3, lsl #2
  4017c0:	f853 0904 	ldr.w	r0, [r3], #-4
  4017c4:	3a01      	subs	r2, #1
  4017c6:	3918      	subs	r1, #24
  4017c8:	2800      	cmp	r0, #0
  4017ca:	d0f9      	beq.n	4017c0 <__kernel_rem_pio2+0x400>
  4017cc:	9200      	str	r2, [sp, #0]
  4017ce:	9104      	str	r1, [sp, #16]
  4017d0:	9a04      	ldr	r2, [sp, #16]
  4017d2:	4939      	ldr	r1, [pc, #228]	; (4018b8 <__kernel_rem_pio2+0x4f8>)
  4017d4:	2000      	movs	r0, #0
  4017d6:	f000 fb83 	bl	401ee0 <scalbn>
  4017da:	9b00      	ldr	r3, [sp, #0]
  4017dc:	2b00      	cmp	r3, #0
  4017de:	4604      	mov	r4, r0
  4017e0:	460d      	mov	r5, r1
  4017e2:	f2c0 8203 	blt.w	401bec <__kernel_rem_pio2+0x82c>
  4017e6:	00da      	lsls	r2, r3, #3
  4017e8:	a970      	add	r1, sp, #448	; 0x1c0
  4017ea:	eb01 0b02 	add.w	fp, r1, r2
  4017ee:	9204      	str	r2, [sp, #16]
  4017f0:	aa0c      	add	r2, sp, #48	; 0x30
  4017f2:	eb02 0683 	add.w	r6, r2, r3, lsl #2
  4017f6:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 4018c0 <__kernel_rem_pio2+0x500>
  4017fa:	f10b 0708 	add.w	r7, fp, #8
  4017fe:	3604      	adds	r6, #4
  401800:	f04f 0800 	mov.w	r8, #0
  401804:	f856 0d04 	ldr.w	r0, [r6, #-4]!
  401808:	f000 fd42 	bl	402290 <__aeabi_i2d>
  40180c:	4622      	mov	r2, r4
  40180e:	462b      	mov	r3, r5
  401810:	f000 fda4 	bl	40235c <__aeabi_dmul>
  401814:	464b      	mov	r3, r9
  401816:	e967 0102 	strd	r0, r1, [r7, #-8]!
  40181a:	4642      	mov	r2, r8
  40181c:	4620      	mov	r0, r4
  40181e:	4629      	mov	r1, r5
  401820:	f000 fd9c 	bl	40235c <__aeabi_dmul>
  401824:	ab0c      	add	r3, sp, #48	; 0x30
  401826:	429e      	cmp	r6, r3
  401828:	4604      	mov	r4, r0
  40182a:	460d      	mov	r5, r1
  40182c:	d1ea      	bne.n	401804 <__kernel_rem_pio2+0x444>
  40182e:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  401832:	f8cd a00c 	str.w	sl, [sp, #12]
  401836:	f8dd a014 	ldr.w	sl, [sp, #20]
  40183a:	f04f 0900 	mov.w	r9, #0
  40183e:	f1ba 0f00 	cmp.w	sl, #0
  401842:	f2c0 813d 	blt.w	401ac0 <__kernel_rem_pio2+0x700>
  401846:	f8df 807c 	ldr.w	r8, [pc, #124]	; 4018c4 <__kernel_rem_pio2+0x504>
  40184a:	465d      	mov	r5, fp
  40184c:	a118      	add	r1, pc, #96	; (adr r1, 4018b0 <__kernel_rem_pio2+0x4f0>)
  40184e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401852:	2600      	movs	r6, #0
  401854:	2700      	movs	r7, #0
  401856:	2400      	movs	r4, #0
  401858:	e003      	b.n	401862 <__kernel_rem_pio2+0x4a2>
  40185a:	454c      	cmp	r4, r9
  40185c:	dc10      	bgt.n	401880 <__kernel_rem_pio2+0x4c0>
  40185e:	e8f8 0102 	ldrd	r0, r1, [r8], #8
  401862:	e8f5 2302 	ldrd	r2, r3, [r5], #8
  401866:	f000 fd79 	bl	40235c <__aeabi_dmul>
  40186a:	4602      	mov	r2, r0
  40186c:	460b      	mov	r3, r1
  40186e:	4630      	mov	r0, r6
  401870:	4639      	mov	r1, r7
  401872:	f000 fbc1 	bl	401ff8 <__adddf3>
  401876:	3401      	adds	r4, #1
  401878:	45a2      	cmp	sl, r4
  40187a:	4606      	mov	r6, r0
  40187c:	460f      	mov	r7, r1
  40187e:	daec      	bge.n	40185a <__kernel_rem_pio2+0x49a>
  401880:	9b03      	ldr	r3, [sp, #12]
  401882:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  401886:	f1ab 0b08 	sub.w	fp, fp, #8
  40188a:	e9c3 6700 	strd	r6, r7, [r3]
  40188e:	ab6e      	add	r3, sp, #440	; 0x1b8
  401890:	455b      	cmp	r3, fp
  401892:	f109 0901 	add.w	r9, r9, #1
  401896:	d1d2      	bne.n	40183e <__kernel_rem_pio2+0x47e>
  401898:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  40189a:	f8dd a00c 	ldr.w	sl, [sp, #12]
  40189e:	2b03      	cmp	r3, #3
  4018a0:	f200 808b 	bhi.w	4019ba <__kernel_rem_pio2+0x5fa>
  4018a4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4018a8:	009000d1 	.word	0x009000d1
  4018ac:	00100090 	.word	0x00100090
  4018b0:	40000000 	.word	0x40000000
  4018b4:	3ff921fb 	.word	0x3ff921fb
  4018b8:	3ff00000 	.word	0x3ff00000
  4018bc:	3fe00000 	.word	0x3fe00000
  4018c0:	3e700000 	.word	0x3e700000
  4018c4:	004032a8 	.word	0x004032a8
  4018c8:	9b00      	ldr	r3, [sp, #0]
  4018ca:	2b00      	cmp	r3, #0
  4018cc:	f340 81a4 	ble.w	401c18 <__kernel_rem_pio2+0x858>
  4018d0:	9b04      	ldr	r3, [sp, #16]
  4018d2:	eb0a 0803 	add.w	r8, sl, r3
  4018d6:	e9d8 6700 	ldrd	r6, r7, [r8]
  4018da:	46d3      	mov	fp, sl
  4018dc:	e958 9a02 	ldrd	r9, sl, [r8, #-8]
  4018e0:	4632      	mov	r2, r6
  4018e2:	463b      	mov	r3, r7
  4018e4:	4648      	mov	r0, r9
  4018e6:	4651      	mov	r1, sl
  4018e8:	f000 fb86 	bl	401ff8 <__adddf3>
  4018ec:	4604      	mov	r4, r0
  4018ee:	460d      	mov	r5, r1
  4018f0:	4602      	mov	r2, r0
  4018f2:	460b      	mov	r3, r1
  4018f4:	4648      	mov	r0, r9
  4018f6:	4651      	mov	r1, sl
  4018f8:	f000 fb7c 	bl	401ff4 <__aeabi_dsub>
  4018fc:	4632      	mov	r2, r6
  4018fe:	463b      	mov	r3, r7
  401900:	f000 fb7a 	bl	401ff8 <__adddf3>
  401904:	e9c8 0100 	strd	r0, r1, [r8]
  401908:	e968 4502 	strd	r4, r5, [r8, #-8]!
  40190c:	45c3      	cmp	fp, r8
  40190e:	4626      	mov	r6, r4
  401910:	462f      	mov	r7, r5
  401912:	d1e3      	bne.n	4018dc <__kernel_rem_pio2+0x51c>
  401914:	9b00      	ldr	r3, [sp, #0]
  401916:	2b01      	cmp	r3, #1
  401918:	46da      	mov	sl, fp
  40191a:	f340 817d 	ble.w	401c18 <__kernel_rem_pio2+0x858>
  40191e:	9b04      	ldr	r3, [sp, #16]
  401920:	445b      	add	r3, fp
  401922:	e9d3 6700 	ldrd	r6, r7, [r3]
  401926:	4698      	mov	r8, r3
  401928:	4699      	mov	r9, r3
  40192a:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
  40192e:	e959 3402 	ldrd	r3, r4, [r9, #-8]
  401932:	4632      	mov	r2, r6
  401934:	4618      	mov	r0, r3
  401936:	4621      	mov	r1, r4
  401938:	463b      	mov	r3, r7
  40193a:	e9cd 0100 	strd	r0, r1, [sp]
  40193e:	f000 fb5b 	bl	401ff8 <__adddf3>
  401942:	4604      	mov	r4, r0
  401944:	460d      	mov	r5, r1
  401946:	4602      	mov	r2, r0
  401948:	460b      	mov	r3, r1
  40194a:	e9dd 0100 	ldrd	r0, r1, [sp]
  40194e:	f000 fb51 	bl	401ff4 <__aeabi_dsub>
  401952:	4632      	mov	r2, r6
  401954:	463b      	mov	r3, r7
  401956:	f000 fb4f 	bl	401ff8 <__adddf3>
  40195a:	e9c9 0100 	strd	r0, r1, [r9]
  40195e:	e969 4502 	strd	r4, r5, [r9, #-8]!
  401962:	45cb      	cmp	fp, r9
  401964:	4626      	mov	r6, r4
  401966:	462f      	mov	r7, r5
  401968:	d1e1      	bne.n	40192e <__kernel_rem_pio2+0x56e>
  40196a:	2300      	movs	r3, #0
  40196c:	f108 0808 	add.w	r8, r8, #8
  401970:	461d      	mov	r5, r3
  401972:	ac4c      	add	r4, sp, #304	; 0x130
  401974:	4618      	mov	r0, r3
  401976:	4629      	mov	r1, r5
  401978:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
  40197c:	f000 fb3c 	bl	401ff8 <__adddf3>
  401980:	4544      	cmp	r4, r8
  401982:	4603      	mov	r3, r0
  401984:	460d      	mov	r5, r1
  401986:	d1f5      	bne.n	401974 <__kernel_rem_pio2+0x5b4>
  401988:	9a02      	ldr	r2, [sp, #8]
  40198a:	2a00      	cmp	r2, #0
  40198c:	f000 8120 	beq.w	401bd0 <__kernel_rem_pio2+0x810>
  401990:	f8da 4004 	ldr.w	r4, [sl, #4]
  401994:	f8da 200c 	ldr.w	r2, [sl, #12]
  401998:	9f06      	ldr	r7, [sp, #24]
  40199a:	f8da 1000 	ldr.w	r1, [sl]
  40199e:	f8da 0008 	ldr.w	r0, [sl, #8]
  4019a2:	613b      	str	r3, [r7, #16]
  4019a4:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
  4019a8:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
  4019ac:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  4019b0:	617d      	str	r5, [r7, #20]
  4019b2:	607c      	str	r4, [r7, #4]
  4019b4:	60fa      	str	r2, [r7, #12]
  4019b6:	6039      	str	r1, [r7, #0]
  4019b8:	60b8      	str	r0, [r7, #8]
  4019ba:	9b07      	ldr	r3, [sp, #28]
  4019bc:	f003 0007 	and.w	r0, r3, #7
  4019c0:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  4019c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4019c8:	9c04      	ldr	r4, [sp, #16]
  4019ca:	2600      	movs	r6, #0
  4019cc:	3408      	adds	r4, #8
  4019ce:	4454      	add	r4, sl
  4019d0:	4633      	mov	r3, r6
  4019d2:	4630      	mov	r0, r6
  4019d4:	4619      	mov	r1, r3
  4019d6:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  4019da:	f000 fb0d 	bl	401ff8 <__adddf3>
  4019de:	4554      	cmp	r4, sl
  4019e0:	4606      	mov	r6, r0
  4019e2:	460b      	mov	r3, r1
  4019e4:	d1f5      	bne.n	4019d2 <__kernel_rem_pio2+0x612>
  4019e6:	9a02      	ldr	r2, [sp, #8]
  4019e8:	4630      	mov	r0, r6
  4019ea:	4619      	mov	r1, r3
  4019ec:	2a00      	cmp	r2, #0
  4019ee:	f000 80da 	beq.w	401ba6 <__kernel_rem_pio2+0x7e6>
  4019f2:	9806      	ldr	r0, [sp, #24]
  4019f4:	f103 4400 	add.w	r4, r3, #2147483648	; 0x80000000
  4019f8:	4632      	mov	r2, r6
  4019fa:	6044      	str	r4, [r0, #4]
  4019fc:	6006      	str	r6, [r0, #0]
  4019fe:	e9da 0100 	ldrd	r0, r1, [sl]
  401a02:	f000 faf7 	bl	401ff4 <__aeabi_dsub>
  401a06:	460b      	mov	r3, r1
  401a08:	9900      	ldr	r1, [sp, #0]
  401a0a:	2900      	cmp	r1, #0
  401a0c:	4602      	mov	r2, r0
  401a0e:	dd0e      	ble.n	401a2e <__kernel_rem_pio2+0x66e>
  401a10:	2401      	movs	r4, #1
  401a12:	4610      	mov	r0, r2
  401a14:	4619      	mov	r1, r3
  401a16:	e9fa 2302 	ldrd	r2, r3, [sl, #8]!
  401a1a:	f000 faed 	bl	401ff8 <__adddf3>
  401a1e:	460b      	mov	r3, r1
  401a20:	9900      	ldr	r1, [sp, #0]
  401a22:	3401      	adds	r4, #1
  401a24:	42a1      	cmp	r1, r4
  401a26:	4602      	mov	r2, r0
  401a28:	daf3      	bge.n	401a12 <__kernel_rem_pio2+0x652>
  401a2a:	9902      	ldr	r1, [sp, #8]
  401a2c:	b109      	cbz	r1, 401a32 <__kernel_rem_pio2+0x672>
  401a2e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  401a32:	4619      	mov	r1, r3
  401a34:	9b06      	ldr	r3, [sp, #24]
  401a36:	4610      	mov	r0, r2
  401a38:	e9c3 0102 	strd	r0, r1, [r3, #8]
  401a3c:	9b07      	ldr	r3, [sp, #28]
  401a3e:	f003 0007 	and.w	r0, r3, #7
  401a42:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  401a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a4a:	9c04      	ldr	r4, [sp, #16]
  401a4c:	2200      	movs	r2, #0
  401a4e:	3408      	adds	r4, #8
  401a50:	4454      	add	r4, sl
  401a52:	4613      	mov	r3, r2
  401a54:	4610      	mov	r0, r2
  401a56:	4619      	mov	r1, r3
  401a58:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  401a5c:	f000 facc 	bl	401ff8 <__adddf3>
  401a60:	45a2      	cmp	sl, r4
  401a62:	4602      	mov	r2, r0
  401a64:	460b      	mov	r3, r1
  401a66:	d1f5      	bne.n	401a54 <__kernel_rem_pio2+0x694>
  401a68:	9902      	ldr	r1, [sp, #8]
  401a6a:	b109      	cbz	r1, 401a70 <__kernel_rem_pio2+0x6b0>
  401a6c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  401a70:	4619      	mov	r1, r3
  401a72:	9b06      	ldr	r3, [sp, #24]
  401a74:	4610      	mov	r0, r2
  401a76:	e9c3 0100 	strd	r0, r1, [r3]
  401a7a:	9b07      	ldr	r3, [sp, #28]
  401a7c:	f003 0007 	and.w	r0, r3, #7
  401a80:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  401a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a88:	2600      	movs	r6, #0
  401a8a:	2700      	movs	r7, #0
  401a8c:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  401a90:	45da      	cmp	sl, fp
  401a92:	f109 0908 	add.w	r9, r9, #8
  401a96:	f47f ace4 	bne.w	401462 <__kernel_rem_pio2+0xa2>
  401a9a:	e502      	b.n	4014a2 <__kernel_rem_pio2+0xe2>
  401a9c:	9b00      	ldr	r3, [sp, #0]
  401a9e:	2b00      	cmp	r3, #0
  401aa0:	f108 0801 	add.w	r8, r8, #1
  401aa4:	bfc8      	it	gt
  401aa6:	2502      	movgt	r5, #2
  401aa8:	f73f ad8c 	bgt.w	4015c4 <__kernel_rem_pio2+0x204>
  401aac:	4632      	mov	r2, r6
  401aae:	463b      	mov	r3, r7
  401ab0:	2000      	movs	r0, #0
  401ab2:	4963      	ldr	r1, [pc, #396]	; (401c40 <__kernel_rem_pio2+0x880>)
  401ab4:	f000 fa9e 	bl	401ff4 <__aeabi_dsub>
  401ab8:	2502      	movs	r5, #2
  401aba:	4606      	mov	r6, r0
  401abc:	460f      	mov	r7, r1
  401abe:	e5df      	b.n	401680 <__kernel_rem_pio2+0x2c0>
  401ac0:	2600      	movs	r6, #0
  401ac2:	2700      	movs	r7, #0
  401ac4:	e6dc      	b.n	401880 <__kernel_rem_pio2+0x4c0>
  401ac6:	9b04      	ldr	r3, [sp, #16]
  401ac8:	2b00      	cmp	r3, #0
  401aca:	dd26      	ble.n	401b1a <__kernel_rem_pio2+0x75a>
  401acc:	2400      	movs	r4, #0
  401ace:	9b04      	ldr	r3, [sp, #16]
  401ad0:	2b01      	cmp	r3, #1
  401ad2:	f43f ada8 	beq.w	401626 <__kernel_rem_pio2+0x266>
  401ad6:	2b02      	cmp	r3, #2
  401ad8:	d109      	bne.n	401aee <__kernel_rem_pio2+0x72e>
  401ada:	9b00      	ldr	r3, [sp, #0]
  401adc:	1e5a      	subs	r2, r3, #1
  401ade:	ab0c      	add	r3, sp, #48	; 0x30
  401ae0:	a90c      	add	r1, sp, #48	; 0x30
  401ae2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  401ae6:	f3c3 0315 	ubfx	r3, r3, #0, #22
  401aea:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  401aee:	2d02      	cmp	r5, #2
  401af0:	f47f adc6 	bne.w	401680 <__kernel_rem_pio2+0x2c0>
  401af4:	4632      	mov	r2, r6
  401af6:	463b      	mov	r3, r7
  401af8:	2000      	movs	r0, #0
  401afa:	4951      	ldr	r1, [pc, #324]	; (401c40 <__kernel_rem_pio2+0x880>)
  401afc:	f000 fa7a 	bl	401ff4 <__aeabi_dsub>
  401b00:	4606      	mov	r6, r0
  401b02:	460f      	mov	r7, r1
  401b04:	2c00      	cmp	r4, #0
  401b06:	f43f adbb 	beq.w	401680 <__kernel_rem_pio2+0x2c0>
  401b0a:	e5ab      	b.n	401664 <__kernel_rem_pio2+0x2a4>
  401b0c:	9900      	ldr	r1, [sp, #0]
  401b0e:	3301      	adds	r3, #1
  401b10:	4299      	cmp	r1, r3
  401b12:	d178      	bne.n	401c06 <__kernel_rem_pio2+0x846>
  401b14:	9b04      	ldr	r3, [sp, #16]
  401b16:	2b00      	cmp	r3, #0
  401b18:	dcd9      	bgt.n	401ace <__kernel_rem_pio2+0x70e>
  401b1a:	2d02      	cmp	r5, #2
  401b1c:	f47f adb0 	bne.w	401680 <__kernel_rem_pio2+0x2c0>
  401b20:	4632      	mov	r2, r6
  401b22:	463b      	mov	r3, r7
  401b24:	2000      	movs	r0, #0
  401b26:	4946      	ldr	r1, [pc, #280]	; (401c40 <__kernel_rem_pio2+0x880>)
  401b28:	f000 fa64 	bl	401ff4 <__aeabi_dsub>
  401b2c:	4606      	mov	r6, r0
  401b2e:	460f      	mov	r7, r1
  401b30:	e5a6      	b.n	401680 <__kernel_rem_pio2+0x2c0>
  401b32:	2301      	movs	r3, #1
  401b34:	e5d1      	b.n	4016da <__kernel_rem_pio2+0x31a>
  401b36:	4639      	mov	r1, r7
  401b38:	9f04      	ldr	r7, [sp, #16]
  401b3a:	9502      	str	r5, [sp, #8]
  401b3c:	427a      	negs	r2, r7
  401b3e:	4630      	mov	r0, r6
  401b40:	f8cd 801c 	str.w	r8, [sp, #28]
  401b44:	f000 f9cc 	bl	401ee0 <scalbn>
  401b48:	2200      	movs	r2, #0
  401b4a:	4b3e      	ldr	r3, [pc, #248]	; (401c44 <__kernel_rem_pio2+0x884>)
  401b4c:	4604      	mov	r4, r0
  401b4e:	460d      	mov	r5, r1
  401b50:	f000 fe8a 	bl	402868 <__aeabi_dcmpge>
  401b54:	2800      	cmp	r0, #0
  401b56:	d062      	beq.n	401c1e <__kernel_rem_pio2+0x85e>
  401b58:	2200      	movs	r2, #0
  401b5a:	4b3b      	ldr	r3, [pc, #236]	; (401c48 <__kernel_rem_pio2+0x888>)
  401b5c:	4620      	mov	r0, r4
  401b5e:	4629      	mov	r1, r5
  401b60:	f000 fbfc 	bl	40235c <__aeabi_dmul>
  401b64:	f000 fe94 	bl	402890 <__aeabi_d2iz>
  401b68:	4606      	mov	r6, r0
  401b6a:	f000 fb91 	bl	402290 <__aeabi_i2d>
  401b6e:	2200      	movs	r2, #0
  401b70:	4b34      	ldr	r3, [pc, #208]	; (401c44 <__kernel_rem_pio2+0x884>)
  401b72:	f000 fbf3 	bl	40235c <__aeabi_dmul>
  401b76:	4602      	mov	r2, r0
  401b78:	460b      	mov	r3, r1
  401b7a:	4620      	mov	r0, r4
  401b7c:	4629      	mov	r1, r5
  401b7e:	f000 fa39 	bl	401ff4 <__aeabi_dsub>
  401b82:	f000 fe85 	bl	402890 <__aeabi_d2iz>
  401b86:	9900      	ldr	r1, [sp, #0]
  401b88:	460b      	mov	r3, r1
  401b8a:	3301      	adds	r3, #1
  401b8c:	461a      	mov	r2, r3
  401b8e:	9300      	str	r3, [sp, #0]
  401b90:	463b      	mov	r3, r7
  401b92:	3318      	adds	r3, #24
  401b94:	9304      	str	r3, [sp, #16]
  401b96:	460b      	mov	r3, r1
  401b98:	a90c      	add	r1, sp, #48	; 0x30
  401b9a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  401b9e:	4613      	mov	r3, r2
  401ba0:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
  401ba4:	e614      	b.n	4017d0 <__kernel_rem_pio2+0x410>
  401ba6:	9b06      	ldr	r3, [sp, #24]
  401ba8:	4632      	mov	r2, r6
  401baa:	e9c3 0100 	strd	r0, r1, [r3]
  401bae:	460b      	mov	r3, r1
  401bb0:	e9da 0100 	ldrd	r0, r1, [sl]
  401bb4:	f000 fa1e 	bl	401ff4 <__aeabi_dsub>
  401bb8:	460b      	mov	r3, r1
  401bba:	9900      	ldr	r1, [sp, #0]
  401bbc:	2900      	cmp	r1, #0
  401bbe:	4602      	mov	r2, r0
  401bc0:	f73f af26 	bgt.w	401a10 <__kernel_rem_pio2+0x650>
  401bc4:	4619      	mov	r1, r3
  401bc6:	9b06      	ldr	r3, [sp, #24]
  401bc8:	4610      	mov	r0, r2
  401bca:	e9c3 0102 	strd	r0, r1, [r3, #8]
  401bce:	e735      	b.n	401a3c <__kernel_rem_pio2+0x67c>
  401bd0:	4618      	mov	r0, r3
  401bd2:	4629      	mov	r1, r5
  401bd4:	e9da 2300 	ldrd	r2, r3, [sl]
  401bd8:	e9da 4502 	ldrd	r4, r5, [sl, #8]
  401bdc:	9f06      	ldr	r7, [sp, #24]
  401bde:	e9c7 0104 	strd	r0, r1, [r7, #16]
  401be2:	e9c7 2300 	strd	r2, r3, [r7]
  401be6:	e9c7 4502 	strd	r4, r5, [r7, #8]
  401bea:	e6e6      	b.n	4019ba <__kernel_rem_pio2+0x5fa>
  401bec:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  401bee:	2b03      	cmp	r3, #3
  401bf0:	f63f aee3 	bhi.w	4019ba <__kernel_rem_pio2+0x5fa>
  401bf4:	e8df f003 	tbb	[pc, r3]
  401bf8:	0e1c1c21 	.word	0x0e1c1c21
  401bfc:	9b00      	ldr	r3, [sp, #0]
  401bfe:	2b01      	cmp	r3, #1
  401c00:	dd88      	ble.n	401b14 <__kernel_rem_pio2+0x754>
  401c02:	aa0c      	add	r2, sp, #48	; 0x30
  401c04:	2301      	movs	r3, #1
  401c06:	f852 4f04 	ldr.w	r4, [r2, #4]!
  401c0a:	2c00      	cmp	r4, #0
  401c0c:	f43f af7e 	beq.w	401b0c <__kernel_rem_pio2+0x74c>
  401c10:	1c58      	adds	r0, r3, #1
  401c12:	e4dd      	b.n	4015d0 <__kernel_rem_pio2+0x210>
  401c14:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  401c18:	2300      	movs	r3, #0
  401c1a:	461d      	mov	r5, r3
  401c1c:	e6b4      	b.n	401988 <__kernel_rem_pio2+0x5c8>
  401c1e:	4629      	mov	r1, r5
  401c20:	4620      	mov	r0, r4
  401c22:	f000 fe35 	bl	402890 <__aeabi_d2iz>
  401c26:	9a00      	ldr	r2, [sp, #0]
  401c28:	a90c      	add	r1, sp, #48	; 0x30
  401c2a:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
  401c2e:	e5cf      	b.n	4017d0 <__kernel_rem_pio2+0x410>
  401c30:	2600      	movs	r6, #0
  401c32:	4633      	mov	r3, r6
  401c34:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  401c38:	e6d5      	b.n	4019e6 <__kernel_rem_pio2+0x626>
  401c3a:	2200      	movs	r2, #0
  401c3c:	4613      	mov	r3, r2
  401c3e:	e713      	b.n	401a68 <__kernel_rem_pio2+0x6a8>
  401c40:	3ff00000 	.word	0x3ff00000
  401c44:	41700000 	.word	0x41700000
  401c48:	3e700000 	.word	0x3e700000
  401c4c:	00000000 	.word	0x00000000

00401c50 <__kernel_sin>:
  401c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401c54:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  401c58:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  401c5c:	b085      	sub	sp, #20
  401c5e:	460c      	mov	r4, r1
  401c60:	4690      	mov	r8, r2
  401c62:	4699      	mov	r9, r3
  401c64:	4605      	mov	r5, r0
  401c66:	da04      	bge.n	401c72 <__kernel_sin+0x22>
  401c68:	f000 fe12 	bl	402890 <__aeabi_d2iz>
  401c6c:	2800      	cmp	r0, #0
  401c6e:	f000 8085 	beq.w	401d7c <__kernel_sin+0x12c>
  401c72:	462a      	mov	r2, r5
  401c74:	4623      	mov	r3, r4
  401c76:	4628      	mov	r0, r5
  401c78:	4621      	mov	r1, r4
  401c7a:	f000 fb6f 	bl	40235c <__aeabi_dmul>
  401c7e:	4606      	mov	r6, r0
  401c80:	460f      	mov	r7, r1
  401c82:	4602      	mov	r2, r0
  401c84:	460b      	mov	r3, r1
  401c86:	4628      	mov	r0, r5
  401c88:	4621      	mov	r1, r4
  401c8a:	f000 fb67 	bl	40235c <__aeabi_dmul>
  401c8e:	a33e      	add	r3, pc, #248	; (adr r3, 401d88 <__kernel_sin+0x138>)
  401c90:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c94:	4682      	mov	sl, r0
  401c96:	468b      	mov	fp, r1
  401c98:	4630      	mov	r0, r6
  401c9a:	4639      	mov	r1, r7
  401c9c:	f000 fb5e 	bl	40235c <__aeabi_dmul>
  401ca0:	a33b      	add	r3, pc, #236	; (adr r3, 401d90 <__kernel_sin+0x140>)
  401ca2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ca6:	f000 f9a5 	bl	401ff4 <__aeabi_dsub>
  401caa:	4632      	mov	r2, r6
  401cac:	463b      	mov	r3, r7
  401cae:	f000 fb55 	bl	40235c <__aeabi_dmul>
  401cb2:	a339      	add	r3, pc, #228	; (adr r3, 401d98 <__kernel_sin+0x148>)
  401cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cb8:	f000 f99e 	bl	401ff8 <__adddf3>
  401cbc:	4632      	mov	r2, r6
  401cbe:	463b      	mov	r3, r7
  401cc0:	f000 fb4c 	bl	40235c <__aeabi_dmul>
  401cc4:	a336      	add	r3, pc, #216	; (adr r3, 401da0 <__kernel_sin+0x150>)
  401cc6:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cca:	f000 f993 	bl	401ff4 <__aeabi_dsub>
  401cce:	4632      	mov	r2, r6
  401cd0:	463b      	mov	r3, r7
  401cd2:	f000 fb43 	bl	40235c <__aeabi_dmul>
  401cd6:	a334      	add	r3, pc, #208	; (adr r3, 401da8 <__kernel_sin+0x158>)
  401cd8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cdc:	f000 f98c 	bl	401ff8 <__adddf3>
  401ce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401ce2:	e9cd 0100 	strd	r0, r1, [sp]
  401ce6:	b39b      	cbz	r3, 401d50 <__kernel_sin+0x100>
  401ce8:	2200      	movs	r2, #0
  401cea:	4b33      	ldr	r3, [pc, #204]	; (401db8 <__kernel_sin+0x168>)
  401cec:	4640      	mov	r0, r8
  401cee:	4649      	mov	r1, r9
  401cf0:	f000 fb34 	bl	40235c <__aeabi_dmul>
  401cf4:	e9dd 2300 	ldrd	r2, r3, [sp]
  401cf8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401cfc:	4650      	mov	r0, sl
  401cfe:	4659      	mov	r1, fp
  401d00:	f000 fb2c 	bl	40235c <__aeabi_dmul>
  401d04:	4602      	mov	r2, r0
  401d06:	460b      	mov	r3, r1
  401d08:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401d0c:	f000 f972 	bl	401ff4 <__aeabi_dsub>
  401d10:	4632      	mov	r2, r6
  401d12:	463b      	mov	r3, r7
  401d14:	f000 fb22 	bl	40235c <__aeabi_dmul>
  401d18:	4642      	mov	r2, r8
  401d1a:	464b      	mov	r3, r9
  401d1c:	f000 f96a 	bl	401ff4 <__aeabi_dsub>
  401d20:	a323      	add	r3, pc, #140	; (adr r3, 401db0 <__kernel_sin+0x160>)
  401d22:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d26:	4606      	mov	r6, r0
  401d28:	460f      	mov	r7, r1
  401d2a:	4650      	mov	r0, sl
  401d2c:	4659      	mov	r1, fp
  401d2e:	f000 fb15 	bl	40235c <__aeabi_dmul>
  401d32:	4602      	mov	r2, r0
  401d34:	460b      	mov	r3, r1
  401d36:	4630      	mov	r0, r6
  401d38:	4639      	mov	r1, r7
  401d3a:	f000 f95d 	bl	401ff8 <__adddf3>
  401d3e:	4602      	mov	r2, r0
  401d40:	460b      	mov	r3, r1
  401d42:	4628      	mov	r0, r5
  401d44:	4621      	mov	r1, r4
  401d46:	f000 f955 	bl	401ff4 <__aeabi_dsub>
  401d4a:	b005      	add	sp, #20
  401d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d50:	4602      	mov	r2, r0
  401d52:	460b      	mov	r3, r1
  401d54:	4630      	mov	r0, r6
  401d56:	4639      	mov	r1, r7
  401d58:	f000 fb00 	bl	40235c <__aeabi_dmul>
  401d5c:	a314      	add	r3, pc, #80	; (adr r3, 401db0 <__kernel_sin+0x160>)
  401d5e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d62:	f000 f947 	bl	401ff4 <__aeabi_dsub>
  401d66:	4652      	mov	r2, sl
  401d68:	465b      	mov	r3, fp
  401d6a:	f000 faf7 	bl	40235c <__aeabi_dmul>
  401d6e:	462a      	mov	r2, r5
  401d70:	4623      	mov	r3, r4
  401d72:	f000 f941 	bl	401ff8 <__adddf3>
  401d76:	b005      	add	sp, #20
  401d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d7c:	4628      	mov	r0, r5
  401d7e:	4621      	mov	r1, r4
  401d80:	b005      	add	sp, #20
  401d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d86:	bf00      	nop
  401d88:	5acfd57c 	.word	0x5acfd57c
  401d8c:	3de5d93a 	.word	0x3de5d93a
  401d90:	8a2b9ceb 	.word	0x8a2b9ceb
  401d94:	3e5ae5e6 	.word	0x3e5ae5e6
  401d98:	57b1fe7d 	.word	0x57b1fe7d
  401d9c:	3ec71de3 	.word	0x3ec71de3
  401da0:	19c161d5 	.word	0x19c161d5
  401da4:	3f2a01a0 	.word	0x3f2a01a0
  401da8:	1110f8a6 	.word	0x1110f8a6
  401dac:	3f811111 	.word	0x3f811111
  401db0:	55555549 	.word	0x55555549
  401db4:	3fc55555 	.word	0x3fc55555
  401db8:	3fe00000 	.word	0x3fe00000

00401dbc <fabs>:
  401dbc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401dc0:	4770      	bx	lr
  401dc2:	bf00      	nop
  401dc4:	0000      	movs	r0, r0
	...

00401dc8 <floor>:
  401dc8:	f3c1 520a 	ubfx	r2, r1, #20, #11
  401dcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401dd0:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
  401dd4:	2e13      	cmp	r6, #19
  401dd6:	460b      	mov	r3, r1
  401dd8:	460d      	mov	r5, r1
  401dda:	4604      	mov	r4, r0
  401ddc:	4688      	mov	r8, r1
  401dde:	4607      	mov	r7, r0
  401de0:	dc1d      	bgt.n	401e1e <floor+0x56>
  401de2:	2e00      	cmp	r6, #0
  401de4:	db40      	blt.n	401e68 <floor+0xa0>
  401de6:	4a3c      	ldr	r2, [pc, #240]	; (401ed8 <floor+0x110>)
  401de8:	fa42 f906 	asr.w	r9, r2, r6
  401dec:	ea01 0209 	and.w	r2, r1, r9
  401df0:	4302      	orrs	r2, r0
  401df2:	4686      	mov	lr, r0
  401df4:	d018      	beq.n	401e28 <floor+0x60>
  401df6:	a336      	add	r3, pc, #216	; (adr r3, 401ed0 <floor+0x108>)
  401df8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401dfc:	f000 f8fc 	bl	401ff8 <__adddf3>
  401e00:	2200      	movs	r2, #0
  401e02:	2300      	movs	r3, #0
  401e04:	f000 fd3a 	bl	40287c <__aeabi_dcmpgt>
  401e08:	b120      	cbz	r0, 401e14 <floor+0x4c>
  401e0a:	2d00      	cmp	r5, #0
  401e0c:	db42      	blt.n	401e94 <floor+0xcc>
  401e0e:	ea28 0509 	bic.w	r5, r8, r9
  401e12:	2700      	movs	r7, #0
  401e14:	463c      	mov	r4, r7
  401e16:	4629      	mov	r1, r5
  401e18:	4620      	mov	r0, r4
  401e1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401e1e:	2e33      	cmp	r6, #51	; 0x33
  401e20:	dd06      	ble.n	401e30 <floor+0x68>
  401e22:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  401e26:	d02f      	beq.n	401e88 <floor+0xc0>
  401e28:	4619      	mov	r1, r3
  401e2a:	4620      	mov	r0, r4
  401e2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401e30:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
  401e34:	f04f 39ff 	mov.w	r9, #4294967295
  401e38:	fa29 f902 	lsr.w	r9, r9, r2
  401e3c:	ea10 0f09 	tst.w	r0, r9
  401e40:	d0f2      	beq.n	401e28 <floor+0x60>
  401e42:	a323      	add	r3, pc, #140	; (adr r3, 401ed0 <floor+0x108>)
  401e44:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e48:	f000 f8d6 	bl	401ff8 <__adddf3>
  401e4c:	2200      	movs	r2, #0
  401e4e:	2300      	movs	r3, #0
  401e50:	f000 fd14 	bl	40287c <__aeabi_dcmpgt>
  401e54:	2800      	cmp	r0, #0
  401e56:	d0dd      	beq.n	401e14 <floor+0x4c>
  401e58:	2d00      	cmp	r5, #0
  401e5a:	db21      	blt.n	401ea0 <floor+0xd8>
  401e5c:	4645      	mov	r5, r8
  401e5e:	ea27 0709 	bic.w	r7, r7, r9
  401e62:	463c      	mov	r4, r7
  401e64:	4629      	mov	r1, r5
  401e66:	e7d7      	b.n	401e18 <floor+0x50>
  401e68:	a319      	add	r3, pc, #100	; (adr r3, 401ed0 <floor+0x108>)
  401e6a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e6e:	f000 f8c3 	bl	401ff8 <__adddf3>
  401e72:	2200      	movs	r2, #0
  401e74:	2300      	movs	r3, #0
  401e76:	f000 fd01 	bl	40287c <__aeabi_dcmpgt>
  401e7a:	2800      	cmp	r0, #0
  401e7c:	d0ca      	beq.n	401e14 <floor+0x4c>
  401e7e:	2d00      	cmp	r5, #0
  401e80:	db19      	blt.n	401eb6 <floor+0xee>
  401e82:	2700      	movs	r7, #0
  401e84:	463d      	mov	r5, r7
  401e86:	e7c5      	b.n	401e14 <floor+0x4c>
  401e88:	4602      	mov	r2, r0
  401e8a:	460b      	mov	r3, r1
  401e8c:	f000 f8b4 	bl	401ff8 <__adddf3>
  401e90:	4604      	mov	r4, r0
  401e92:	e7ca      	b.n	401e2a <floor+0x62>
  401e94:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  401e98:	fa43 f606 	asr.w	r6, r3, r6
  401e9c:	44b0      	add	r8, r6
  401e9e:	e7b6      	b.n	401e0e <floor+0x46>
  401ea0:	2e14      	cmp	r6, #20
  401ea2:	d010      	beq.n	401ec6 <floor+0xfe>
  401ea4:	2301      	movs	r3, #1
  401ea6:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
  401eaa:	fa03 f606 	lsl.w	r6, r3, r6
  401eae:	1937      	adds	r7, r6, r4
  401eb0:	bf28      	it	cs
  401eb2:	4498      	addcs	r8, r3
  401eb4:	e7d2      	b.n	401e5c <floor+0x94>
  401eb6:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
  401eba:	4b08      	ldr	r3, [pc, #32]	; (401edc <floor+0x114>)
  401ebc:	4322      	orrs	r2, r4
  401ebe:	bf18      	it	ne
  401ec0:	461d      	movne	r5, r3
  401ec2:	2700      	movs	r7, #0
  401ec4:	e7a6      	b.n	401e14 <floor+0x4c>
  401ec6:	f105 0801 	add.w	r8, r5, #1
  401eca:	e7c7      	b.n	401e5c <floor+0x94>
  401ecc:	f3af 8000 	nop.w
  401ed0:	8800759c 	.word	0x8800759c
  401ed4:	7e37e43c 	.word	0x7e37e43c
  401ed8:	000fffff 	.word	0x000fffff
  401edc:	bff00000 	.word	0xbff00000

00401ee0 <scalbn>:
  401ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401ee2:	f3c1 560a 	ubfx	r6, r1, #20, #11
  401ee6:	4604      	mov	r4, r0
  401ee8:	460d      	mov	r5, r1
  401eea:	460b      	mov	r3, r1
  401eec:	4617      	mov	r7, r2
  401eee:	bb0e      	cbnz	r6, 401f34 <scalbn+0x54>
  401ef0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  401ef4:	4303      	orrs	r3, r0
  401ef6:	4686      	mov	lr, r0
  401ef8:	d025      	beq.n	401f46 <scalbn+0x66>
  401efa:	2200      	movs	r2, #0
  401efc:	4b34      	ldr	r3, [pc, #208]	; (401fd0 <scalbn+0xf0>)
  401efe:	f000 fa2d 	bl	40235c <__aeabi_dmul>
  401f02:	4a34      	ldr	r2, [pc, #208]	; (401fd4 <scalbn+0xf4>)
  401f04:	4297      	cmp	r7, r2
  401f06:	4604      	mov	r4, r0
  401f08:	460d      	mov	r5, r1
  401f0a:	460b      	mov	r3, r1
  401f0c:	db2a      	blt.n	401f64 <scalbn+0x84>
  401f0e:	f3c1 560a 	ubfx	r6, r1, #20, #11
  401f12:	3e36      	subs	r6, #54	; 0x36
  401f14:	443e      	add	r6, r7
  401f16:	f240 72fe 	movw	r2, #2046	; 0x7fe
  401f1a:	4296      	cmp	r6, r2
  401f1c:	dc28      	bgt.n	401f70 <scalbn+0x90>
  401f1e:	2e00      	cmp	r6, #0
  401f20:	dd12      	ble.n	401f48 <scalbn+0x68>
  401f22:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  401f26:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  401f2a:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  401f2e:	4620      	mov	r0, r4
  401f30:	4629      	mov	r1, r5
  401f32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401f34:	f240 72ff 	movw	r2, #2047	; 0x7ff
  401f38:	4296      	cmp	r6, r2
  401f3a:	d1eb      	bne.n	401f14 <scalbn+0x34>
  401f3c:	4602      	mov	r2, r0
  401f3e:	460b      	mov	r3, r1
  401f40:	f000 f85a 	bl	401ff8 <__adddf3>
  401f44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401f46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401f48:	f116 0f35 	cmn.w	r6, #53	; 0x35
  401f4c:	da1d      	bge.n	401f8a <scalbn+0xaa>
  401f4e:	f24c 3350 	movw	r3, #50000	; 0xc350
  401f52:	429f      	cmp	r7, r3
  401f54:	4622      	mov	r2, r4
  401f56:	462b      	mov	r3, r5
  401f58:	dc25      	bgt.n	401fa6 <scalbn+0xc6>
  401f5a:	a119      	add	r1, pc, #100	; (adr r1, 401fc0 <scalbn+0xe0>)
  401f5c:	e9d1 0100 	ldrd	r0, r1, [r1]
  401f60:	f000 f83c 	bl	401fdc <copysign>
  401f64:	a316      	add	r3, pc, #88	; (adr r3, 401fc0 <scalbn+0xe0>)
  401f66:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f6a:	f000 f9f7 	bl	40235c <__aeabi_dmul>
  401f6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401f70:	4622      	mov	r2, r4
  401f72:	462b      	mov	r3, r5
  401f74:	a114      	add	r1, pc, #80	; (adr r1, 401fc8 <scalbn+0xe8>)
  401f76:	e9d1 0100 	ldrd	r0, r1, [r1]
  401f7a:	f000 f82f 	bl	401fdc <copysign>
  401f7e:	a312      	add	r3, pc, #72	; (adr r3, 401fc8 <scalbn+0xe8>)
  401f80:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f84:	f000 f9ea 	bl	40235c <__aeabi_dmul>
  401f88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401f8a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  401f8e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  401f92:	3636      	adds	r6, #54	; 0x36
  401f94:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  401f98:	4620      	mov	r0, r4
  401f9a:	4629      	mov	r1, r5
  401f9c:	2200      	movs	r2, #0
  401f9e:	4b0e      	ldr	r3, [pc, #56]	; (401fd8 <scalbn+0xf8>)
  401fa0:	f000 f9dc 	bl	40235c <__aeabi_dmul>
  401fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401fa6:	a108      	add	r1, pc, #32	; (adr r1, 401fc8 <scalbn+0xe8>)
  401fa8:	e9d1 0100 	ldrd	r0, r1, [r1]
  401fac:	f000 f816 	bl	401fdc <copysign>
  401fb0:	a305      	add	r3, pc, #20	; (adr r3, 401fc8 <scalbn+0xe8>)
  401fb2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401fb6:	f000 f9d1 	bl	40235c <__aeabi_dmul>
  401fba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401fbc:	f3af 8000 	nop.w
  401fc0:	c2f8f359 	.word	0xc2f8f359
  401fc4:	01a56e1f 	.word	0x01a56e1f
  401fc8:	8800759c 	.word	0x8800759c
  401fcc:	7e37e43c 	.word	0x7e37e43c
  401fd0:	43500000 	.word	0x43500000
  401fd4:	ffff3cb0 	.word	0xffff3cb0
  401fd8:	3c900000 	.word	0x3c900000

00401fdc <copysign>:
  401fdc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
  401fe0:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  401fe4:	ea42 0103 	orr.w	r1, r2, r3
  401fe8:	4770      	bx	lr
  401fea:	bf00      	nop

00401fec <__aeabi_drsub>:
  401fec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401ff0:	e002      	b.n	401ff8 <__adddf3>
  401ff2:	bf00      	nop

00401ff4 <__aeabi_dsub>:
  401ff4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401ff8 <__adddf3>:
  401ff8:	b530      	push	{r4, r5, lr}
  401ffa:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401ffe:	ea4f 0543 	mov.w	r5, r3, lsl #1
  402002:	ea94 0f05 	teq	r4, r5
  402006:	bf08      	it	eq
  402008:	ea90 0f02 	teqeq	r0, r2
  40200c:	bf1f      	itttt	ne
  40200e:	ea54 0c00 	orrsne.w	ip, r4, r0
  402012:	ea55 0c02 	orrsne.w	ip, r5, r2
  402016:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40201a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40201e:	f000 80e2 	beq.w	4021e6 <__adddf3+0x1ee>
  402022:	ea4f 5454 	mov.w	r4, r4, lsr #21
  402026:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40202a:	bfb8      	it	lt
  40202c:	426d      	neglt	r5, r5
  40202e:	dd0c      	ble.n	40204a <__adddf3+0x52>
  402030:	442c      	add	r4, r5
  402032:	ea80 0202 	eor.w	r2, r0, r2
  402036:	ea81 0303 	eor.w	r3, r1, r3
  40203a:	ea82 0000 	eor.w	r0, r2, r0
  40203e:	ea83 0101 	eor.w	r1, r3, r1
  402042:	ea80 0202 	eor.w	r2, r0, r2
  402046:	ea81 0303 	eor.w	r3, r1, r3
  40204a:	2d36      	cmp	r5, #54	; 0x36
  40204c:	bf88      	it	hi
  40204e:	bd30      	pophi	{r4, r5, pc}
  402050:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402054:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402058:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40205c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402060:	d002      	beq.n	402068 <__adddf3+0x70>
  402062:	4240      	negs	r0, r0
  402064:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402068:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40206c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402070:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  402074:	d002      	beq.n	40207c <__adddf3+0x84>
  402076:	4252      	negs	r2, r2
  402078:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40207c:	ea94 0f05 	teq	r4, r5
  402080:	f000 80a7 	beq.w	4021d2 <__adddf3+0x1da>
  402084:	f1a4 0401 	sub.w	r4, r4, #1
  402088:	f1d5 0e20 	rsbs	lr, r5, #32
  40208c:	db0d      	blt.n	4020aa <__adddf3+0xb2>
  40208e:	fa02 fc0e 	lsl.w	ip, r2, lr
  402092:	fa22 f205 	lsr.w	r2, r2, r5
  402096:	1880      	adds	r0, r0, r2
  402098:	f141 0100 	adc.w	r1, r1, #0
  40209c:	fa03 f20e 	lsl.w	r2, r3, lr
  4020a0:	1880      	adds	r0, r0, r2
  4020a2:	fa43 f305 	asr.w	r3, r3, r5
  4020a6:	4159      	adcs	r1, r3
  4020a8:	e00e      	b.n	4020c8 <__adddf3+0xd0>
  4020aa:	f1a5 0520 	sub.w	r5, r5, #32
  4020ae:	f10e 0e20 	add.w	lr, lr, #32
  4020b2:	2a01      	cmp	r2, #1
  4020b4:	fa03 fc0e 	lsl.w	ip, r3, lr
  4020b8:	bf28      	it	cs
  4020ba:	f04c 0c02 	orrcs.w	ip, ip, #2
  4020be:	fa43 f305 	asr.w	r3, r3, r5
  4020c2:	18c0      	adds	r0, r0, r3
  4020c4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4020c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4020cc:	d507      	bpl.n	4020de <__adddf3+0xe6>
  4020ce:	f04f 0e00 	mov.w	lr, #0
  4020d2:	f1dc 0c00 	rsbs	ip, ip, #0
  4020d6:	eb7e 0000 	sbcs.w	r0, lr, r0
  4020da:	eb6e 0101 	sbc.w	r1, lr, r1
  4020de:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4020e2:	d31b      	bcc.n	40211c <__adddf3+0x124>
  4020e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4020e8:	d30c      	bcc.n	402104 <__adddf3+0x10c>
  4020ea:	0849      	lsrs	r1, r1, #1
  4020ec:	ea5f 0030 	movs.w	r0, r0, rrx
  4020f0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4020f4:	f104 0401 	add.w	r4, r4, #1
  4020f8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4020fc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  402100:	f080 809a 	bcs.w	402238 <__adddf3+0x240>
  402104:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  402108:	bf08      	it	eq
  40210a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40210e:	f150 0000 	adcs.w	r0, r0, #0
  402112:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402116:	ea41 0105 	orr.w	r1, r1, r5
  40211a:	bd30      	pop	{r4, r5, pc}
  40211c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  402120:	4140      	adcs	r0, r0
  402122:	eb41 0101 	adc.w	r1, r1, r1
  402126:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40212a:	f1a4 0401 	sub.w	r4, r4, #1
  40212e:	d1e9      	bne.n	402104 <__adddf3+0x10c>
  402130:	f091 0f00 	teq	r1, #0
  402134:	bf04      	itt	eq
  402136:	4601      	moveq	r1, r0
  402138:	2000      	moveq	r0, #0
  40213a:	fab1 f381 	clz	r3, r1
  40213e:	bf08      	it	eq
  402140:	3320      	addeq	r3, #32
  402142:	f1a3 030b 	sub.w	r3, r3, #11
  402146:	f1b3 0220 	subs.w	r2, r3, #32
  40214a:	da0c      	bge.n	402166 <__adddf3+0x16e>
  40214c:	320c      	adds	r2, #12
  40214e:	dd08      	ble.n	402162 <__adddf3+0x16a>
  402150:	f102 0c14 	add.w	ip, r2, #20
  402154:	f1c2 020c 	rsb	r2, r2, #12
  402158:	fa01 f00c 	lsl.w	r0, r1, ip
  40215c:	fa21 f102 	lsr.w	r1, r1, r2
  402160:	e00c      	b.n	40217c <__adddf3+0x184>
  402162:	f102 0214 	add.w	r2, r2, #20
  402166:	bfd8      	it	le
  402168:	f1c2 0c20 	rsble	ip, r2, #32
  40216c:	fa01 f102 	lsl.w	r1, r1, r2
  402170:	fa20 fc0c 	lsr.w	ip, r0, ip
  402174:	bfdc      	itt	le
  402176:	ea41 010c 	orrle.w	r1, r1, ip
  40217a:	4090      	lslle	r0, r2
  40217c:	1ae4      	subs	r4, r4, r3
  40217e:	bfa2      	ittt	ge
  402180:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  402184:	4329      	orrge	r1, r5
  402186:	bd30      	popge	{r4, r5, pc}
  402188:	ea6f 0404 	mvn.w	r4, r4
  40218c:	3c1f      	subs	r4, #31
  40218e:	da1c      	bge.n	4021ca <__adddf3+0x1d2>
  402190:	340c      	adds	r4, #12
  402192:	dc0e      	bgt.n	4021b2 <__adddf3+0x1ba>
  402194:	f104 0414 	add.w	r4, r4, #20
  402198:	f1c4 0220 	rsb	r2, r4, #32
  40219c:	fa20 f004 	lsr.w	r0, r0, r4
  4021a0:	fa01 f302 	lsl.w	r3, r1, r2
  4021a4:	ea40 0003 	orr.w	r0, r0, r3
  4021a8:	fa21 f304 	lsr.w	r3, r1, r4
  4021ac:	ea45 0103 	orr.w	r1, r5, r3
  4021b0:	bd30      	pop	{r4, r5, pc}
  4021b2:	f1c4 040c 	rsb	r4, r4, #12
  4021b6:	f1c4 0220 	rsb	r2, r4, #32
  4021ba:	fa20 f002 	lsr.w	r0, r0, r2
  4021be:	fa01 f304 	lsl.w	r3, r1, r4
  4021c2:	ea40 0003 	orr.w	r0, r0, r3
  4021c6:	4629      	mov	r1, r5
  4021c8:	bd30      	pop	{r4, r5, pc}
  4021ca:	fa21 f004 	lsr.w	r0, r1, r4
  4021ce:	4629      	mov	r1, r5
  4021d0:	bd30      	pop	{r4, r5, pc}
  4021d2:	f094 0f00 	teq	r4, #0
  4021d6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4021da:	bf06      	itte	eq
  4021dc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4021e0:	3401      	addeq	r4, #1
  4021e2:	3d01      	subne	r5, #1
  4021e4:	e74e      	b.n	402084 <__adddf3+0x8c>
  4021e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4021ea:	bf18      	it	ne
  4021ec:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4021f0:	d029      	beq.n	402246 <__adddf3+0x24e>
  4021f2:	ea94 0f05 	teq	r4, r5
  4021f6:	bf08      	it	eq
  4021f8:	ea90 0f02 	teqeq	r0, r2
  4021fc:	d005      	beq.n	40220a <__adddf3+0x212>
  4021fe:	ea54 0c00 	orrs.w	ip, r4, r0
  402202:	bf04      	itt	eq
  402204:	4619      	moveq	r1, r3
  402206:	4610      	moveq	r0, r2
  402208:	bd30      	pop	{r4, r5, pc}
  40220a:	ea91 0f03 	teq	r1, r3
  40220e:	bf1e      	ittt	ne
  402210:	2100      	movne	r1, #0
  402212:	2000      	movne	r0, #0
  402214:	bd30      	popne	{r4, r5, pc}
  402216:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40221a:	d105      	bne.n	402228 <__adddf3+0x230>
  40221c:	0040      	lsls	r0, r0, #1
  40221e:	4149      	adcs	r1, r1
  402220:	bf28      	it	cs
  402222:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  402226:	bd30      	pop	{r4, r5, pc}
  402228:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40222c:	bf3c      	itt	cc
  40222e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  402232:	bd30      	popcc	{r4, r5, pc}
  402234:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402238:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40223c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402240:	f04f 0000 	mov.w	r0, #0
  402244:	bd30      	pop	{r4, r5, pc}
  402246:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40224a:	bf1a      	itte	ne
  40224c:	4619      	movne	r1, r3
  40224e:	4610      	movne	r0, r2
  402250:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  402254:	bf1c      	itt	ne
  402256:	460b      	movne	r3, r1
  402258:	4602      	movne	r2, r0
  40225a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40225e:	bf06      	itte	eq
  402260:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  402264:	ea91 0f03 	teqeq	r1, r3
  402268:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40226c:	bd30      	pop	{r4, r5, pc}
  40226e:	bf00      	nop

00402270 <__aeabi_ui2d>:
  402270:	f090 0f00 	teq	r0, #0
  402274:	bf04      	itt	eq
  402276:	2100      	moveq	r1, #0
  402278:	4770      	bxeq	lr
  40227a:	b530      	push	{r4, r5, lr}
  40227c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402280:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402284:	f04f 0500 	mov.w	r5, #0
  402288:	f04f 0100 	mov.w	r1, #0
  40228c:	e750      	b.n	402130 <__adddf3+0x138>
  40228e:	bf00      	nop

00402290 <__aeabi_i2d>:
  402290:	f090 0f00 	teq	r0, #0
  402294:	bf04      	itt	eq
  402296:	2100      	moveq	r1, #0
  402298:	4770      	bxeq	lr
  40229a:	b530      	push	{r4, r5, lr}
  40229c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4022a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4022a4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4022a8:	bf48      	it	mi
  4022aa:	4240      	negmi	r0, r0
  4022ac:	f04f 0100 	mov.w	r1, #0
  4022b0:	e73e      	b.n	402130 <__adddf3+0x138>
  4022b2:	bf00      	nop

004022b4 <__aeabi_f2d>:
  4022b4:	0042      	lsls	r2, r0, #1
  4022b6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4022ba:	ea4f 0131 	mov.w	r1, r1, rrx
  4022be:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4022c2:	bf1f      	itttt	ne
  4022c4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4022c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4022cc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4022d0:	4770      	bxne	lr
  4022d2:	f092 0f00 	teq	r2, #0
  4022d6:	bf14      	ite	ne
  4022d8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4022dc:	4770      	bxeq	lr
  4022de:	b530      	push	{r4, r5, lr}
  4022e0:	f44f 7460 	mov.w	r4, #896	; 0x380
  4022e4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4022e8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4022ec:	e720      	b.n	402130 <__adddf3+0x138>
  4022ee:	bf00      	nop

004022f0 <__aeabi_ul2d>:
  4022f0:	ea50 0201 	orrs.w	r2, r0, r1
  4022f4:	bf08      	it	eq
  4022f6:	4770      	bxeq	lr
  4022f8:	b530      	push	{r4, r5, lr}
  4022fa:	f04f 0500 	mov.w	r5, #0
  4022fe:	e00a      	b.n	402316 <__aeabi_l2d+0x16>

00402300 <__aeabi_l2d>:
  402300:	ea50 0201 	orrs.w	r2, r0, r1
  402304:	bf08      	it	eq
  402306:	4770      	bxeq	lr
  402308:	b530      	push	{r4, r5, lr}
  40230a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40230e:	d502      	bpl.n	402316 <__aeabi_l2d+0x16>
  402310:	4240      	negs	r0, r0
  402312:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402316:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40231a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40231e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  402322:	f43f aedc 	beq.w	4020de <__adddf3+0xe6>
  402326:	f04f 0203 	mov.w	r2, #3
  40232a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40232e:	bf18      	it	ne
  402330:	3203      	addne	r2, #3
  402332:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  402336:	bf18      	it	ne
  402338:	3203      	addne	r2, #3
  40233a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40233e:	f1c2 0320 	rsb	r3, r2, #32
  402342:	fa00 fc03 	lsl.w	ip, r0, r3
  402346:	fa20 f002 	lsr.w	r0, r0, r2
  40234a:	fa01 fe03 	lsl.w	lr, r1, r3
  40234e:	ea40 000e 	orr.w	r0, r0, lr
  402352:	fa21 f102 	lsr.w	r1, r1, r2
  402356:	4414      	add	r4, r2
  402358:	e6c1      	b.n	4020de <__adddf3+0xe6>
  40235a:	bf00      	nop

0040235c <__aeabi_dmul>:
  40235c:	b570      	push	{r4, r5, r6, lr}
  40235e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402362:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402366:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40236a:	bf1d      	ittte	ne
  40236c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402370:	ea94 0f0c 	teqne	r4, ip
  402374:	ea95 0f0c 	teqne	r5, ip
  402378:	f000 f8de 	bleq	402538 <__aeabi_dmul+0x1dc>
  40237c:	442c      	add	r4, r5
  40237e:	ea81 0603 	eor.w	r6, r1, r3
  402382:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  402386:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40238a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40238e:	bf18      	it	ne
  402390:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  402394:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402398:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40239c:	d038      	beq.n	402410 <__aeabi_dmul+0xb4>
  40239e:	fba0 ce02 	umull	ip, lr, r0, r2
  4023a2:	f04f 0500 	mov.w	r5, #0
  4023a6:	fbe1 e502 	umlal	lr, r5, r1, r2
  4023aa:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4023ae:	fbe0 e503 	umlal	lr, r5, r0, r3
  4023b2:	f04f 0600 	mov.w	r6, #0
  4023b6:	fbe1 5603 	umlal	r5, r6, r1, r3
  4023ba:	f09c 0f00 	teq	ip, #0
  4023be:	bf18      	it	ne
  4023c0:	f04e 0e01 	orrne.w	lr, lr, #1
  4023c4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4023c8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4023cc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4023d0:	d204      	bcs.n	4023dc <__aeabi_dmul+0x80>
  4023d2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4023d6:	416d      	adcs	r5, r5
  4023d8:	eb46 0606 	adc.w	r6, r6, r6
  4023dc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4023e0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4023e4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4023e8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4023ec:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4023f0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4023f4:	bf88      	it	hi
  4023f6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4023fa:	d81e      	bhi.n	40243a <__aeabi_dmul+0xde>
  4023fc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  402400:	bf08      	it	eq
  402402:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  402406:	f150 0000 	adcs.w	r0, r0, #0
  40240a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40240e:	bd70      	pop	{r4, r5, r6, pc}
  402410:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  402414:	ea46 0101 	orr.w	r1, r6, r1
  402418:	ea40 0002 	orr.w	r0, r0, r2
  40241c:	ea81 0103 	eor.w	r1, r1, r3
  402420:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  402424:	bfc2      	ittt	gt
  402426:	ebd4 050c 	rsbsgt	r5, r4, ip
  40242a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40242e:	bd70      	popgt	{r4, r5, r6, pc}
  402430:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402434:	f04f 0e00 	mov.w	lr, #0
  402438:	3c01      	subs	r4, #1
  40243a:	f300 80ab 	bgt.w	402594 <__aeabi_dmul+0x238>
  40243e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  402442:	bfde      	ittt	le
  402444:	2000      	movle	r0, #0
  402446:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40244a:	bd70      	pople	{r4, r5, r6, pc}
  40244c:	f1c4 0400 	rsb	r4, r4, #0
  402450:	3c20      	subs	r4, #32
  402452:	da35      	bge.n	4024c0 <__aeabi_dmul+0x164>
  402454:	340c      	adds	r4, #12
  402456:	dc1b      	bgt.n	402490 <__aeabi_dmul+0x134>
  402458:	f104 0414 	add.w	r4, r4, #20
  40245c:	f1c4 0520 	rsb	r5, r4, #32
  402460:	fa00 f305 	lsl.w	r3, r0, r5
  402464:	fa20 f004 	lsr.w	r0, r0, r4
  402468:	fa01 f205 	lsl.w	r2, r1, r5
  40246c:	ea40 0002 	orr.w	r0, r0, r2
  402470:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  402474:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402478:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40247c:	fa21 f604 	lsr.w	r6, r1, r4
  402480:	eb42 0106 	adc.w	r1, r2, r6
  402484:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402488:	bf08      	it	eq
  40248a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40248e:	bd70      	pop	{r4, r5, r6, pc}
  402490:	f1c4 040c 	rsb	r4, r4, #12
  402494:	f1c4 0520 	rsb	r5, r4, #32
  402498:	fa00 f304 	lsl.w	r3, r0, r4
  40249c:	fa20 f005 	lsr.w	r0, r0, r5
  4024a0:	fa01 f204 	lsl.w	r2, r1, r4
  4024a4:	ea40 0002 	orr.w	r0, r0, r2
  4024a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4024ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4024b0:	f141 0100 	adc.w	r1, r1, #0
  4024b4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4024b8:	bf08      	it	eq
  4024ba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4024be:	bd70      	pop	{r4, r5, r6, pc}
  4024c0:	f1c4 0520 	rsb	r5, r4, #32
  4024c4:	fa00 f205 	lsl.w	r2, r0, r5
  4024c8:	ea4e 0e02 	orr.w	lr, lr, r2
  4024cc:	fa20 f304 	lsr.w	r3, r0, r4
  4024d0:	fa01 f205 	lsl.w	r2, r1, r5
  4024d4:	ea43 0302 	orr.w	r3, r3, r2
  4024d8:	fa21 f004 	lsr.w	r0, r1, r4
  4024dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4024e0:	fa21 f204 	lsr.w	r2, r1, r4
  4024e4:	ea20 0002 	bic.w	r0, r0, r2
  4024e8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4024ec:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4024f0:	bf08      	it	eq
  4024f2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4024f6:	bd70      	pop	{r4, r5, r6, pc}
  4024f8:	f094 0f00 	teq	r4, #0
  4024fc:	d10f      	bne.n	40251e <__aeabi_dmul+0x1c2>
  4024fe:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  402502:	0040      	lsls	r0, r0, #1
  402504:	eb41 0101 	adc.w	r1, r1, r1
  402508:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40250c:	bf08      	it	eq
  40250e:	3c01      	subeq	r4, #1
  402510:	d0f7      	beq.n	402502 <__aeabi_dmul+0x1a6>
  402512:	ea41 0106 	orr.w	r1, r1, r6
  402516:	f095 0f00 	teq	r5, #0
  40251a:	bf18      	it	ne
  40251c:	4770      	bxne	lr
  40251e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  402522:	0052      	lsls	r2, r2, #1
  402524:	eb43 0303 	adc.w	r3, r3, r3
  402528:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40252c:	bf08      	it	eq
  40252e:	3d01      	subeq	r5, #1
  402530:	d0f7      	beq.n	402522 <__aeabi_dmul+0x1c6>
  402532:	ea43 0306 	orr.w	r3, r3, r6
  402536:	4770      	bx	lr
  402538:	ea94 0f0c 	teq	r4, ip
  40253c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402540:	bf18      	it	ne
  402542:	ea95 0f0c 	teqne	r5, ip
  402546:	d00c      	beq.n	402562 <__aeabi_dmul+0x206>
  402548:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40254c:	bf18      	it	ne
  40254e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402552:	d1d1      	bne.n	4024f8 <__aeabi_dmul+0x19c>
  402554:	ea81 0103 	eor.w	r1, r1, r3
  402558:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40255c:	f04f 0000 	mov.w	r0, #0
  402560:	bd70      	pop	{r4, r5, r6, pc}
  402562:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402566:	bf06      	itte	eq
  402568:	4610      	moveq	r0, r2
  40256a:	4619      	moveq	r1, r3
  40256c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402570:	d019      	beq.n	4025a6 <__aeabi_dmul+0x24a>
  402572:	ea94 0f0c 	teq	r4, ip
  402576:	d102      	bne.n	40257e <__aeabi_dmul+0x222>
  402578:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40257c:	d113      	bne.n	4025a6 <__aeabi_dmul+0x24a>
  40257e:	ea95 0f0c 	teq	r5, ip
  402582:	d105      	bne.n	402590 <__aeabi_dmul+0x234>
  402584:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  402588:	bf1c      	itt	ne
  40258a:	4610      	movne	r0, r2
  40258c:	4619      	movne	r1, r3
  40258e:	d10a      	bne.n	4025a6 <__aeabi_dmul+0x24a>
  402590:	ea81 0103 	eor.w	r1, r1, r3
  402594:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402598:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40259c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4025a0:	f04f 0000 	mov.w	r0, #0
  4025a4:	bd70      	pop	{r4, r5, r6, pc}
  4025a6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4025aa:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4025ae:	bd70      	pop	{r4, r5, r6, pc}

004025b0 <__aeabi_ddiv>:
  4025b0:	b570      	push	{r4, r5, r6, lr}
  4025b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4025b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4025ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4025be:	bf1d      	ittte	ne
  4025c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4025c4:	ea94 0f0c 	teqne	r4, ip
  4025c8:	ea95 0f0c 	teqne	r5, ip
  4025cc:	f000 f8a7 	bleq	40271e <__aeabi_ddiv+0x16e>
  4025d0:	eba4 0405 	sub.w	r4, r4, r5
  4025d4:	ea81 0e03 	eor.w	lr, r1, r3
  4025d8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4025dc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4025e0:	f000 8088 	beq.w	4026f4 <__aeabi_ddiv+0x144>
  4025e4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4025e8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4025ec:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4025f0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4025f4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4025f8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4025fc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  402600:	ea4f 2600 	mov.w	r6, r0, lsl #8
  402604:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  402608:	429d      	cmp	r5, r3
  40260a:	bf08      	it	eq
  40260c:	4296      	cmpeq	r6, r2
  40260e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  402612:	f504 7440 	add.w	r4, r4, #768	; 0x300
  402616:	d202      	bcs.n	40261e <__aeabi_ddiv+0x6e>
  402618:	085b      	lsrs	r3, r3, #1
  40261a:	ea4f 0232 	mov.w	r2, r2, rrx
  40261e:	1ab6      	subs	r6, r6, r2
  402620:	eb65 0503 	sbc.w	r5, r5, r3
  402624:	085b      	lsrs	r3, r3, #1
  402626:	ea4f 0232 	mov.w	r2, r2, rrx
  40262a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40262e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  402632:	ebb6 0e02 	subs.w	lr, r6, r2
  402636:	eb75 0e03 	sbcs.w	lr, r5, r3
  40263a:	bf22      	ittt	cs
  40263c:	1ab6      	subcs	r6, r6, r2
  40263e:	4675      	movcs	r5, lr
  402640:	ea40 000c 	orrcs.w	r0, r0, ip
  402644:	085b      	lsrs	r3, r3, #1
  402646:	ea4f 0232 	mov.w	r2, r2, rrx
  40264a:	ebb6 0e02 	subs.w	lr, r6, r2
  40264e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402652:	bf22      	ittt	cs
  402654:	1ab6      	subcs	r6, r6, r2
  402656:	4675      	movcs	r5, lr
  402658:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40265c:	085b      	lsrs	r3, r3, #1
  40265e:	ea4f 0232 	mov.w	r2, r2, rrx
  402662:	ebb6 0e02 	subs.w	lr, r6, r2
  402666:	eb75 0e03 	sbcs.w	lr, r5, r3
  40266a:	bf22      	ittt	cs
  40266c:	1ab6      	subcs	r6, r6, r2
  40266e:	4675      	movcs	r5, lr
  402670:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402674:	085b      	lsrs	r3, r3, #1
  402676:	ea4f 0232 	mov.w	r2, r2, rrx
  40267a:	ebb6 0e02 	subs.w	lr, r6, r2
  40267e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402682:	bf22      	ittt	cs
  402684:	1ab6      	subcs	r6, r6, r2
  402686:	4675      	movcs	r5, lr
  402688:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40268c:	ea55 0e06 	orrs.w	lr, r5, r6
  402690:	d018      	beq.n	4026c4 <__aeabi_ddiv+0x114>
  402692:	ea4f 1505 	mov.w	r5, r5, lsl #4
  402696:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40269a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40269e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4026a2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4026a6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4026aa:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4026ae:	d1c0      	bne.n	402632 <__aeabi_ddiv+0x82>
  4026b0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4026b4:	d10b      	bne.n	4026ce <__aeabi_ddiv+0x11e>
  4026b6:	ea41 0100 	orr.w	r1, r1, r0
  4026ba:	f04f 0000 	mov.w	r0, #0
  4026be:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4026c2:	e7b6      	b.n	402632 <__aeabi_ddiv+0x82>
  4026c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4026c8:	bf04      	itt	eq
  4026ca:	4301      	orreq	r1, r0
  4026cc:	2000      	moveq	r0, #0
  4026ce:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4026d2:	bf88      	it	hi
  4026d4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4026d8:	f63f aeaf 	bhi.w	40243a <__aeabi_dmul+0xde>
  4026dc:	ebb5 0c03 	subs.w	ip, r5, r3
  4026e0:	bf04      	itt	eq
  4026e2:	ebb6 0c02 	subseq.w	ip, r6, r2
  4026e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4026ea:	f150 0000 	adcs.w	r0, r0, #0
  4026ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4026f2:	bd70      	pop	{r4, r5, r6, pc}
  4026f4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4026f8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4026fc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402700:	bfc2      	ittt	gt
  402702:	ebd4 050c 	rsbsgt	r5, r4, ip
  402706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40270a:	bd70      	popgt	{r4, r5, r6, pc}
  40270c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402710:	f04f 0e00 	mov.w	lr, #0
  402714:	3c01      	subs	r4, #1
  402716:	e690      	b.n	40243a <__aeabi_dmul+0xde>
  402718:	ea45 0e06 	orr.w	lr, r5, r6
  40271c:	e68d      	b.n	40243a <__aeabi_dmul+0xde>
  40271e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402722:	ea94 0f0c 	teq	r4, ip
  402726:	bf08      	it	eq
  402728:	ea95 0f0c 	teqeq	r5, ip
  40272c:	f43f af3b 	beq.w	4025a6 <__aeabi_dmul+0x24a>
  402730:	ea94 0f0c 	teq	r4, ip
  402734:	d10a      	bne.n	40274c <__aeabi_ddiv+0x19c>
  402736:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40273a:	f47f af34 	bne.w	4025a6 <__aeabi_dmul+0x24a>
  40273e:	ea95 0f0c 	teq	r5, ip
  402742:	f47f af25 	bne.w	402590 <__aeabi_dmul+0x234>
  402746:	4610      	mov	r0, r2
  402748:	4619      	mov	r1, r3
  40274a:	e72c      	b.n	4025a6 <__aeabi_dmul+0x24a>
  40274c:	ea95 0f0c 	teq	r5, ip
  402750:	d106      	bne.n	402760 <__aeabi_ddiv+0x1b0>
  402752:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402756:	f43f aefd 	beq.w	402554 <__aeabi_dmul+0x1f8>
  40275a:	4610      	mov	r0, r2
  40275c:	4619      	mov	r1, r3
  40275e:	e722      	b.n	4025a6 <__aeabi_dmul+0x24a>
  402760:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402764:	bf18      	it	ne
  402766:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40276a:	f47f aec5 	bne.w	4024f8 <__aeabi_dmul+0x19c>
  40276e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402772:	f47f af0d 	bne.w	402590 <__aeabi_dmul+0x234>
  402776:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40277a:	f47f aeeb 	bne.w	402554 <__aeabi_dmul+0x1f8>
  40277e:	e712      	b.n	4025a6 <__aeabi_dmul+0x24a>

00402780 <__gedf2>:
  402780:	f04f 3cff 	mov.w	ip, #4294967295
  402784:	e006      	b.n	402794 <__cmpdf2+0x4>
  402786:	bf00      	nop

00402788 <__ledf2>:
  402788:	f04f 0c01 	mov.w	ip, #1
  40278c:	e002      	b.n	402794 <__cmpdf2+0x4>
  40278e:	bf00      	nop

00402790 <__cmpdf2>:
  402790:	f04f 0c01 	mov.w	ip, #1
  402794:	f84d cd04 	str.w	ip, [sp, #-4]!
  402798:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40279c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4027a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4027a4:	bf18      	it	ne
  4027a6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4027aa:	d01b      	beq.n	4027e4 <__cmpdf2+0x54>
  4027ac:	b001      	add	sp, #4
  4027ae:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4027b2:	bf0c      	ite	eq
  4027b4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4027b8:	ea91 0f03 	teqne	r1, r3
  4027bc:	bf02      	ittt	eq
  4027be:	ea90 0f02 	teqeq	r0, r2
  4027c2:	2000      	moveq	r0, #0
  4027c4:	4770      	bxeq	lr
  4027c6:	f110 0f00 	cmn.w	r0, #0
  4027ca:	ea91 0f03 	teq	r1, r3
  4027ce:	bf58      	it	pl
  4027d0:	4299      	cmppl	r1, r3
  4027d2:	bf08      	it	eq
  4027d4:	4290      	cmpeq	r0, r2
  4027d6:	bf2c      	ite	cs
  4027d8:	17d8      	asrcs	r0, r3, #31
  4027da:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4027de:	f040 0001 	orr.w	r0, r0, #1
  4027e2:	4770      	bx	lr
  4027e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4027e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4027ec:	d102      	bne.n	4027f4 <__cmpdf2+0x64>
  4027ee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4027f2:	d107      	bne.n	402804 <__cmpdf2+0x74>
  4027f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4027f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4027fc:	d1d6      	bne.n	4027ac <__cmpdf2+0x1c>
  4027fe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  402802:	d0d3      	beq.n	4027ac <__cmpdf2+0x1c>
  402804:	f85d 0b04 	ldr.w	r0, [sp], #4
  402808:	4770      	bx	lr
  40280a:	bf00      	nop

0040280c <__aeabi_cdrcmple>:
  40280c:	4684      	mov	ip, r0
  40280e:	4610      	mov	r0, r2
  402810:	4662      	mov	r2, ip
  402812:	468c      	mov	ip, r1
  402814:	4619      	mov	r1, r3
  402816:	4663      	mov	r3, ip
  402818:	e000      	b.n	40281c <__aeabi_cdcmpeq>
  40281a:	bf00      	nop

0040281c <__aeabi_cdcmpeq>:
  40281c:	b501      	push	{r0, lr}
  40281e:	f7ff ffb7 	bl	402790 <__cmpdf2>
  402822:	2800      	cmp	r0, #0
  402824:	bf48      	it	mi
  402826:	f110 0f00 	cmnmi.w	r0, #0
  40282a:	bd01      	pop	{r0, pc}

0040282c <__aeabi_dcmpeq>:
  40282c:	f84d ed08 	str.w	lr, [sp, #-8]!
  402830:	f7ff fff4 	bl	40281c <__aeabi_cdcmpeq>
  402834:	bf0c      	ite	eq
  402836:	2001      	moveq	r0, #1
  402838:	2000      	movne	r0, #0
  40283a:	f85d fb08 	ldr.w	pc, [sp], #8
  40283e:	bf00      	nop

00402840 <__aeabi_dcmplt>:
  402840:	f84d ed08 	str.w	lr, [sp, #-8]!
  402844:	f7ff ffea 	bl	40281c <__aeabi_cdcmpeq>
  402848:	bf34      	ite	cc
  40284a:	2001      	movcc	r0, #1
  40284c:	2000      	movcs	r0, #0
  40284e:	f85d fb08 	ldr.w	pc, [sp], #8
  402852:	bf00      	nop

00402854 <__aeabi_dcmple>:
  402854:	f84d ed08 	str.w	lr, [sp, #-8]!
  402858:	f7ff ffe0 	bl	40281c <__aeabi_cdcmpeq>
  40285c:	bf94      	ite	ls
  40285e:	2001      	movls	r0, #1
  402860:	2000      	movhi	r0, #0
  402862:	f85d fb08 	ldr.w	pc, [sp], #8
  402866:	bf00      	nop

00402868 <__aeabi_dcmpge>:
  402868:	f84d ed08 	str.w	lr, [sp, #-8]!
  40286c:	f7ff ffce 	bl	40280c <__aeabi_cdrcmple>
  402870:	bf94      	ite	ls
  402872:	2001      	movls	r0, #1
  402874:	2000      	movhi	r0, #0
  402876:	f85d fb08 	ldr.w	pc, [sp], #8
  40287a:	bf00      	nop

0040287c <__aeabi_dcmpgt>:
  40287c:	f84d ed08 	str.w	lr, [sp, #-8]!
  402880:	f7ff ffc4 	bl	40280c <__aeabi_cdrcmple>
  402884:	bf34      	ite	cc
  402886:	2001      	movcc	r0, #1
  402888:	2000      	movcs	r0, #0
  40288a:	f85d fb08 	ldr.w	pc, [sp], #8
  40288e:	bf00      	nop

00402890 <__aeabi_d2iz>:
  402890:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402894:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  402898:	d215      	bcs.n	4028c6 <__aeabi_d2iz+0x36>
  40289a:	d511      	bpl.n	4028c0 <__aeabi_d2iz+0x30>
  40289c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4028a0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4028a4:	d912      	bls.n	4028cc <__aeabi_d2iz+0x3c>
  4028a6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4028aa:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4028ae:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4028b2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4028b6:	fa23 f002 	lsr.w	r0, r3, r2
  4028ba:	bf18      	it	ne
  4028bc:	4240      	negne	r0, r0
  4028be:	4770      	bx	lr
  4028c0:	f04f 0000 	mov.w	r0, #0
  4028c4:	4770      	bx	lr
  4028c6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4028ca:	d105      	bne.n	4028d8 <__aeabi_d2iz+0x48>
  4028cc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4028d0:	bf08      	it	eq
  4028d2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4028d6:	4770      	bx	lr
  4028d8:	f04f 0000 	mov.w	r0, #0
  4028dc:	4770      	bx	lr
  4028de:	bf00      	nop

004028e0 <__aeabi_d2uiz>:
  4028e0:	004a      	lsls	r2, r1, #1
  4028e2:	d211      	bcs.n	402908 <__aeabi_d2uiz+0x28>
  4028e4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4028e8:	d211      	bcs.n	40290e <__aeabi_d2uiz+0x2e>
  4028ea:	d50d      	bpl.n	402908 <__aeabi_d2uiz+0x28>
  4028ec:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4028f0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4028f4:	d40e      	bmi.n	402914 <__aeabi_d2uiz+0x34>
  4028f6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4028fa:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4028fe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  402902:	fa23 f002 	lsr.w	r0, r3, r2
  402906:	4770      	bx	lr
  402908:	f04f 0000 	mov.w	r0, #0
  40290c:	4770      	bx	lr
  40290e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  402912:	d102      	bne.n	40291a <__aeabi_d2uiz+0x3a>
  402914:	f04f 30ff 	mov.w	r0, #4294967295
  402918:	4770      	bx	lr
  40291a:	f04f 0000 	mov.w	r0, #0
  40291e:	4770      	bx	lr

00402920 <__aeabi_d2f>:
  402920:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402924:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  402928:	bf24      	itt	cs
  40292a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  40292e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  402932:	d90d      	bls.n	402950 <__aeabi_d2f+0x30>
  402934:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  402938:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  40293c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  402940:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  402944:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  402948:	bf08      	it	eq
  40294a:	f020 0001 	biceq.w	r0, r0, #1
  40294e:	4770      	bx	lr
  402950:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  402954:	d121      	bne.n	40299a <__aeabi_d2f+0x7a>
  402956:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  40295a:	bfbc      	itt	lt
  40295c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  402960:	4770      	bxlt	lr
  402962:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402966:	ea4f 5252 	mov.w	r2, r2, lsr #21
  40296a:	f1c2 0218 	rsb	r2, r2, #24
  40296e:	f1c2 0c20 	rsb	ip, r2, #32
  402972:	fa10 f30c 	lsls.w	r3, r0, ip
  402976:	fa20 f002 	lsr.w	r0, r0, r2
  40297a:	bf18      	it	ne
  40297c:	f040 0001 	orrne.w	r0, r0, #1
  402980:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402984:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  402988:	fa03 fc0c 	lsl.w	ip, r3, ip
  40298c:	ea40 000c 	orr.w	r0, r0, ip
  402990:	fa23 f302 	lsr.w	r3, r3, r2
  402994:	ea4f 0343 	mov.w	r3, r3, lsl #1
  402998:	e7cc      	b.n	402934 <__aeabi_d2f+0x14>
  40299a:	ea7f 5362 	mvns.w	r3, r2, asr #21
  40299e:	d107      	bne.n	4029b0 <__aeabi_d2f+0x90>
  4029a0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  4029a4:	bf1e      	ittt	ne
  4029a6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  4029aa:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  4029ae:	4770      	bxne	lr
  4029b0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  4029b4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4029b8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4029bc:	4770      	bx	lr
  4029be:	bf00      	nop

004029c0 <__aeabi_frsub>:
  4029c0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  4029c4:	e002      	b.n	4029cc <__addsf3>
  4029c6:	bf00      	nop

004029c8 <__aeabi_fsub>:
  4029c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

004029cc <__addsf3>:
  4029cc:	0042      	lsls	r2, r0, #1
  4029ce:	bf1f      	itttt	ne
  4029d0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  4029d4:	ea92 0f03 	teqne	r2, r3
  4029d8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  4029dc:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4029e0:	d06a      	beq.n	402ab8 <__addsf3+0xec>
  4029e2:	ea4f 6212 	mov.w	r2, r2, lsr #24
  4029e6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  4029ea:	bfc1      	itttt	gt
  4029ec:	18d2      	addgt	r2, r2, r3
  4029ee:	4041      	eorgt	r1, r0
  4029f0:	4048      	eorgt	r0, r1
  4029f2:	4041      	eorgt	r1, r0
  4029f4:	bfb8      	it	lt
  4029f6:	425b      	neglt	r3, r3
  4029f8:	2b19      	cmp	r3, #25
  4029fa:	bf88      	it	hi
  4029fc:	4770      	bxhi	lr
  4029fe:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  402a02:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402a06:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  402a0a:	bf18      	it	ne
  402a0c:	4240      	negne	r0, r0
  402a0e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402a12:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  402a16:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  402a1a:	bf18      	it	ne
  402a1c:	4249      	negne	r1, r1
  402a1e:	ea92 0f03 	teq	r2, r3
  402a22:	d03f      	beq.n	402aa4 <__addsf3+0xd8>
  402a24:	f1a2 0201 	sub.w	r2, r2, #1
  402a28:	fa41 fc03 	asr.w	ip, r1, r3
  402a2c:	eb10 000c 	adds.w	r0, r0, ip
  402a30:	f1c3 0320 	rsb	r3, r3, #32
  402a34:	fa01 f103 	lsl.w	r1, r1, r3
  402a38:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  402a3c:	d502      	bpl.n	402a44 <__addsf3+0x78>
  402a3e:	4249      	negs	r1, r1
  402a40:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  402a44:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  402a48:	d313      	bcc.n	402a72 <__addsf3+0xa6>
  402a4a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  402a4e:	d306      	bcc.n	402a5e <__addsf3+0x92>
  402a50:	0840      	lsrs	r0, r0, #1
  402a52:	ea4f 0131 	mov.w	r1, r1, rrx
  402a56:	f102 0201 	add.w	r2, r2, #1
  402a5a:	2afe      	cmp	r2, #254	; 0xfe
  402a5c:	d251      	bcs.n	402b02 <__addsf3+0x136>
  402a5e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  402a62:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  402a66:	bf08      	it	eq
  402a68:	f020 0001 	biceq.w	r0, r0, #1
  402a6c:	ea40 0003 	orr.w	r0, r0, r3
  402a70:	4770      	bx	lr
  402a72:	0049      	lsls	r1, r1, #1
  402a74:	eb40 0000 	adc.w	r0, r0, r0
  402a78:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  402a7c:	f1a2 0201 	sub.w	r2, r2, #1
  402a80:	d1ed      	bne.n	402a5e <__addsf3+0x92>
  402a82:	fab0 fc80 	clz	ip, r0
  402a86:	f1ac 0c08 	sub.w	ip, ip, #8
  402a8a:	ebb2 020c 	subs.w	r2, r2, ip
  402a8e:	fa00 f00c 	lsl.w	r0, r0, ip
  402a92:	bfaa      	itet	ge
  402a94:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  402a98:	4252      	neglt	r2, r2
  402a9a:	4318      	orrge	r0, r3
  402a9c:	bfbc      	itt	lt
  402a9e:	40d0      	lsrlt	r0, r2
  402aa0:	4318      	orrlt	r0, r3
  402aa2:	4770      	bx	lr
  402aa4:	f092 0f00 	teq	r2, #0
  402aa8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  402aac:	bf06      	itte	eq
  402aae:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  402ab2:	3201      	addeq	r2, #1
  402ab4:	3b01      	subne	r3, #1
  402ab6:	e7b5      	b.n	402a24 <__addsf3+0x58>
  402ab8:	ea4f 0341 	mov.w	r3, r1, lsl #1
  402abc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  402ac0:	bf18      	it	ne
  402ac2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  402ac6:	d021      	beq.n	402b0c <__addsf3+0x140>
  402ac8:	ea92 0f03 	teq	r2, r3
  402acc:	d004      	beq.n	402ad8 <__addsf3+0x10c>
  402ace:	f092 0f00 	teq	r2, #0
  402ad2:	bf08      	it	eq
  402ad4:	4608      	moveq	r0, r1
  402ad6:	4770      	bx	lr
  402ad8:	ea90 0f01 	teq	r0, r1
  402adc:	bf1c      	itt	ne
  402ade:	2000      	movne	r0, #0
  402ae0:	4770      	bxne	lr
  402ae2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  402ae6:	d104      	bne.n	402af2 <__addsf3+0x126>
  402ae8:	0040      	lsls	r0, r0, #1
  402aea:	bf28      	it	cs
  402aec:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  402af0:	4770      	bx	lr
  402af2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  402af6:	bf3c      	itt	cc
  402af8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  402afc:	4770      	bxcc	lr
  402afe:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  402b02:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  402b06:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402b0a:	4770      	bx	lr
  402b0c:	ea7f 6222 	mvns.w	r2, r2, asr #24
  402b10:	bf16      	itet	ne
  402b12:	4608      	movne	r0, r1
  402b14:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  402b18:	4601      	movne	r1, r0
  402b1a:	0242      	lsls	r2, r0, #9
  402b1c:	bf06      	itte	eq
  402b1e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  402b22:	ea90 0f01 	teqeq	r0, r1
  402b26:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  402b2a:	4770      	bx	lr

00402b2c <__aeabi_ui2f>:
  402b2c:	f04f 0300 	mov.w	r3, #0
  402b30:	e004      	b.n	402b3c <__aeabi_i2f+0x8>
  402b32:	bf00      	nop

00402b34 <__aeabi_i2f>:
  402b34:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  402b38:	bf48      	it	mi
  402b3a:	4240      	negmi	r0, r0
  402b3c:	ea5f 0c00 	movs.w	ip, r0
  402b40:	bf08      	it	eq
  402b42:	4770      	bxeq	lr
  402b44:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  402b48:	4601      	mov	r1, r0
  402b4a:	f04f 0000 	mov.w	r0, #0
  402b4e:	e01c      	b.n	402b8a <__aeabi_l2f+0x2a>

00402b50 <__aeabi_ul2f>:
  402b50:	ea50 0201 	orrs.w	r2, r0, r1
  402b54:	bf08      	it	eq
  402b56:	4770      	bxeq	lr
  402b58:	f04f 0300 	mov.w	r3, #0
  402b5c:	e00a      	b.n	402b74 <__aeabi_l2f+0x14>
  402b5e:	bf00      	nop

00402b60 <__aeabi_l2f>:
  402b60:	ea50 0201 	orrs.w	r2, r0, r1
  402b64:	bf08      	it	eq
  402b66:	4770      	bxeq	lr
  402b68:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  402b6c:	d502      	bpl.n	402b74 <__aeabi_l2f+0x14>
  402b6e:	4240      	negs	r0, r0
  402b70:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402b74:	ea5f 0c01 	movs.w	ip, r1
  402b78:	bf02      	ittt	eq
  402b7a:	4684      	moveq	ip, r0
  402b7c:	4601      	moveq	r1, r0
  402b7e:	2000      	moveq	r0, #0
  402b80:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  402b84:	bf08      	it	eq
  402b86:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  402b8a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  402b8e:	fabc f28c 	clz	r2, ip
  402b92:	3a08      	subs	r2, #8
  402b94:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  402b98:	db10      	blt.n	402bbc <__aeabi_l2f+0x5c>
  402b9a:	fa01 fc02 	lsl.w	ip, r1, r2
  402b9e:	4463      	add	r3, ip
  402ba0:	fa00 fc02 	lsl.w	ip, r0, r2
  402ba4:	f1c2 0220 	rsb	r2, r2, #32
  402ba8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  402bac:	fa20 f202 	lsr.w	r2, r0, r2
  402bb0:	eb43 0002 	adc.w	r0, r3, r2
  402bb4:	bf08      	it	eq
  402bb6:	f020 0001 	biceq.w	r0, r0, #1
  402bba:	4770      	bx	lr
  402bbc:	f102 0220 	add.w	r2, r2, #32
  402bc0:	fa01 fc02 	lsl.w	ip, r1, r2
  402bc4:	f1c2 0220 	rsb	r2, r2, #32
  402bc8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  402bcc:	fa21 f202 	lsr.w	r2, r1, r2
  402bd0:	eb43 0002 	adc.w	r0, r3, r2
  402bd4:	bf08      	it	eq
  402bd6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  402bda:	4770      	bx	lr

00402bdc <__aeabi_fmul>:
  402bdc:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402be0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  402be4:	bf1e      	ittt	ne
  402be6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  402bea:	ea92 0f0c 	teqne	r2, ip
  402bee:	ea93 0f0c 	teqne	r3, ip
  402bf2:	d06f      	beq.n	402cd4 <__aeabi_fmul+0xf8>
  402bf4:	441a      	add	r2, r3
  402bf6:	ea80 0c01 	eor.w	ip, r0, r1
  402bfa:	0240      	lsls	r0, r0, #9
  402bfc:	bf18      	it	ne
  402bfe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  402c02:	d01e      	beq.n	402c42 <__aeabi_fmul+0x66>
  402c04:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  402c08:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  402c0c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  402c10:	fba0 3101 	umull	r3, r1, r0, r1
  402c14:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  402c18:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  402c1c:	bf3e      	ittt	cc
  402c1e:	0049      	lslcc	r1, r1, #1
  402c20:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  402c24:	005b      	lslcc	r3, r3, #1
  402c26:	ea40 0001 	orr.w	r0, r0, r1
  402c2a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  402c2e:	2afd      	cmp	r2, #253	; 0xfd
  402c30:	d81d      	bhi.n	402c6e <__aeabi_fmul+0x92>
  402c32:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  402c36:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  402c3a:	bf08      	it	eq
  402c3c:	f020 0001 	biceq.w	r0, r0, #1
  402c40:	4770      	bx	lr
  402c42:	f090 0f00 	teq	r0, #0
  402c46:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  402c4a:	bf08      	it	eq
  402c4c:	0249      	lsleq	r1, r1, #9
  402c4e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  402c52:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  402c56:	3a7f      	subs	r2, #127	; 0x7f
  402c58:	bfc2      	ittt	gt
  402c5a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  402c5e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  402c62:	4770      	bxgt	lr
  402c64:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402c68:	f04f 0300 	mov.w	r3, #0
  402c6c:	3a01      	subs	r2, #1
  402c6e:	dc5d      	bgt.n	402d2c <__aeabi_fmul+0x150>
  402c70:	f112 0f19 	cmn.w	r2, #25
  402c74:	bfdc      	itt	le
  402c76:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  402c7a:	4770      	bxle	lr
  402c7c:	f1c2 0200 	rsb	r2, r2, #0
  402c80:	0041      	lsls	r1, r0, #1
  402c82:	fa21 f102 	lsr.w	r1, r1, r2
  402c86:	f1c2 0220 	rsb	r2, r2, #32
  402c8a:	fa00 fc02 	lsl.w	ip, r0, r2
  402c8e:	ea5f 0031 	movs.w	r0, r1, rrx
  402c92:	f140 0000 	adc.w	r0, r0, #0
  402c96:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  402c9a:	bf08      	it	eq
  402c9c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  402ca0:	4770      	bx	lr
  402ca2:	f092 0f00 	teq	r2, #0
  402ca6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  402caa:	bf02      	ittt	eq
  402cac:	0040      	lsleq	r0, r0, #1
  402cae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  402cb2:	3a01      	subeq	r2, #1
  402cb4:	d0f9      	beq.n	402caa <__aeabi_fmul+0xce>
  402cb6:	ea40 000c 	orr.w	r0, r0, ip
  402cba:	f093 0f00 	teq	r3, #0
  402cbe:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  402cc2:	bf02      	ittt	eq
  402cc4:	0049      	lsleq	r1, r1, #1
  402cc6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  402cca:	3b01      	subeq	r3, #1
  402ccc:	d0f9      	beq.n	402cc2 <__aeabi_fmul+0xe6>
  402cce:	ea41 010c 	orr.w	r1, r1, ip
  402cd2:	e78f      	b.n	402bf4 <__aeabi_fmul+0x18>
  402cd4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  402cd8:	ea92 0f0c 	teq	r2, ip
  402cdc:	bf18      	it	ne
  402cde:	ea93 0f0c 	teqne	r3, ip
  402ce2:	d00a      	beq.n	402cfa <__aeabi_fmul+0x11e>
  402ce4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  402ce8:	bf18      	it	ne
  402cea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  402cee:	d1d8      	bne.n	402ca2 <__aeabi_fmul+0xc6>
  402cf0:	ea80 0001 	eor.w	r0, r0, r1
  402cf4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  402cf8:	4770      	bx	lr
  402cfa:	f090 0f00 	teq	r0, #0
  402cfe:	bf17      	itett	ne
  402d00:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  402d04:	4608      	moveq	r0, r1
  402d06:	f091 0f00 	teqne	r1, #0
  402d0a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  402d0e:	d014      	beq.n	402d3a <__aeabi_fmul+0x15e>
  402d10:	ea92 0f0c 	teq	r2, ip
  402d14:	d101      	bne.n	402d1a <__aeabi_fmul+0x13e>
  402d16:	0242      	lsls	r2, r0, #9
  402d18:	d10f      	bne.n	402d3a <__aeabi_fmul+0x15e>
  402d1a:	ea93 0f0c 	teq	r3, ip
  402d1e:	d103      	bne.n	402d28 <__aeabi_fmul+0x14c>
  402d20:	024b      	lsls	r3, r1, #9
  402d22:	bf18      	it	ne
  402d24:	4608      	movne	r0, r1
  402d26:	d108      	bne.n	402d3a <__aeabi_fmul+0x15e>
  402d28:	ea80 0001 	eor.w	r0, r0, r1
  402d2c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  402d30:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  402d34:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402d38:	4770      	bx	lr
  402d3a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  402d3e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  402d42:	4770      	bx	lr

00402d44 <__aeabi_fdiv>:
  402d44:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  402d4c:	bf1e      	ittt	ne
  402d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  402d52:	ea92 0f0c 	teqne	r2, ip
  402d56:	ea93 0f0c 	teqne	r3, ip
  402d5a:	d069      	beq.n	402e30 <__aeabi_fdiv+0xec>
  402d5c:	eba2 0203 	sub.w	r2, r2, r3
  402d60:	ea80 0c01 	eor.w	ip, r0, r1
  402d64:	0249      	lsls	r1, r1, #9
  402d66:	ea4f 2040 	mov.w	r0, r0, lsl #9
  402d6a:	d037      	beq.n	402ddc <__aeabi_fdiv+0x98>
  402d6c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  402d70:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  402d74:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  402d78:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  402d7c:	428b      	cmp	r3, r1
  402d7e:	bf38      	it	cc
  402d80:	005b      	lslcc	r3, r3, #1
  402d82:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  402d86:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  402d8a:	428b      	cmp	r3, r1
  402d8c:	bf24      	itt	cs
  402d8e:	1a5b      	subcs	r3, r3, r1
  402d90:	ea40 000c 	orrcs.w	r0, r0, ip
  402d94:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  402d98:	bf24      	itt	cs
  402d9a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  402d9e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402da2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  402da6:	bf24      	itt	cs
  402da8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  402dac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402db0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  402db4:	bf24      	itt	cs
  402db6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  402dba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402dbe:	011b      	lsls	r3, r3, #4
  402dc0:	bf18      	it	ne
  402dc2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  402dc6:	d1e0      	bne.n	402d8a <__aeabi_fdiv+0x46>
  402dc8:	2afd      	cmp	r2, #253	; 0xfd
  402dca:	f63f af50 	bhi.w	402c6e <__aeabi_fmul+0x92>
  402dce:	428b      	cmp	r3, r1
  402dd0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  402dd4:	bf08      	it	eq
  402dd6:	f020 0001 	biceq.w	r0, r0, #1
  402dda:	4770      	bx	lr
  402ddc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  402de0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  402de4:	327f      	adds	r2, #127	; 0x7f
  402de6:	bfc2      	ittt	gt
  402de8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  402dec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  402df0:	4770      	bxgt	lr
  402df2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402df6:	f04f 0300 	mov.w	r3, #0
  402dfa:	3a01      	subs	r2, #1
  402dfc:	e737      	b.n	402c6e <__aeabi_fmul+0x92>
  402dfe:	f092 0f00 	teq	r2, #0
  402e02:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  402e06:	bf02      	ittt	eq
  402e08:	0040      	lsleq	r0, r0, #1
  402e0a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  402e0e:	3a01      	subeq	r2, #1
  402e10:	d0f9      	beq.n	402e06 <__aeabi_fdiv+0xc2>
  402e12:	ea40 000c 	orr.w	r0, r0, ip
  402e16:	f093 0f00 	teq	r3, #0
  402e1a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  402e1e:	bf02      	ittt	eq
  402e20:	0049      	lsleq	r1, r1, #1
  402e22:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  402e26:	3b01      	subeq	r3, #1
  402e28:	d0f9      	beq.n	402e1e <__aeabi_fdiv+0xda>
  402e2a:	ea41 010c 	orr.w	r1, r1, ip
  402e2e:	e795      	b.n	402d5c <__aeabi_fdiv+0x18>
  402e30:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  402e34:	ea92 0f0c 	teq	r2, ip
  402e38:	d108      	bne.n	402e4c <__aeabi_fdiv+0x108>
  402e3a:	0242      	lsls	r2, r0, #9
  402e3c:	f47f af7d 	bne.w	402d3a <__aeabi_fmul+0x15e>
  402e40:	ea93 0f0c 	teq	r3, ip
  402e44:	f47f af70 	bne.w	402d28 <__aeabi_fmul+0x14c>
  402e48:	4608      	mov	r0, r1
  402e4a:	e776      	b.n	402d3a <__aeabi_fmul+0x15e>
  402e4c:	ea93 0f0c 	teq	r3, ip
  402e50:	d104      	bne.n	402e5c <__aeabi_fdiv+0x118>
  402e52:	024b      	lsls	r3, r1, #9
  402e54:	f43f af4c 	beq.w	402cf0 <__aeabi_fmul+0x114>
  402e58:	4608      	mov	r0, r1
  402e5a:	e76e      	b.n	402d3a <__aeabi_fmul+0x15e>
  402e5c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  402e60:	bf18      	it	ne
  402e62:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  402e66:	d1ca      	bne.n	402dfe <__aeabi_fdiv+0xba>
  402e68:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  402e6c:	f47f af5c 	bne.w	402d28 <__aeabi_fmul+0x14c>
  402e70:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  402e74:	f47f af3c 	bne.w	402cf0 <__aeabi_fmul+0x114>
  402e78:	e75f      	b.n	402d3a <__aeabi_fmul+0x15e>
  402e7a:	bf00      	nop

00402e7c <__gesf2>:
  402e7c:	f04f 3cff 	mov.w	ip, #4294967295
  402e80:	e006      	b.n	402e90 <__cmpsf2+0x4>
  402e82:	bf00      	nop

00402e84 <__lesf2>:
  402e84:	f04f 0c01 	mov.w	ip, #1
  402e88:	e002      	b.n	402e90 <__cmpsf2+0x4>
  402e8a:	bf00      	nop

00402e8c <__cmpsf2>:
  402e8c:	f04f 0c01 	mov.w	ip, #1
  402e90:	f84d cd04 	str.w	ip, [sp, #-4]!
  402e94:	ea4f 0240 	mov.w	r2, r0, lsl #1
  402e98:	ea4f 0341 	mov.w	r3, r1, lsl #1
  402e9c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  402ea0:	bf18      	it	ne
  402ea2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  402ea6:	d011      	beq.n	402ecc <__cmpsf2+0x40>
  402ea8:	b001      	add	sp, #4
  402eaa:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  402eae:	bf18      	it	ne
  402eb0:	ea90 0f01 	teqne	r0, r1
  402eb4:	bf58      	it	pl
  402eb6:	ebb2 0003 	subspl.w	r0, r2, r3
  402eba:	bf88      	it	hi
  402ebc:	17c8      	asrhi	r0, r1, #31
  402ebe:	bf38      	it	cc
  402ec0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  402ec4:	bf18      	it	ne
  402ec6:	f040 0001 	orrne.w	r0, r0, #1
  402eca:	4770      	bx	lr
  402ecc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  402ed0:	d102      	bne.n	402ed8 <__cmpsf2+0x4c>
  402ed2:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  402ed6:	d105      	bne.n	402ee4 <__cmpsf2+0x58>
  402ed8:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  402edc:	d1e4      	bne.n	402ea8 <__cmpsf2+0x1c>
  402ede:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  402ee2:	d0e1      	beq.n	402ea8 <__cmpsf2+0x1c>
  402ee4:	f85d 0b04 	ldr.w	r0, [sp], #4
  402ee8:	4770      	bx	lr
  402eea:	bf00      	nop

00402eec <__aeabi_cfrcmple>:
  402eec:	4684      	mov	ip, r0
  402eee:	4608      	mov	r0, r1
  402ef0:	4661      	mov	r1, ip
  402ef2:	e7ff      	b.n	402ef4 <__aeabi_cfcmpeq>

00402ef4 <__aeabi_cfcmpeq>:
  402ef4:	b50f      	push	{r0, r1, r2, r3, lr}
  402ef6:	f7ff ffc9 	bl	402e8c <__cmpsf2>
  402efa:	2800      	cmp	r0, #0
  402efc:	bf48      	it	mi
  402efe:	f110 0f00 	cmnmi.w	r0, #0
  402f02:	bd0f      	pop	{r0, r1, r2, r3, pc}

00402f04 <__aeabi_fcmpeq>:
  402f04:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f08:	f7ff fff4 	bl	402ef4 <__aeabi_cfcmpeq>
  402f0c:	bf0c      	ite	eq
  402f0e:	2001      	moveq	r0, #1
  402f10:	2000      	movne	r0, #0
  402f12:	f85d fb08 	ldr.w	pc, [sp], #8
  402f16:	bf00      	nop

00402f18 <__aeabi_fcmplt>:
  402f18:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f1c:	f7ff ffea 	bl	402ef4 <__aeabi_cfcmpeq>
  402f20:	bf34      	ite	cc
  402f22:	2001      	movcc	r0, #1
  402f24:	2000      	movcs	r0, #0
  402f26:	f85d fb08 	ldr.w	pc, [sp], #8
  402f2a:	bf00      	nop

00402f2c <__aeabi_fcmple>:
  402f2c:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f30:	f7ff ffe0 	bl	402ef4 <__aeabi_cfcmpeq>
  402f34:	bf94      	ite	ls
  402f36:	2001      	movls	r0, #1
  402f38:	2000      	movhi	r0, #0
  402f3a:	f85d fb08 	ldr.w	pc, [sp], #8
  402f3e:	bf00      	nop

00402f40 <__aeabi_fcmpge>:
  402f40:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f44:	f7ff ffd2 	bl	402eec <__aeabi_cfrcmple>
  402f48:	bf94      	ite	ls
  402f4a:	2001      	movls	r0, #1
  402f4c:	2000      	movhi	r0, #0
  402f4e:	f85d fb08 	ldr.w	pc, [sp], #8
  402f52:	bf00      	nop

00402f54 <__aeabi_fcmpgt>:
  402f54:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f58:	f7ff ffc8 	bl	402eec <__aeabi_cfrcmple>
  402f5c:	bf34      	ite	cc
  402f5e:	2001      	movcc	r0, #1
  402f60:	2000      	movcs	r0, #0
  402f62:	f85d fb08 	ldr.w	pc, [sp], #8
  402f66:	bf00      	nop

00402f68 <__aeabi_f2uiz>:
  402f68:	0042      	lsls	r2, r0, #1
  402f6a:	d20e      	bcs.n	402f8a <__aeabi_f2uiz+0x22>
  402f6c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  402f70:	d30b      	bcc.n	402f8a <__aeabi_f2uiz+0x22>
  402f72:	f04f 039e 	mov.w	r3, #158	; 0x9e
  402f76:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  402f7a:	d409      	bmi.n	402f90 <__aeabi_f2uiz+0x28>
  402f7c:	ea4f 2300 	mov.w	r3, r0, lsl #8
  402f80:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  402f84:	fa23 f002 	lsr.w	r0, r3, r2
  402f88:	4770      	bx	lr
  402f8a:	f04f 0000 	mov.w	r0, #0
  402f8e:	4770      	bx	lr
  402f90:	f112 0f61 	cmn.w	r2, #97	; 0x61
  402f94:	d101      	bne.n	402f9a <__aeabi_f2uiz+0x32>
  402f96:	0242      	lsls	r2, r0, #9
  402f98:	d102      	bne.n	402fa0 <__aeabi_f2uiz+0x38>
  402f9a:	f04f 30ff 	mov.w	r0, #4294967295
  402f9e:	4770      	bx	lr
  402fa0:	f04f 0000 	mov.w	r0, #0
  402fa4:	4770      	bx	lr
  402fa6:	bf00      	nop

00402fa8 <__libc_init_array>:
  402fa8:	b570      	push	{r4, r5, r6, lr}
  402faa:	4e0f      	ldr	r6, [pc, #60]	; (402fe8 <__libc_init_array+0x40>)
  402fac:	4d0f      	ldr	r5, [pc, #60]	; (402fec <__libc_init_array+0x44>)
  402fae:	1b76      	subs	r6, r6, r5
  402fb0:	10b6      	asrs	r6, r6, #2
  402fb2:	bf18      	it	ne
  402fb4:	2400      	movne	r4, #0
  402fb6:	d005      	beq.n	402fc4 <__libc_init_array+0x1c>
  402fb8:	3401      	adds	r4, #1
  402fba:	f855 3b04 	ldr.w	r3, [r5], #4
  402fbe:	4798      	blx	r3
  402fc0:	42a6      	cmp	r6, r4
  402fc2:	d1f9      	bne.n	402fb8 <__libc_init_array+0x10>
  402fc4:	4e0a      	ldr	r6, [pc, #40]	; (402ff0 <__libc_init_array+0x48>)
  402fc6:	4d0b      	ldr	r5, [pc, #44]	; (402ff4 <__libc_init_array+0x4c>)
  402fc8:	1b76      	subs	r6, r6, r5
  402fca:	f000 f993 	bl	4032f4 <_init>
  402fce:	10b6      	asrs	r6, r6, #2
  402fd0:	bf18      	it	ne
  402fd2:	2400      	movne	r4, #0
  402fd4:	d006      	beq.n	402fe4 <__libc_init_array+0x3c>
  402fd6:	3401      	adds	r4, #1
  402fd8:	f855 3b04 	ldr.w	r3, [r5], #4
  402fdc:	4798      	blx	r3
  402fde:	42a6      	cmp	r6, r4
  402fe0:	d1f9      	bne.n	402fd6 <__libc_init_array+0x2e>
  402fe2:	bd70      	pop	{r4, r5, r6, pc}
  402fe4:	bd70      	pop	{r4, r5, r6, pc}
  402fe6:	bf00      	nop
  402fe8:	00403300 	.word	0x00403300
  402fec:	00403300 	.word	0x00403300
  402ff0:	00403308 	.word	0x00403308
  402ff4:	00403300 	.word	0x00403300

00402ff8 <register_fini>:
  402ff8:	4b02      	ldr	r3, [pc, #8]	; (403004 <register_fini+0xc>)
  402ffa:	b113      	cbz	r3, 403002 <register_fini+0xa>
  402ffc:	4802      	ldr	r0, [pc, #8]	; (403008 <register_fini+0x10>)
  402ffe:	f000 b805 	b.w	40300c <atexit>
  403002:	4770      	bx	lr
  403004:	00000000 	.word	0x00000000
  403008:	00403019 	.word	0x00403019

0040300c <atexit>:
  40300c:	2300      	movs	r3, #0
  40300e:	4601      	mov	r1, r0
  403010:	461a      	mov	r2, r3
  403012:	4618      	mov	r0, r3
  403014:	f000 b81e 	b.w	403054 <__register_exitproc>

00403018 <__libc_fini_array>:
  403018:	b538      	push	{r3, r4, r5, lr}
  40301a:	4c0a      	ldr	r4, [pc, #40]	; (403044 <__libc_fini_array+0x2c>)
  40301c:	4d0a      	ldr	r5, [pc, #40]	; (403048 <__libc_fini_array+0x30>)
  40301e:	1b64      	subs	r4, r4, r5
  403020:	10a4      	asrs	r4, r4, #2
  403022:	d00a      	beq.n	40303a <__libc_fini_array+0x22>
  403024:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403028:	3b01      	subs	r3, #1
  40302a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40302e:	3c01      	subs	r4, #1
  403030:	f855 3904 	ldr.w	r3, [r5], #-4
  403034:	4798      	blx	r3
  403036:	2c00      	cmp	r4, #0
  403038:	d1f9      	bne.n	40302e <__libc_fini_array+0x16>
  40303a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40303e:	f000 b963 	b.w	403308 <_fini>
  403042:	bf00      	nop
  403044:	00403318 	.word	0x00403318
  403048:	00403314 	.word	0x00403314

0040304c <__retarget_lock_acquire_recursive>:
  40304c:	4770      	bx	lr
  40304e:	bf00      	nop

00403050 <__retarget_lock_release_recursive>:
  403050:	4770      	bx	lr
  403052:	bf00      	nop

00403054 <__register_exitproc>:
  403054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403058:	4d2c      	ldr	r5, [pc, #176]	; (40310c <__register_exitproc+0xb8>)
  40305a:	4606      	mov	r6, r0
  40305c:	6828      	ldr	r0, [r5, #0]
  40305e:	4698      	mov	r8, r3
  403060:	460f      	mov	r7, r1
  403062:	4691      	mov	r9, r2
  403064:	f7ff fff2 	bl	40304c <__retarget_lock_acquire_recursive>
  403068:	4b29      	ldr	r3, [pc, #164]	; (403110 <__register_exitproc+0xbc>)
  40306a:	681c      	ldr	r4, [r3, #0]
  40306c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  403070:	2b00      	cmp	r3, #0
  403072:	d03e      	beq.n	4030f2 <__register_exitproc+0x9e>
  403074:	685a      	ldr	r2, [r3, #4]
  403076:	2a1f      	cmp	r2, #31
  403078:	dc1c      	bgt.n	4030b4 <__register_exitproc+0x60>
  40307a:	f102 0e01 	add.w	lr, r2, #1
  40307e:	b176      	cbz	r6, 40309e <__register_exitproc+0x4a>
  403080:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  403084:	2401      	movs	r4, #1
  403086:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40308a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40308e:	4094      	lsls	r4, r2
  403090:	4320      	orrs	r0, r4
  403092:	2e02      	cmp	r6, #2
  403094:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  403098:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  40309c:	d023      	beq.n	4030e6 <__register_exitproc+0x92>
  40309e:	3202      	adds	r2, #2
  4030a0:	f8c3 e004 	str.w	lr, [r3, #4]
  4030a4:	6828      	ldr	r0, [r5, #0]
  4030a6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4030aa:	f7ff ffd1 	bl	403050 <__retarget_lock_release_recursive>
  4030ae:	2000      	movs	r0, #0
  4030b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4030b4:	4b17      	ldr	r3, [pc, #92]	; (403114 <__register_exitproc+0xc0>)
  4030b6:	b30b      	cbz	r3, 4030fc <__register_exitproc+0xa8>
  4030b8:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4030bc:	f3af 8000 	nop.w
  4030c0:	4603      	mov	r3, r0
  4030c2:	b1d8      	cbz	r0, 4030fc <__register_exitproc+0xa8>
  4030c4:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4030c8:	6002      	str	r2, [r0, #0]
  4030ca:	2100      	movs	r1, #0
  4030cc:	6041      	str	r1, [r0, #4]
  4030ce:	460a      	mov	r2, r1
  4030d0:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4030d4:	f04f 0e01 	mov.w	lr, #1
  4030d8:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4030dc:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4030e0:	2e00      	cmp	r6, #0
  4030e2:	d0dc      	beq.n	40309e <__register_exitproc+0x4a>
  4030e4:	e7cc      	b.n	403080 <__register_exitproc+0x2c>
  4030e6:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4030ea:	430c      	orrs	r4, r1
  4030ec:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4030f0:	e7d5      	b.n	40309e <__register_exitproc+0x4a>
  4030f2:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4030f6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4030fa:	e7bb      	b.n	403074 <__register_exitproc+0x20>
  4030fc:	6828      	ldr	r0, [r5, #0]
  4030fe:	f7ff ffa7 	bl	403050 <__retarget_lock_release_recursive>
  403102:	f04f 30ff 	mov.w	r0, #4294967295
  403106:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40310a:	bf00      	nop
  40310c:	20000430 	.word	0x20000430
  403110:	004032f0 	.word	0x004032f0
  403114:	00000000 	.word	0x00000000

00403118 <npio2_hw>:
  403118:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
  403128:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
  403138:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
  403148:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
  403158:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
  403168:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
  403178:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
  403188:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

00403198 <two_over_pi>:
  403198:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
  4031a8:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
  4031b8:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
  4031c8:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
  4031d8:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
  4031e8:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
  4031f8:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
  403208:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
  403218:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
  403228:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
  403238:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
  403248:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
  403258:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
  403268:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
  403278:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
  403288:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
  403298:	0060e27b 00c08c6b                       {.`.k...

004032a0 <PIo2>:
  4032a0:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
  4032b0:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
  4032c0:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
  4032d0:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

004032e0 <init_jk>:
  4032e0:	00000002 00000003 00000004 00000006     ................

004032f0 <_global_impure_ptr>:
  4032f0:	20000008                                ... 

004032f4 <_init>:
  4032f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4032f6:	bf00      	nop
  4032f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4032fa:	bc08      	pop	{r3}
  4032fc:	469e      	mov	lr, r3
  4032fe:	4770      	bx	lr

00403300 <__init_array_start>:
  403300:	00402ff9 	.word	0x00402ff9

00403304 <__frame_dummy_init_array_entry>:
  403304:	0040011d                                ..@.

00403308 <_fini>:
  403308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40330a:	bf00      	nop
  40330c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40330e:	bc08      	pop	{r3}
  403310:	469e      	mov	lr, r3
  403312:	4770      	bx	lr

00403314 <__fini_array_start>:
  403314:	004000f9 	.word	0x004000f9
