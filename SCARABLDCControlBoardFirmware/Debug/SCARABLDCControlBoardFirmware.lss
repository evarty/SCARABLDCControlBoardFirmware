
SCARABLDCControlBoardFirmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002fc8  00400000  00400000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00402fc8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00003ec0  20000434  004033fc  00020434  2**2
                  ALLOC
  3 .stack        00003004  200042f4  004072bc  00020434  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045e  2**0
                  CONTENTS, READONLY
  6 .debug_info   00001b4c  00000000  00000000  000204b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005d1  00000000  00000000  00022003  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000296  00000000  00000000  000225d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000000c0  00000000  00000000  0002286a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000070  00000000  00000000  0002292a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00001cfa  00000000  00000000  0002299a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000023b6  00000000  00000000  00024694  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0004aa0e  00000000  00000000  00026a4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000007e0  00000000  00000000  00071458  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 72 00 20 65 01 40 00 e9 01 40 00 e9 01 40 00     .r. e.@...@...@.
  400010:	e9 01 40 00 e9 01 40 00 e9 01 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	e9 01 40 00 e9 01 40 00 00 00 00 00 e9 01 40 00     ..@...@.......@.
  40003c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  40004c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  40005c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  40006c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  40007c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  40008c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  40009c:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  4000ac:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  4000bc:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  4000cc:	e9 01 40 00 e9 01 40 00 e9 01 40 00 e9 01 40 00     ..@...@...@...@.
  4000dc:	e9 01 40 00 e9 01 40 00 00 00 00 00 00 00 00 00     ..@...@.........
	...

004000f8 <__do_global_dtors_aux>:
  4000f8:	b510      	push	{r4, lr}
  4000fa:	4c05      	ldr	r4, [pc, #20]	; (400110 <__do_global_dtors_aux+0x18>)
  4000fc:	7823      	ldrb	r3, [r4, #0]
  4000fe:	b933      	cbnz	r3, 40010e <__do_global_dtors_aux+0x16>
  400100:	4b04      	ldr	r3, [pc, #16]	; (400114 <__do_global_dtors_aux+0x1c>)
  400102:	b113      	cbz	r3, 40010a <__do_global_dtors_aux+0x12>
  400104:	4804      	ldr	r0, [pc, #16]	; (400118 <__do_global_dtors_aux+0x20>)
  400106:	f3af 8000 	nop.w
  40010a:	2301      	movs	r3, #1
  40010c:	7023      	strb	r3, [r4, #0]
  40010e:	bd10      	pop	{r4, pc}
  400110:	20000434 	.word	0x20000434
  400114:	00000000 	.word	0x00000000
  400118:	00402fc8 	.word	0x00402fc8

0040011c <frame_dummy>:
  40011c:	4b0c      	ldr	r3, [pc, #48]	; (400150 <frame_dummy+0x34>)
  40011e:	b143      	cbz	r3, 400132 <frame_dummy+0x16>
  400120:	480c      	ldr	r0, [pc, #48]	; (400154 <frame_dummy+0x38>)
  400122:	490d      	ldr	r1, [pc, #52]	; (400158 <frame_dummy+0x3c>)
  400124:	b510      	push	{r4, lr}
  400126:	f3af 8000 	nop.w
  40012a:	480c      	ldr	r0, [pc, #48]	; (40015c <frame_dummy+0x40>)
  40012c:	6803      	ldr	r3, [r0, #0]
  40012e:	b923      	cbnz	r3, 40013a <frame_dummy+0x1e>
  400130:	bd10      	pop	{r4, pc}
  400132:	480a      	ldr	r0, [pc, #40]	; (40015c <frame_dummy+0x40>)
  400134:	6803      	ldr	r3, [r0, #0]
  400136:	b933      	cbnz	r3, 400146 <frame_dummy+0x2a>
  400138:	4770      	bx	lr
  40013a:	4b09      	ldr	r3, [pc, #36]	; (400160 <frame_dummy+0x44>)
  40013c:	2b00      	cmp	r3, #0
  40013e:	d0f7      	beq.n	400130 <frame_dummy+0x14>
  400140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400144:	4718      	bx	r3
  400146:	4b06      	ldr	r3, [pc, #24]	; (400160 <frame_dummy+0x44>)
  400148:	2b00      	cmp	r3, #0
  40014a:	d0f5      	beq.n	400138 <frame_dummy+0x1c>
  40014c:	4718      	bx	r3
  40014e:	bf00      	nop
  400150:	00000000 	.word	0x00000000
  400154:	00402fc8 	.word	0x00402fc8
  400158:	20000438 	.word	0x20000438
  40015c:	00402fc8 	.word	0x00402fc8
  400160:	00000000 	.word	0x00000000

00400164 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400164:	b580      	push	{r7, lr}
  400166:	b082      	sub	sp, #8
  400168:	af00      	add	r7, sp, #0
        uint32_t *pSrc, *pDest;

        /* Initialize the relocate segment */
        pSrc = &_etext;
  40016a:	4b16      	ldr	r3, [pc, #88]	; (4001c4 <Reset_Handler+0x60>)
  40016c:	607b      	str	r3, [r7, #4]
        pDest = &_srelocate;
  40016e:	4b16      	ldr	r3, [pc, #88]	; (4001c8 <Reset_Handler+0x64>)
  400170:	603b      	str	r3, [r7, #0]

        if (pSrc != pDest) {
  400172:	687a      	ldr	r2, [r7, #4]
  400174:	683b      	ldr	r3, [r7, #0]
  400176:	429a      	cmp	r2, r3
  400178:	d00c      	beq.n	400194 <Reset_Handler+0x30>
                for (; pDest < &_erelocate;) {
  40017a:	e007      	b.n	40018c <Reset_Handler+0x28>
                        *pDest++ = *pSrc++;
  40017c:	683b      	ldr	r3, [r7, #0]
  40017e:	1d1a      	adds	r2, r3, #4
  400180:	603a      	str	r2, [r7, #0]
  400182:	687a      	ldr	r2, [r7, #4]
  400184:	1d11      	adds	r1, r2, #4
  400186:	6079      	str	r1, [r7, #4]
  400188:	6812      	ldr	r2, [r2, #0]
  40018a:	601a      	str	r2, [r3, #0]
                for (; pDest < &_erelocate;) {
  40018c:	683b      	ldr	r3, [r7, #0]
  40018e:	4a0f      	ldr	r2, [pc, #60]	; (4001cc <Reset_Handler+0x68>)
  400190:	4293      	cmp	r3, r2
  400192:	d3f3      	bcc.n	40017c <Reset_Handler+0x18>
                }
        }

        /* Clear the zero segment */
        for (pDest = &_szero; pDest < &_ezero;) {
  400194:	4b0e      	ldr	r3, [pc, #56]	; (4001d0 <Reset_Handler+0x6c>)
  400196:	603b      	str	r3, [r7, #0]
  400198:	e004      	b.n	4001a4 <Reset_Handler+0x40>
                *pDest++ = 0;
  40019a:	683b      	ldr	r3, [r7, #0]
  40019c:	1d1a      	adds	r2, r3, #4
  40019e:	603a      	str	r2, [r7, #0]
  4001a0:	2200      	movs	r2, #0
  4001a2:	601a      	str	r2, [r3, #0]
        for (pDest = &_szero; pDest < &_ezero;) {
  4001a4:	683b      	ldr	r3, [r7, #0]
  4001a6:	4a0b      	ldr	r2, [pc, #44]	; (4001d4 <Reset_Handler+0x70>)
  4001a8:	4293      	cmp	r3, r2
  4001aa:	d3f6      	bcc.n	40019a <Reset_Handler+0x36>
        }

        /* Set the vector table base address */
        pSrc = (uint32_t *) & _sfixed;
  4001ac:	4b0a      	ldr	r3, [pc, #40]	; (4001d8 <Reset_Handler+0x74>)
  4001ae:	607b      	str	r3, [r7, #4]
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4001b0:	4a0a      	ldr	r2, [pc, #40]	; (4001dc <Reset_Handler+0x78>)
  4001b2:	687b      	ldr	r3, [r7, #4]
  4001b4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4001b8:	6093      	str	r3, [r2, #8]

        /* Initialize the C library */
        __libc_init_array();
  4001ba:	4b09      	ldr	r3, [pc, #36]	; (4001e0 <Reset_Handler+0x7c>)
  4001bc:	4798      	blx	r3

        /* Branch to main function */
        main();
  4001be:	4b09      	ldr	r3, [pc, #36]	; (4001e4 <Reset_Handler+0x80>)
  4001c0:	4798      	blx	r3

        /* Infinite loop */
        while (1);
  4001c2:	e7fe      	b.n	4001c2 <Reset_Handler+0x5e>
  4001c4:	00402fc8 	.word	0x00402fc8
  4001c8:	20000000 	.word	0x20000000
  4001cc:	20000434 	.word	0x20000434
  4001d0:	20000434 	.word	0x20000434
  4001d4:	200042f4 	.word	0x200042f4
  4001d8:	00400000 	.word	0x00400000
  4001dc:	e000ed00 	.word	0xe000ed00
  4001e0:	00402c55 	.word	0x00402c55
  4001e4:	004002b9 	.word	0x004002b9

004001e8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4001e8:	b480      	push	{r7}
  4001ea:	af00      	add	r7, sp, #0
        while (1) {
  4001ec:	e7fe      	b.n	4001ec <Dummy_Handler+0x4>
	...

004001f0 <SystemInit>:
/**
 * \brief Setup the microcontroller system.
 * Initialize the System and update the SystemFrequency variable.
 */
void SystemInit( void )
{
  4001f0:	b480      	push	{r7}
  4001f2:	af00      	add	r7, sp, #0
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC->EEFC_FMR = EEFC_FMR_FWS(5);
  4001f4:	4b28      	ldr	r3, [pc, #160]	; (400298 <SystemInit+0xa8>)
  4001f6:	f44f 62a0 	mov.w	r2, #1280	; 0x500
  4001fa:	601a      	str	r2, [r3, #0]


	/* Initialize main oscillator */
	if ( !(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) )
  4001fc:	4b27      	ldr	r3, [pc, #156]	; (40029c <SystemInit+0xac>)
  4001fe:	6a1b      	ldr	r3, [r3, #32]
  400200:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  400204:	2b00      	cmp	r3, #0
  400206:	d109      	bne.n	40021c <SystemInit+0x2c>
  {
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
  400208:	4b24      	ldr	r3, [pc, #144]	; (40029c <SystemInit+0xac>)
  40020a:	4a25      	ldr	r2, [pc, #148]	; (4002a0 <SystemInit+0xb0>)
  40020c:	621a      	str	r2, [r3, #32]

		while ( !(PMC->PMC_SR & PMC_SR_MOSCXTS) )
  40020e:	bf00      	nop
  400210:	4b22      	ldr	r3, [pc, #136]	; (40029c <SystemInit+0xac>)
  400212:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400214:	f003 0301 	and.w	r3, r3, #1
  400218:	2b00      	cmp	r3, #0
  40021a:	d0f9      	beq.n	400210 <SystemInit+0x20>
    {
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
  40021c:	4b1f      	ldr	r3, [pc, #124]	; (40029c <SystemInit+0xac>)
  40021e:	4a21      	ldr	r2, [pc, #132]	; (4002a4 <SystemInit+0xb4>)
  400220:	621a      	str	r2, [r3, #32]

	while ( !(PMC->PMC_SR & PMC_SR_MOSCSELS) )
  400222:	bf00      	nop
  400224:	4b1d      	ldr	r3, [pc, #116]	; (40029c <SystemInit+0xac>)
  400226:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400228:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
  40022c:	2b00      	cmp	r3, #0
  40022e:	d0f9      	beq.n	400224 <SystemInit+0x34>
  {
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
  400230:	4a1a      	ldr	r2, [pc, #104]	; (40029c <SystemInit+0xac>)
  400232:	4b1a      	ldr	r3, [pc, #104]	; (40029c <SystemInit+0xac>)
  400234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400236:	f023 0303 	bic.w	r3, r3, #3
  40023a:	f043 0301 	orr.w	r3, r3, #1
  40023e:	6313      	str	r3, [r2, #48]	; 0x30

	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  400240:	bf00      	nop
  400242:	4b16      	ldr	r3, [pc, #88]	; (40029c <SystemInit+0xac>)
  400244:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400246:	f003 0308 	and.w	r3, r3, #8
  40024a:	2b00      	cmp	r3, #0
  40024c:	d0f9      	beq.n	400242 <SystemInit+0x52>
  {
  }

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
  40024e:	4b13      	ldr	r3, [pc, #76]	; (40029c <SystemInit+0xac>)
  400250:	4a15      	ldr	r2, [pc, #84]	; (4002a8 <SystemInit+0xb8>)
  400252:	629a      	str	r2, [r3, #40]	; 0x28
	while ( !(PMC->PMC_SR & PMC_SR_LOCKA) )
  400254:	bf00      	nop
  400256:	4b11      	ldr	r3, [pc, #68]	; (40029c <SystemInit+0xac>)
  400258:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40025a:	f003 0302 	and.w	r3, r3, #2
  40025e:	2b00      	cmp	r3, #0
  400260:	d0f9      	beq.n	400256 <SystemInit+0x66>
  {
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
  400262:	4b0e      	ldr	r3, [pc, #56]	; (40029c <SystemInit+0xac>)
  400264:	2211      	movs	r2, #17
  400266:	631a      	str	r2, [r3, #48]	; 0x30
	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  400268:	bf00      	nop
  40026a:	4b0c      	ldr	r3, [pc, #48]	; (40029c <SystemInit+0xac>)
  40026c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40026e:	f003 0308 	and.w	r3, r3, #8
  400272:	2b00      	cmp	r3, #0
  400274:	d0f9      	beq.n	40026a <SystemInit+0x7a>
  {
  }

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
  400276:	4b09      	ldr	r3, [pc, #36]	; (40029c <SystemInit+0xac>)
  400278:	2212      	movs	r2, #18
  40027a:	631a      	str	r2, [r3, #48]	; 0x30
	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  40027c:	bf00      	nop
  40027e:	4b07      	ldr	r3, [pc, #28]	; (40029c <SystemInit+0xac>)
  400280:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400282:	f003 0308 	and.w	r3, r3, #8
  400286:	2b00      	cmp	r3, #0
  400288:	d0f9      	beq.n	40027e <SystemInit+0x8e>
  {
  }

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
  40028a:	4b08      	ldr	r3, [pc, #32]	; (4002ac <SystemInit+0xbc>)
  40028c:	4a08      	ldr	r2, [pc, #32]	; (4002b0 <SystemInit+0xc0>)
  40028e:	601a      	str	r2, [r3, #0]
}
  400290:	bf00      	nop
  400292:	46bd      	mov	sp, r7
  400294:	bc80      	pop	{r7}
  400296:	4770      	bx	lr
  400298:	400e0a00 	.word	0x400e0a00
  40029c:	400e0400 	.word	0x400e0400
  4002a0:	00370809 	.word	0x00370809
  4002a4:	01370809 	.word	0x01370809
  4002a8:	20133f01 	.word	0x20133f01
  4002ac:	20000000 	.word	0x20000000
  4002b0:	07270e00 	.word	0x07270e00
  4002b4:	00000000 	.word	0x00000000

004002b8 <main>:
#define REG_PIOA_ABCDSR2 (*(__IO uint32_t*)0x400E0E74U)
#define REG_PIOD_ABCDSR1 (*(__IO uint32_t*)0x400E1470U)


int main(void)
{
  4002b8:	b590      	push	{r4, r7, lr}
  4002ba:	b0a7      	sub	sp, #156	; 0x9c
  4002bc:	af02      	add	r7, sp, #8
    /* Initialize the SAM system */
    SystemInit();
  4002be:	4b1e      	ldr	r3, [pc, #120]	; (400338 <main+0x80>)
  4002c0:	4798      	blx	r3
	//Set up Crystal and main clock
	//This will occur only on startup, so speed is not a priority.
	//Following Process from datasheet section 29.15 Programming Sequence
	//Write protection starts as 0, so no need to deal with that 
	//Enable crystal oscillator
	REG_CKGR_MOR |= CKGR_MOR_KEY(0x37) | CKGR_MOR_MOSCXTEN;
  4002c2:	4a1e      	ldr	r2, [pc, #120]	; (40033c <main+0x84>)
  4002c4:	4b1d      	ldr	r3, [pc, #116]	; (40033c <main+0x84>)
  4002c6:	681b      	ldr	r3, [r3, #0]
  4002c8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4002cc:	f043 0301 	orr.w	r3, r3, #1
  4002d0:	6013      	str	r3, [r2, #0]
	//Wait for MOSCXTST field in PMC_SR to be set
	while(!(REG_PMC_SR & PMC_SR_MOSCXTS));
  4002d2:	bf00      	nop
  4002d4:	4b1a      	ldr	r3, [pc, #104]	; (400340 <main+0x88>)
  4002d6:	681b      	ldr	r3, [r3, #0]
  4002d8:	f003 0301 	and.w	r3, r3, #1
  4002dc:	2b00      	cmp	r3, #0
  4002de:	d0f9      	beq.n	4002d4 <main+0x1c>
	//Switch the main clock to the external crystal
	REG_CKGR_MOR |= CKGR_MOR_KEY(0x37) | CKGR_MOR_MOSCSEL;
  4002e0:	4a16      	ldr	r2, [pc, #88]	; (40033c <main+0x84>)
  4002e2:	4b16      	ldr	r3, [pc, #88]	; (40033c <main+0x84>)
  4002e4:	681b      	ldr	r3, [r3, #0]
  4002e6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4002ea:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4002ee:	6013      	str	r3, [r2, #0]
	//Wait for MOSCELS bit to be set the PMC_SR register
	while(!(REG_PMC_SR & PMC_SR_MOSCSELS));
  4002f0:	bf00      	nop
  4002f2:	4b13      	ldr	r3, [pc, #76]	; (400340 <main+0x88>)
  4002f4:	681b      	ldr	r3, [r3, #0]
  4002f6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
  4002fa:	2b00      	cmp	r3, #0
  4002fc:	d0f9      	beq.n	4002f2 <main+0x3a>
	//Check the clock frequency
	//Wait for check to be available
	while(!(REG_CKGR_MCFR & CKGR_MCFR_MAINFRDY));
  4002fe:	bf00      	nop
  400300:	4b10      	ldr	r3, [pc, #64]	; (400344 <main+0x8c>)
  400302:	681b      	ldr	r3, [r3, #0]
  400304:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
  400308:	2b00      	cmp	r3, #0
  40030a:	d0f9      	beq.n	400300 <main+0x48>
	The default slow clock is 4 MHz. The crystal in the design
	is 12 MHz. Reading from MAINF gives the number of crystal cycles
	in 16 slow clock cycles. The crystal is three times
	as fast as the slow clock. So, 16*3 = 48.
	*/
	uint32_t MainFrequencyCheckVariable = 0x0u;
  40030c:	2300      	movs	r3, #0
  40030e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
	MainFrequencyCheckVariable = REG_CKGR_MCFR & CKGR_MCFR_MAINF_Msk;
  400312:	4b0c      	ldr	r3, [pc, #48]	; (400344 <main+0x8c>)
  400314:	681b      	ldr	r3, [r3, #0]
  400316:	b29b      	uxth	r3, r3
  400318:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
	if(MainFrequencyCheckVariable<5800)
  40031c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
  400320:	f241 62a7 	movw	r2, #5799	; 0x16a7
  400324:	4293      	cmp	r3, r2
  400326:	d80f      	bhi.n	400348 <main+0x90>
	{
		REG_CKGR_MOR &= ~(CKGR_MOR_MOSCSEL);
  400328:	4a04      	ldr	r2, [pc, #16]	; (40033c <main+0x84>)
  40032a:	4b04      	ldr	r3, [pc, #16]	; (40033c <main+0x84>)
  40032c:	681b      	ldr	r3, [r3, #0]
  40032e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  400332:	6013      	str	r3, [r2, #0]
		return 1;
  400334:	2301      	movs	r3, #1
  400336:	e20a      	b.n	40074e <main+0x496>
  400338:	004001f1 	.word	0x004001f1
  40033c:	400e0420 	.word	0x400e0420
  400340:	400e0468 	.word	0x400e0468
  400344:	400e0424 	.word	0x400e0424
	//but I want a faster clock, so, break out the PLL
	
	//Setup PLL
	//Write the count register for the PLL setup time
	//Set PLL multiplier. multiplication value is this value + 1
	REG_CKGR_PLLAR = CKGR_PLLAR_PLLACOUNT(0x03F) | CKGR_PLLAR_MULA(0x019) | CKGR_PLLAR_DIVA(0x01) | (1<<29);
  400348:	4b8e      	ldr	r3, [pc, #568]	; (400584 <main+0x2cc>)
  40034a:	4a8f      	ldr	r2, [pc, #572]	; (400588 <main+0x2d0>)
  40034c:	601a      	str	r2, [r3, #0]
	//Wait for the LOCKA bit to be set
	while(!(REG_PMC_SR & PMC_SR_LOCKA));
  40034e:	bf00      	nop
  400350:	4b8e      	ldr	r3, [pc, #568]	; (40058c <main+0x2d4>)
  400352:	681b      	ldr	r3, [r3, #0]
  400354:	f003 0302 	and.w	r3, r3, #2
  400358:	2b00      	cmp	r3, #0
  40035a:	d0f9      	beq.n	400350 <main+0x98>
	//Select the PLL as master clock, following datasheet
	REG_PMC_MCKR |= PMC_MCKR_PRES_CLK_1;
  40035c:	4a8c      	ldr	r2, [pc, #560]	; (400590 <main+0x2d8>)
  40035e:	4b8c      	ldr	r3, [pc, #560]	; (400590 <main+0x2d8>)
  400360:	681b      	ldr	r3, [r3, #0]
  400362:	6013      	str	r3, [r2, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  400364:	bf00      	nop
  400366:	4b89      	ldr	r3, [pc, #548]	; (40058c <main+0x2d4>)
  400368:	681b      	ldr	r3, [r3, #0]
  40036a:	f003 0308 	and.w	r3, r3, #8
  40036e:	2b00      	cmp	r3, #0
  400370:	d0f9      	beq.n	400366 <main+0xae>
	REG_PMC_MCKR |= PMC_MCKR_CSS_PLLA_CLK;
  400372:	4a87      	ldr	r2, [pc, #540]	; (400590 <main+0x2d8>)
  400374:	4b86      	ldr	r3, [pc, #536]	; (400590 <main+0x2d8>)
  400376:	681b      	ldr	r3, [r3, #0]
  400378:	f043 0302 	orr.w	r3, r3, #2
  40037c:	6013      	str	r3, [r2, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  40037e:	bf00      	nop
  400380:	4b82      	ldr	r3, [pc, #520]	; (40058c <main+0x2d4>)
  400382:	681b      	ldr	r3, [r3, #0]
  400384:	f003 0308 	and.w	r3, r3, #8
  400388:	2b00      	cmp	r3, #0
  40038a:	d0f9      	beq.n	400380 <main+0xc8>
	//At this point the master clock is the PLL
	//which is (9 + 1)*12 MHz = 120 MHz.
	while(!(REG_CKGR_MCFR & CKGR_MCFR_MAINFRDY));
  40038c:	bf00      	nop
  40038e:	4b81      	ldr	r3, [pc, #516]	; (400594 <main+0x2dc>)
  400390:	681b      	ldr	r3, [r3, #0]
  400392:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
  400396:	2b00      	cmp	r3, #0
  400398:	d0f9      	beq.n	40038e <main+0xd6>
	}
	*/
	
	//Setup PIO
	//Disable PIO write protection
	REG_PIOA_WPMR = AFE_WPMR_WPKEY(0x50494F) | (0<<0);
  40039a:	4b7f      	ldr	r3, [pc, #508]	; (400598 <main+0x2e0>)
  40039c:	4a7f      	ldr	r2, [pc, #508]	; (40059c <main+0x2e4>)
  40039e:	601a      	str	r2, [r3, #0]
	//The encoder inputs are given to peripherals, so they are fine.
	//The hall effect inputs need to be configured.
	//Turn on PIO clock for all ?channels? I guess
	REG_PMC_PCER0 |= PMC_PCER0_PID9 | PMC_PCER0_PID10 | PMC_PCER0_PID11 | PMC_PCER0_PID12 | PMC_PCER0_PID13;
  4003a0:	4a7f      	ldr	r2, [pc, #508]	; (4005a0 <main+0x2e8>)
  4003a2:	4b7f      	ldr	r3, [pc, #508]	; (4005a0 <main+0x2e8>)
  4003a4:	681b      	ldr	r3, [r3, #0]
  4003a6:	f443 5378 	orr.w	r3, r3, #15872	; 0x3e00
  4003aa:	6013      	str	r3, [r2, #0]
	//Set relevant pins to be inputs
	//THESE ARE PLACEHOLDER VALUES.
	//enable PIO control
	REG_PIOA_PER |= PIO_PER_P0 | PIO_PER_P1 | PIO_PER_P2;
  4003ac:	4a7d      	ldr	r2, [pc, #500]	; (4005a4 <main+0x2ec>)
  4003ae:	4b7d      	ldr	r3, [pc, #500]	; (4005a4 <main+0x2ec>)
  4003b0:	681b      	ldr	r3, [r3, #0]
  4003b2:	f043 0307 	orr.w	r3, r3, #7
  4003b6:	6013      	str	r3, [r2, #0]
	//Disable output
	REG_PIOA_ODR |= PIO_ODR_P0 | PIO_ODR_P1 | PIO_ODR_P2;
  4003b8:	4a7b      	ldr	r2, [pc, #492]	; (4005a8 <main+0x2f0>)
  4003ba:	4b7b      	ldr	r3, [pc, #492]	; (4005a8 <main+0x2f0>)
  4003bc:	681b      	ldr	r3, [r3, #0]
  4003be:	f043 0307 	orr.w	r3, r3, #7
  4003c2:	6013      	str	r3, [r2, #0]
	//Disable pullup resistors
	REG_PIOA_PUDR |= PIO_PUDR_P0 | PIO_PUDR_P1 | PIO_PUDR_P2;
  4003c4:	4a79      	ldr	r2, [pc, #484]	; (4005ac <main+0x2f4>)
  4003c6:	4b79      	ldr	r3, [pc, #484]	; (4005ac <main+0x2f4>)
  4003c8:	681b      	ldr	r3, [r3, #0]
  4003ca:	f043 0307 	orr.w	r3, r3, #7
  4003ce:	6013      	str	r3, [r2, #0]
	//Disable pulldown resistors
	REG_PIOA_PPDDR |= PIO_PPDDR_P0 | PIO_PPDDR_P1 | PIO_PPDDR_P2;
  4003d0:	4a77      	ldr	r2, [pc, #476]	; (4005b0 <main+0x2f8>)
  4003d2:	4b77      	ldr	r3, [pc, #476]	; (4005b0 <main+0x2f8>)
  4003d4:	681b      	ldr	r3, [r3, #0]
  4003d6:	f043 0307 	orr.w	r3, r3, #7
  4003da:	6013      	str	r3, [r2, #0]
	

	//Disable PMC write protection
	REG_PMC_WPMR = PMC_WPMR_WPKEY(0x504D43) | (0<<0);
  4003dc:	4b75      	ldr	r3, [pc, #468]	; (4005b4 <main+0x2fc>)
  4003de:	4a76      	ldr	r2, [pc, #472]	; (4005b8 <main+0x300>)
  4003e0:	601a      	str	r2, [r3, #0]
	//Setup the quadrature decoder
	//TIOA0 and TIOB0 are the quadrature signals.
	//TIOB1 is the index signal.
	//This follows AT42706 process in section 5.2.4
	//Configure IO pins to their peripheral functions
	REG_PIOA_PDR |= PIO_PER_P0 | PIO_PER_P1 | PIO_PER_P16;
  4003e2:	4a76      	ldr	r2, [pc, #472]	; (4005bc <main+0x304>)
  4003e4:	4b75      	ldr	r3, [pc, #468]	; (4005bc <main+0x304>)
  4003e6:	681b      	ldr	r3, [r3, #0]
  4003e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4003ec:	f043 0303 	orr.w	r3, r3, #3
  4003f0:	6013      	str	r3, [r2, #0]
	REG_PIOA_ABCDSR1 |=  PIO_ABCDSR_P0 | PIO_ABCDSR_P1 | PIO_ABCDSR_P16;
  4003f2:	4a73      	ldr	r2, [pc, #460]	; (4005c0 <main+0x308>)
  4003f4:	4b72      	ldr	r3, [pc, #456]	; (4005c0 <main+0x308>)
  4003f6:	681b      	ldr	r3, [r3, #0]
  4003f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4003fc:	f043 0303 	orr.w	r3, r3, #3
  400400:	6013      	str	r3, [r2, #0]
	//Enable channel 0 and 1 peripheral clocks
	//CURRENT CODE ENABLES MODULE 0
	REG_PMC_PCER0 |= PMC_PCER0_PID21 | PMC_PCER0_PID22;
  400402:	4a67      	ldr	r2, [pc, #412]	; (4005a0 <main+0x2e8>)
  400404:	4b66      	ldr	r3, [pc, #408]	; (4005a0 <main+0x2e8>)
  400406:	681b      	ldr	r3, [r3, #0]
  400408:	f443 03c0 	orr.w	r3, r3, #6291456	; 0x600000
  40040c:	6013      	str	r3, [r2, #0]
	//Step 3
	REG_TC0_CMR0 &= ~(TC_CMR_WAVE);
  40040e:	4a6d      	ldr	r2, [pc, #436]	; (4005c4 <main+0x30c>)
  400410:	4b6c      	ldr	r3, [pc, #432]	; (4005c4 <main+0x30c>)
  400412:	681b      	ldr	r3, [r3, #0]
  400414:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
  400418:	6013      	str	r3, [r2, #0]
	REG_TC0_CMR1 &= ~(TC_CMR_WAVE);
  40041a:	4a6b      	ldr	r2, [pc, #428]	; (4005c8 <main+0x310>)
  40041c:	4b6a      	ldr	r3, [pc, #424]	; (4005c8 <main+0x310>)
  40041e:	681b      	ldr	r3, [r3, #0]
  400420:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
  400424:	6013      	str	r3, [r2, #0]
	
	REG_TC0_CMR0 |= TC_CMR_TCCLKS_XC0;
  400426:	4a67      	ldr	r2, [pc, #412]	; (4005c4 <main+0x30c>)
  400428:	4b66      	ldr	r3, [pc, #408]	; (4005c4 <main+0x30c>)
  40042a:	681b      	ldr	r3, [r3, #0]
  40042c:	f043 0305 	orr.w	r3, r3, #5
  400430:	6013      	str	r3, [r2, #0]
	REG_TC0_CMR1 |= TC_CMR_TCCLKS_XC0;
  400432:	4a65      	ldr	r2, [pc, #404]	; (4005c8 <main+0x310>)
  400434:	4b64      	ldr	r3, [pc, #400]	; (4005c8 <main+0x310>)
  400436:	681b      	ldr	r3, [r3, #0]
  400438:	f043 0305 	orr.w	r3, r3, #5
  40043c:	6013      	str	r3, [r2, #0]
	
	REG_TC0_CMR0 |= TC_CMR_ETRGEDG_RISING;
  40043e:	4a61      	ldr	r2, [pc, #388]	; (4005c4 <main+0x30c>)
  400440:	4b60      	ldr	r3, [pc, #384]	; (4005c4 <main+0x30c>)
  400442:	681b      	ldr	r3, [r3, #0]
  400444:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400448:	6013      	str	r3, [r2, #0]
	REG_TC0_CMR1 |= TC_CMR_ETRGEDG_RISING;
  40044a:	4a5f      	ldr	r2, [pc, #380]	; (4005c8 <main+0x310>)
  40044c:	4b5e      	ldr	r3, [pc, #376]	; (4005c8 <main+0x310>)
  40044e:	681b      	ldr	r3, [r3, #0]
  400450:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400454:	6013      	str	r3, [r2, #0]
	
	REG_TC0_CMR0 |= TC_CMR_ABETRG;
  400456:	4a5b      	ldr	r2, [pc, #364]	; (4005c4 <main+0x30c>)
  400458:	4b5a      	ldr	r3, [pc, #360]	; (4005c4 <main+0x30c>)
  40045a:	681b      	ldr	r3, [r3, #0]
  40045c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  400460:	6013      	str	r3, [r2, #0]
	REG_TC0_CMR1 |= TC_CMR_ABETRG;
  400462:	4a59      	ldr	r2, [pc, #356]	; (4005c8 <main+0x310>)
  400464:	4b58      	ldr	r3, [pc, #352]	; (4005c8 <main+0x310>)
  400466:	681b      	ldr	r3, [r3, #0]
  400468:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  40046c:	6013      	str	r3, [r2, #0]
	
	//Step 4
	REG_TC0_BMR |= TC_BMR_QDEN | TC_BMR_POSEN | TC_BMR_EDGPHA | TC_BMR_MAXFILT(1);
  40046e:	4a57      	ldr	r2, [pc, #348]	; (4005cc <main+0x314>)
  400470:	4b56      	ldr	r3, [pc, #344]	; (4005cc <main+0x314>)
  400472:	681b      	ldr	r3, [r3, #0]
  400474:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400478:	f443 5398 	orr.w	r3, r3, #4864	; 0x1300
  40047c:	6013      	str	r3, [r2, #0]
	//Step 5. Start TC0 and TC1
	REG_TC0_CCR0 |= TC_CCR_CLKEN;
  40047e:	4a54      	ldr	r2, [pc, #336]	; (4005d0 <main+0x318>)
  400480:	4b53      	ldr	r3, [pc, #332]	; (4005d0 <main+0x318>)
  400482:	681b      	ldr	r3, [r3, #0]
  400484:	f043 0301 	orr.w	r3, r3, #1
  400488:	6013      	str	r3, [r2, #0]
	REG_TC0_CCR1 |= TC_CCR_CLKEN;
  40048a:	4a52      	ldr	r2, [pc, #328]	; (4005d4 <main+0x31c>)
  40048c:	4b51      	ldr	r3, [pc, #324]	; (4005d4 <main+0x31c>)
  40048e:	681b      	ldr	r3, [r3, #0]
  400490:	f043 0301 	orr.w	r3, r3, #1
  400494:	6013      	str	r3, [r2, #0]
	
	
	//Set up the ADC
	//Give pins to ADC rather than peripheral
	//Disable write protection
	REG_AFEC0_WPMR = AFE_WPMR_WPEN | AFE_WPMR_WPKEY(0x414443);
  400496:	4b50      	ldr	r3, [pc, #320]	; (4005d8 <main+0x320>)
  400498:	4a50      	ldr	r2, [pc, #320]	; (4005dc <main+0x324>)
  40049a:	601a      	str	r2, [r3, #0]
	//Set the ADC so it will tell what channel a reading is from.
	REG_AFEC0_EMR |= AFE_EMR_TAG;
  40049c:	4a50      	ldr	r2, [pc, #320]	; (4005e0 <main+0x328>)
  40049e:	4b50      	ldr	r3, [pc, #320]	; (4005e0 <main+0x328>)
  4004a0:	681b      	ldr	r3, [r3, #0]
  4004a2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4004a6:	6013      	str	r3, [r2, #0]
	REG_AFEC1_EMR |= AFE_EMR_TAG;
  4004a8:	4a4e      	ldr	r2, [pc, #312]	; (4005e4 <main+0x32c>)
  4004aa:	4b4e      	ldr	r3, [pc, #312]	; (4005e4 <main+0x32c>)
  4004ac:	681b      	ldr	r3, [r3, #0]
  4004ae:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4004b2:	6013      	str	r3, [r2, #0]
	//Looks to be a bit weird. Need to consult my schematic. Woops. Forgot to connect those. Yay for V2!
	//NEED TO FIGURE OUT WHICH PINS TO USE AND HOW MANY PHASES TO MEASURE. V1 ONLY MEASURES 2 PHASES
	REG_AFEC0_CHER |= AFE_CHER_CH0;//For Channel 0
  4004b4:	4a4c      	ldr	r2, [pc, #304]	; (4005e8 <main+0x330>)
  4004b6:	4b4c      	ldr	r3, [pc, #304]	; (4005e8 <main+0x330>)
  4004b8:	681b      	ldr	r3, [r3, #0]
  4004ba:	f043 0301 	orr.w	r3, r3, #1
  4004be:	6013      	str	r3, [r2, #0]
	REG_AFEC1_CHER |= AFE_CHER_CH1;//For Channel 1
  4004c0:	4a4a      	ldr	r2, [pc, #296]	; (4005ec <main+0x334>)
  4004c2:	4b4a      	ldr	r3, [pc, #296]	; (4005ec <main+0x334>)
  4004c4:	681b      	ldr	r3, [r3, #0]
  4004c6:	f043 0302 	orr.w	r3, r3, #2
  4004ca:	6013      	str	r3, [r2, #0]
	//Enable ADC clock (PMC stuff)
	REG_PMC_PCER0 |= PMC_PCER0_PID30 | PMC_PCER0_PID31;
  4004cc:	4a34      	ldr	r2, [pc, #208]	; (4005a0 <main+0x2e8>)
  4004ce:	4b34      	ldr	r3, [pc, #208]	; (4005a0 <main+0x2e8>)
  4004d0:	681b      	ldr	r3, [r3, #0]
  4004d2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
  4004d6:	6013      	str	r3, [r2, #0]
	//Setup various settings. AFEC_MR starts as 0, so don't need to change anything that should be 0.
	REG_AFEC0_MR |= AFE_MR_TRANSFER(2) | AFE_MR_STARTUP_SUT512;
  4004d8:	4a45      	ldr	r2, [pc, #276]	; (4005f0 <main+0x338>)
  4004da:	4b45      	ldr	r3, [pc, #276]	; (4005f0 <main+0x338>)
  4004dc:	681b      	ldr	r3, [r3, #0]
  4004de:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  4004e2:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
  4004e6:	6013      	str	r3, [r2, #0]
	
	
	
	//Set up SPI
	//Enable peripheral clock
	REG_PMC_PCER0 |= PMC_PCER0_PID19;
  4004e8:	4a2d      	ldr	r2, [pc, #180]	; (4005a0 <main+0x2e8>)
  4004ea:	4b2d      	ldr	r3, [pc, #180]	; (4005a0 <main+0x2e8>)
  4004ec:	681b      	ldr	r3, [r3, #0]
  4004ee:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
  4004f2:	6013      	str	r3, [r2, #0]
	//Need to connect the SS line from the master (screw terminal in this case) to NPCS0 pin
	//Set to slave mode
	REG_SPI_MR &= ~(SPI_MR_MSTR);
  4004f4:	4a3f      	ldr	r2, [pc, #252]	; (4005f4 <main+0x33c>)
  4004f6:	4b3f      	ldr	r3, [pc, #252]	; (4005f4 <main+0x33c>)
  4004f8:	681b      	ldr	r3, [r3, #0]
  4004fa:	f023 0301 	bic.w	r3, r3, #1
  4004fe:	6013      	str	r3, [r2, #0]
	//Just use the default polarity and phase settings since I'm coding both master and slave.
	//Enable SPI
	REG_SPI_CR |= SPI_CR_SPIEN;
  400500:	4a3d      	ldr	r2, [pc, #244]	; (4005f8 <main+0x340>)
  400502:	4b3d      	ldr	r3, [pc, #244]	; (4005f8 <main+0x340>)
  400504:	681b      	ldr	r3, [r3, #0]
  400506:	f043 0301 	orr.w	r3, r3, #1
  40050a:	6013      	str	r3, [r2, #0]
	//Set for 16 bit words
	REG_SPI_CSR |= SPI_CSR_BITS_16_BIT;
  40050c:	4a3b      	ldr	r2, [pc, #236]	; (4005fc <main+0x344>)
  40050e:	4b3b      	ldr	r3, [pc, #236]	; (4005fc <main+0x344>)
  400510:	681b      	ldr	r3, [r3, #0]
  400512:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400516:	6013      	str	r3, [r2, #0]
	//Should be good to go
	
	
	
	uint32_t RotorPosition = 0;
  400518:	2300      	movs	r3, #0
  40051a:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	uint32_t MotorPosition = 0;
  40051e:	2300      	movs	r3, #0
  400520:	67fb      	str	r3, [r7, #124]	; 0x7c
	//uint32_t MotorDirection = 0;
	float CommandedTorque = 0;
  400522:	f04f 0300 	mov.w	r3, #0
  400526:	67bb      	str	r3, [r7, #120]	; 0x78
	uint32_t CommandedPosition = 0;
  400528:	2300      	movs	r3, #0
  40052a:	677b      	str	r3, [r7, #116]	; 0x74
	uint32_t CurrentA = 0;
  40052c:	2300      	movs	r3, #0
  40052e:	673b      	str	r3, [r7, #112]	; 0x70
	uint32_t CurrentB = 0;
  400530:	2300      	movs	r3, #0
  400532:	66fb      	str	r3, [r7, #108]	; 0x6c
	float ClarkCurrentMeasure[2];
	float ParkCurrentMeasure[2];
	float KpTorque = 2.4;
  400534:	4b32      	ldr	r3, [pc, #200]	; (400600 <main+0x348>)
  400536:	66bb      	str	r3, [r7, #104]	; 0x68
	float MotorTorqueConstant = 1.8;
  400538:	4b32      	ldr	r3, [pc, #200]	; (400604 <main+0x34c>)
  40053a:	667b      	str	r3, [r7, #100]	; 0x64
	float ClarkVoltageCommand[2];
	float ParkCurrentCommand[2] = {0,0};
  40053c:	f04f 0300 	mov.w	r3, #0
  400540:	62bb      	str	r3, [r7, #40]	; 0x28
  400542:	f04f 0300 	mov.w	r3, #0
  400546:	62fb      	str	r3, [r7, #44]	; 0x2c
	uint32_t PositionError = 0;
  400548:	2300      	movs	r3, #0
  40054a:	663b      	str	r3, [r7, #96]	; 0x60
	float ParkVoltageReference[2] = {0,0};
  40054c:	f04f 0300 	mov.w	r3, #0
  400550:	623b      	str	r3, [r7, #32]
  400552:	f04f 0300 	mov.w	r3, #0
  400556:	627b      	str	r3, [r7, #36]	; 0x24
	float KParkFlux = 0.7;
  400558:	4b2b      	ldr	r3, [pc, #172]	; (400608 <main+0x350>)
  40055a:	65fb      	str	r3, [r7, #92]	; 0x5c
	float KParkTorque = 1.3;
  40055c:	4b2b      	ldr	r3, [pc, #172]	; (40060c <main+0x354>)
  40055e:	65bb      	str	r3, [r7, #88]	; 0x58
	float ParkCurrentError[2] = {0,0};
  400560:	f04f 0300 	mov.w	r3, #0
  400564:	61bb      	str	r3, [r7, #24]
  400566:	f04f 0300 	mov.w	r3, #0
  40056a:	61fb      	str	r3, [r7, #28]
	uint32_t SVPWMOutputValues[4];
	uint32_t HasBeenIndex = 0;
  40056c:	2300      	movs	r3, #0
  40056e:	657b      	str	r3, [r7, #84]	; 0x54
	uint32_t HallA = 0;
  400570:	2300      	movs	r3, #0
  400572:	653b      	str	r3, [r7, #80]	; 0x50
	uint32_t HallB = 0;
  400574:	2300      	movs	r3, #0
  400576:	64fb      	str	r3, [r7, #76]	; 0x4c
	uint32_t HallC = 0;
  400578:	2300      	movs	r3, #0
  40057a:	64bb      	str	r3, [r7, #72]	; 0x48
	
	
	//Construct arrays of sine and cosine values. Memory heavy (like a quarter of the RAM), but should increase runtime speed.
	static float SinArrayVar[ENCODERRESOLUTION];
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  40057c:	2300      	movs	r3, #0
  40057e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  400582:	e072      	b.n	40066a <main+0x3b2>
  400584:	400e0428 	.word	0x400e0428
  400588:	20193f01 	.word	0x20193f01
  40058c:	400e0468 	.word	0x400e0468
  400590:	400e0430 	.word	0x400e0430
  400594:	400e0424 	.word	0x400e0424
  400598:	400e0ee4 	.word	0x400e0ee4
  40059c:	50494f00 	.word	0x50494f00
  4005a0:	400e0410 	.word	0x400e0410
  4005a4:	400e0e00 	.word	0x400e0e00
  4005a8:	400e0e14 	.word	0x400e0e14
  4005ac:	400e0e60 	.word	0x400e0e60
  4005b0:	400e0e90 	.word	0x400e0e90
  4005b4:	400e04e4 	.word	0x400e04e4
  4005b8:	504d4300 	.word	0x504d4300
  4005bc:	400e0e04 	.word	0x400e0e04
  4005c0:	400e0e70 	.word	0x400e0e70
  4005c4:	40090004 	.word	0x40090004
  4005c8:	40090044 	.word	0x40090044
  4005cc:	400900c4 	.word	0x400900c4
  4005d0:	40090000 	.word	0x40090000
  4005d4:	40090040 	.word	0x40090040
  4005d8:	400b00e4 	.word	0x400b00e4
  4005dc:	41444301 	.word	0x41444301
  4005e0:	400b0008 	.word	0x400b0008
  4005e4:	400b4008 	.word	0x400b4008
  4005e8:	400b0014 	.word	0x400b0014
  4005ec:	400b4014 	.word	0x400b4014
  4005f0:	400b0004 	.word	0x400b0004
  4005f4:	40088004 	.word	0x40088004
  4005f8:	40088000 	.word	0x40088000
  4005fc:	40088030 	.word	0x40088030
  400600:	4019999a 	.word	0x4019999a
  400604:	3fe66666 	.word	0x3fe66666
  400608:	3f333333 	.word	0x3f333333
  40060c:	3fa66666 	.word	0x3fa66666
		SinArrayVar[i] = sin((float)i/2000.*6.283185);
  400610:	4b53      	ldr	r3, [pc, #332]	; (400760 <main+0x4a8>)
  400612:	f8d7 008c 	ldr.w	r0, [r7, #140]	; 0x8c
  400616:	4798      	blx	r3
  400618:	4602      	mov	r2, r0
  40061a:	4b52      	ldr	r3, [pc, #328]	; (400764 <main+0x4ac>)
  40061c:	4610      	mov	r0, r2
  40061e:	4798      	blx	r3
  400620:	4c51      	ldr	r4, [pc, #324]	; (400768 <main+0x4b0>)
  400622:	f04f 0200 	mov.w	r2, #0
  400626:	4b51      	ldr	r3, [pc, #324]	; (40076c <main+0x4b4>)
  400628:	47a0      	blx	r4
  40062a:	4603      	mov	r3, r0
  40062c:	460c      	mov	r4, r1
  40062e:	4618      	mov	r0, r3
  400630:	4621      	mov	r1, r4
  400632:	4c4f      	ldr	r4, [pc, #316]	; (400770 <main+0x4b8>)
  400634:	a348      	add	r3, pc, #288	; (adr r3, 400758 <main+0x4a0>)
  400636:	e9d3 2300 	ldrd	r2, r3, [r3]
  40063a:	47a0      	blx	r4
  40063c:	4603      	mov	r3, r0
  40063e:	460c      	mov	r4, r1
  400640:	4618      	mov	r0, r3
  400642:	4621      	mov	r1, r4
  400644:	4b4b      	ldr	r3, [pc, #300]	; (400774 <main+0x4bc>)
  400646:	4798      	blx	r3
  400648:	460a      	mov	r2, r1
  40064a:	4601      	mov	r1, r0
  40064c:	4b4a      	ldr	r3, [pc, #296]	; (400778 <main+0x4c0>)
  40064e:	4608      	mov	r0, r1
  400650:	4611      	mov	r1, r2
  400652:	4798      	blx	r3
  400654:	4601      	mov	r1, r0
  400656:	4a49      	ldr	r2, [pc, #292]	; (40077c <main+0x4c4>)
  400658:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
  40065c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  400660:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
  400664:	3301      	adds	r3, #1
  400666:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  40066a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
  40066e:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
  400672:	d3cd      	bcc.n	400610 <main+0x358>
	}
	static float CosArrayVar[ENCODERRESOLUTION];
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  400674:	2300      	movs	r3, #0
  400676:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  40067a:	e02c      	b.n	4006d6 <main+0x41e>
		CosArrayVar[i] = cos((float)i/2000.*6.283185);
  40067c:	4b38      	ldr	r3, [pc, #224]	; (400760 <main+0x4a8>)
  40067e:	f8d7 0088 	ldr.w	r0, [r7, #136]	; 0x88
  400682:	4798      	blx	r3
  400684:	4602      	mov	r2, r0
  400686:	4b37      	ldr	r3, [pc, #220]	; (400764 <main+0x4ac>)
  400688:	4610      	mov	r0, r2
  40068a:	4798      	blx	r3
  40068c:	4c36      	ldr	r4, [pc, #216]	; (400768 <main+0x4b0>)
  40068e:	f04f 0200 	mov.w	r2, #0
  400692:	4b36      	ldr	r3, [pc, #216]	; (40076c <main+0x4b4>)
  400694:	47a0      	blx	r4
  400696:	4603      	mov	r3, r0
  400698:	460c      	mov	r4, r1
  40069a:	4618      	mov	r0, r3
  40069c:	4621      	mov	r1, r4
  40069e:	4c34      	ldr	r4, [pc, #208]	; (400770 <main+0x4b8>)
  4006a0:	a32d      	add	r3, pc, #180	; (adr r3, 400758 <main+0x4a0>)
  4006a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4006a6:	47a0      	blx	r4
  4006a8:	4603      	mov	r3, r0
  4006aa:	460c      	mov	r4, r1
  4006ac:	4618      	mov	r0, r3
  4006ae:	4621      	mov	r1, r4
  4006b0:	4b33      	ldr	r3, [pc, #204]	; (400780 <main+0x4c8>)
  4006b2:	4798      	blx	r3
  4006b4:	460a      	mov	r2, r1
  4006b6:	4601      	mov	r1, r0
  4006b8:	4b2f      	ldr	r3, [pc, #188]	; (400778 <main+0x4c0>)
  4006ba:	4608      	mov	r0, r1
  4006bc:	4611      	mov	r1, r2
  4006be:	4798      	blx	r3
  4006c0:	4601      	mov	r1, r0
  4006c2:	4a30      	ldr	r2, [pc, #192]	; (400784 <main+0x4cc>)
  4006c4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
  4006c8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(uint32_t i = 0; i < ENCODERRESOLUTION; i++){
  4006cc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
  4006d0:	3301      	adds	r3, #1
  4006d2:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  4006d6:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
  4006da:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
  4006de:	d3cd      	bcc.n	40067c <main+0x3c4>
	//The motor driver needs to have its floating caps charged.
	//So, the code will hold the bottom FETs on for a couple seconds
	//to ensure this happens. 
	//After this, the control will all be via PWM, so they shouldn't discharge
	//Turn on lower FETs and turn off upper FETs
	REG_PIOD_SODR = (1<<HALLALOWER) | (1<<HALLBLOWER) | (1<<HALLCLOWER);
  4006e0:	4b29      	ldr	r3, [pc, #164]	; (400788 <main+0x4d0>)
  4006e2:	f44f 02e0 	mov.w	r2, #7340032	; 0x700000
  4006e6:	601a      	str	r2, [r3, #0]
	REG_PIOD_CODR = (1<<HALLAUPPER) | (1<<HALLBUPPER) | (1<<HALLCUPPER);
  4006e8:	4b28      	ldr	r3, [pc, #160]	; (40078c <main+0x4d4>)
  4006ea:	f04f 62e0 	mov.w	r2, #117440512	; 0x7000000
  4006ee:	601a      	str	r2, [r3, #0]
	//Busy wait loop. Yes its terrible. Don't care.
	//Bootup time is not a concern for me.
	for (volatile uint32_t i = 0; i < 4500;i++)
  4006f0:	2300      	movs	r3, #0
  4006f2:	607b      	str	r3, [r7, #4]
  4006f4:	e002      	b.n	4006fc <main+0x444>
  4006f6:	687b      	ldr	r3, [r7, #4]
  4006f8:	3301      	adds	r3, #1
  4006fa:	607b      	str	r3, [r7, #4]
  4006fc:	687b      	ldr	r3, [r7, #4]
  4006fe:	f241 1293 	movw	r2, #4499	; 0x1193
  400702:	4293      	cmp	r3, r2
  400704:	d9f7      	bls.n	4006f6 <main+0x43e>
	{
	}
	//Turn off all FETs
	REG_PIOD_CODR = (1<<HALLALOWER) | (1<<HALLBLOWER) | (1<<HALLCLOWER);
  400706:	4b21      	ldr	r3, [pc, #132]	; (40078c <main+0x4d4>)
  400708:	f44f 02e0 	mov.w	r2, #7340032	; 0x700000
  40070c:	601a      	str	r2, [r3, #0]
	REG_PIOD_CODR = (1<<HALLAUPPER) | (1<<HALLBUPPER) | (1<<HALLCUPPER);	
  40070e:	4b1f      	ldr	r3, [pc, #124]	; (40078c <main+0x4d4>)
  400710:	f04f 62e0 	mov.w	r2, #117440512	; 0x7000000
  400714:	601a      	str	r2, [r3, #0]
	
	PWMSetup();
  400716:	4b1e      	ldr	r3, [pc, #120]	; (400790 <main+0x4d8>)
  400718:	4798      	blx	r3
		REG_PIOA_ODR |= PIO_ODR_P7 | PIO_ODR_P8;
		*/
		while (1)//!HasBeenIndex)
		{
			//Measure the Hall sensor outputs
			HallA = (REG_PIOD_PDSR & PIO_PDSR_P30);
  40071a:	4b1e      	ldr	r3, [pc, #120]	; (400794 <main+0x4dc>)
  40071c:	681b      	ldr	r3, [r3, #0]
  40071e:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
  400722:	653b      	str	r3, [r7, #80]	; 0x50
			HallB = (REG_PIOA_PDSR & PIO_PDSR_P7);
  400724:	4b1c      	ldr	r3, [pc, #112]	; (400798 <main+0x4e0>)
  400726:	681b      	ldr	r3, [r3, #0]
  400728:	f003 0380 	and.w	r3, r3, #128	; 0x80
  40072c:	64fb      	str	r3, [r7, #76]	; 0x4c
			HallC = (REG_PIOA_PDSR & PIO_PDSR_P8);
  40072e:	4b1a      	ldr	r3, [pc, #104]	; (400798 <main+0x4e0>)
  400730:	681b      	ldr	r3, [r3, #0]
  400732:	f403 7380 	and.w	r3, r3, #256	; 0x100
  400736:	64bb      	str	r3, [r7, #72]	; 0x48

			//Energize the windings in accordance with simple six step commutation
			//if(REG_PIOD_ODSR & PIO_ODSR_P24){
			
			
			SixStepCommutation(80,6,0,HallA,HallB,HallC);
  400738:	6cbb      	ldr	r3, [r7, #72]	; 0x48
  40073a:	9301      	str	r3, [sp, #4]
  40073c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40073e:	9300      	str	r3, [sp, #0]
  400740:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  400742:	2200      	movs	r2, #0
  400744:	2106      	movs	r1, #6
  400746:	2050      	movs	r0, #80	; 0x50
  400748:	4c14      	ldr	r4, [pc, #80]	; (40079c <main+0x4e4>)
  40074a:	47a0      	blx	r4
			HallA = (REG_PIOD_PDSR & PIO_PDSR_P30);
  40074c:	e7e5      	b.n	40071a <main+0x462>
		//This gives back the PWM compare values and invert status for each switch. 
		//[0]-[5] are the compare values. [6]-[11] are the invert statuses.
		SVPWMBase(SVPWMOutputValues, ClarkVoltageCommand[0], ClarkVoltageCommand[1], PWMMAXVALUE);
		
    }
}
  40074e:	4618      	mov	r0, r3
  400750:	3794      	adds	r7, #148	; 0x94
  400752:	46bd      	mov	sp, r7
  400754:	bd90      	pop	{r4, r7, pc}
  400756:	bf00      	nop
  400758:	3fa6defc 	.word	0x3fa6defc
  40075c:	401921fb 	.word	0x401921fb
  400760:	00402ba5 	.word	0x00402ba5
  400764:	0040236d 	.word	0x0040236d
  400768:	00402669 	.word	0x00402669
  40076c:	409f4000 	.word	0x409f4000
  400770:	00402415 	.word	0x00402415
  400774:	00400d61 	.word	0x00400d61
  400778:	00402999 	.word	0x00402999
  40077c:	20000450 	.word	0x20000450
  400780:	00400ccd 	.word	0x00400ccd
  400784:	20002390 	.word	0x20002390
  400788:	400e1430 	.word	0x400e1430
  40078c:	400e1434 	.word	0x400e1434
  400790:	004007a1 	.word	0x004007a1
  400794:	400e143c 	.word	0x400e143c
  400798:	400e0e3c 	.word	0x400e0e3c
  40079c:	00400855 	.word	0x00400855

004007a0 <PWMSetup>:
	REG_PWM_ENA |= PWM_ENA_CHID0;
	//REG_PWM_SCUC |= PWM_SCUC_UPDULOCK;
	
}

void PWMSetup(){
  4007a0:	b480      	push	{r7}
  4007a2:	af00      	add	r7, sp, #0
	
	
	//Set up PWM
	//Need to do PIO stuff for PWM enabling and activate the peripheral clock
	//Give the relevant pins to the PWM peripheral. (PIO stuff)
	REG_PIOD_ABCDSR1 |= (0<<20) | (0<<21) | (0<<22) | (0<<24) | (0<<25) | (0<<26);
  4007a4:	4a1e      	ldr	r2, [pc, #120]	; (400820 <PWMSetup+0x80>)
  4007a6:	4b1e      	ldr	r3, [pc, #120]	; (400820 <PWMSetup+0x80>)
  4007a8:	681b      	ldr	r3, [r3, #0]
  4007aa:	6013      	str	r3, [r2, #0]
	REG_PIOD_PDR = 0xFFFFFFFF;
  4007ac:	4b1d      	ldr	r3, [pc, #116]	; (400824 <PWMSetup+0x84>)
  4007ae:	f04f 32ff 	mov.w	r2, #4294967295
  4007b2:	601a      	str	r2, [r3, #0]
	//Active the PWM clocks (PMC stuff)
	REG_PMC_PCER1 |= PMC_PCER1_PID36;
  4007b4:	4a1c      	ldr	r2, [pc, #112]	; (400828 <PWMSetup+0x88>)
  4007b6:	4b1c      	ldr	r3, [pc, #112]	; (400828 <PWMSetup+0x88>)
  4007b8:	681b      	ldr	r3, [r3, #0]
  4007ba:	f043 0310 	orr.w	r3, r3, #16
  4007be:	6013      	str	r3, [r2, #0]
	REG_PMC_PCER0 |= PMC_PCER0_PID21 | PMC_PCER0_PID22 | PMC_PCER0_PID23;
  4007c0:	4a1a      	ldr	r2, [pc, #104]	; (40082c <PWMSetup+0x8c>)
  4007c2:	4b1a      	ldr	r3, [pc, #104]	; (40082c <PWMSetup+0x8c>)
  4007c4:	681b      	ldr	r3, [r3, #0]
  4007c6:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
  4007ca:	6013      	str	r3, [r2, #0]
	
	//Following steps in the datasheet 39.6.5.1
	//Disable write protection of PWM registers
	REG_PWM_WPCR = PWM_WPCR_WPKEY(0x50574D) | PWM_WPCR_WPCMD(0x0U);
  4007cc:	4b18      	ldr	r3, [pc, #96]	; (400830 <PWMSetup+0x90>)
  4007ce:	4a19      	ldr	r2, [pc, #100]	; (400834 <PWMSetup+0x94>)
  4007d0:	601a      	str	r2, [r3, #0]
	//Select the clock 
	//REG_PWM_CLK = PWM_CLK_PREA(4) | PWM_CLK_DIVA(1);
	//Also set the alignment, polarity, deadtime, update type, event selection
	//Set for no deadtime, the FET driver will take care of that.
	//Register starts at zero, so CPOL bit doesn't need to change. CES also should be 0.
	REG_PWM_CMR0 |= PWM_CMR_CPRE_MCK | PWM_CMR_CALG;
  4007d2:	4a19      	ldr	r2, [pc, #100]	; (400838 <PWMSetup+0x98>)
  4007d4:	4b18      	ldr	r3, [pc, #96]	; (400838 <PWMSetup+0x98>)
  4007d6:	681b      	ldr	r3, [r3, #0]
  4007d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  4007dc:	6013      	str	r3, [r2, #0]
	
	//Set period of PWM
	//At 24 V, 4800 give me a resolution of 5 mV
	//I am going to assert this is enough
	REG_PWM_CPRD0 = 4800;
  4007de:	4b17      	ldr	r3, [pc, #92]	; (40083c <PWMSetup+0x9c>)
  4007e0:	f44f 5296 	mov.w	r2, #4800	; 0x12c0
  4007e4:	601a      	str	r2, [r3, #0]
	
	
	//Init the duty cycle at 0
	REG_PWM_CDTY0 = 0;
  4007e6:	4b16      	ldr	r3, [pc, #88]	; (400840 <PWMSetup+0xa0>)
  4007e8:	2200      	movs	r2, #0
  4007ea:	601a      	str	r2, [r3, #0]
	REG_PWM_CDTY1 = 0;
  4007ec:	4b15      	ldr	r3, [pc, #84]	; (400844 <PWMSetup+0xa4>)
  4007ee:	2200      	movs	r2, #0
  4007f0:	601a      	str	r2, [r3, #0]
	REG_PWM_CDTY2 = 0;
  4007f2:	4b15      	ldr	r3, [pc, #84]	; (400848 <PWMSetup+0xa8>)
  4007f4:	2200      	movs	r2, #0
  4007f6:	601a      	str	r2, [r3, #0]
	
	//From 39.6.2.9 for synchronous channels
	REG_PWM_SCM = (PWM_SCM_UPDM_MODE0);
  4007f8:	4b14      	ldr	r3, [pc, #80]	; (40084c <PWMSetup+0xac>)
  4007fa:	2200      	movs	r2, #0
  4007fc:	601a      	str	r2, [r3, #0]
	REG_PWM_SCM |= PWM_SCM_SYNC0 | PWM_SCM_SYNC1 | PWM_SCM_SYNC2;
  4007fe:	4a13      	ldr	r2, [pc, #76]	; (40084c <PWMSetup+0xac>)
  400800:	4b12      	ldr	r3, [pc, #72]	; (40084c <PWMSetup+0xac>)
  400802:	681b      	ldr	r3, [r3, #0]
  400804:	f043 0307 	orr.w	r3, r3, #7
  400808:	6013      	str	r3, [r2, #0]
	//Don't need to change PWM_SCUP at all
	
	
	REG_PWM_ENA |= PWM_ENA_CHID0;
  40080a:	4a11      	ldr	r2, [pc, #68]	; (400850 <PWMSetup+0xb0>)
  40080c:	4b10      	ldr	r3, [pc, #64]	; (400850 <PWMSetup+0xb0>)
  40080e:	681b      	ldr	r3, [r3, #0]
  400810:	f043 0301 	orr.w	r3, r3, #1
  400814:	6013      	str	r3, [r2, #0]
	
	
}
  400816:	bf00      	nop
  400818:	46bd      	mov	sp, r7
  40081a:	bc80      	pop	{r7}
  40081c:	4770      	bx	lr
  40081e:	bf00      	nop
  400820:	400e1470 	.word	0x400e1470
  400824:	400e1404 	.word	0x400e1404
  400828:	400e0500 	.word	0x400e0500
  40082c:	400e0410 	.word	0x400e0410
  400830:	400000e4 	.word	0x400000e4
  400834:	50574d00 	.word	0x50574d00
  400838:	40000200 	.word	0x40000200
  40083c:	4000020c 	.word	0x4000020c
  400840:	40000204 	.word	0x40000204
  400844:	40000224 	.word	0x40000224
  400848:	40000244 	.word	0x40000244
  40084c:	40000020 	.word	0x40000020
  400850:	40000004 	.word	0x40000004

00400854 <SixStepCommutation>:
#define REG_PIOA_ABCDSR1 (*(__IO uint32_t*)0x400E0E70U)
#define REG_PIOA_ABCDSR2 (*(__IO uint32_t*)0x400E0E74U)
#define REG_PIOD_ABCDSR1 (*(__IO uint32_t*)0x400E1470U)

void SixStepCommutation(uint32_t OnMax, uint32_t OffMax, uint32_t Direction, uint32_t HallA, uint32_t HallB, uint32_t HallC)
{
  400854:	b480      	push	{r7}
  400856:	b087      	sub	sp, #28
  400858:	af00      	add	r7, sp, #0
  40085a:	60f8      	str	r0, [r7, #12]
  40085c:	60b9      	str	r1, [r7, #8]
  40085e:	607a      	str	r2, [r7, #4]
  400860:	603b      	str	r3, [r7, #0]
	//When non-inverted (CPOL=0), LOW OUTPUT has the defined duty cycle, and HIGH OUTPUT has 1-duty cycle
	//When inverted (CPOL=1), LOW OUTPUT has 1-duty cycle, and HIGH OUTPUT has the defined duty cycle
	//What this means for this function is that the pins controlling the (-) output should be non-inverted
	//and the pins controlling the (+) output should be inverted
	
	REG_PIOD_OER = 0xFFFFFFFF;
  400862:	4b99      	ldr	r3, [pc, #612]	; (400ac8 <SixStepCommutation+0x274>)
  400864:	f04f 32ff 	mov.w	r2, #4294967295
  400868:	601a      	str	r2, [r3, #0]
	//pick which outputs to turn on
	//Direction == 0  --> Clockwise
	//Direction == 1  --> AntiClockwise
	if (Direction <= 2)
  40086a:	687b      	ldr	r3, [r7, #4]
  40086c:	2b02      	cmp	r3, #2
  40086e:	f200 81e2 	bhi.w	400c36 <SixStepCommutation+0x3e2>
	{
		
		if ((HallA == 0) && (HallB == 0) && (HallC > 0))//001
  400872:	683b      	ldr	r3, [r7, #0]
  400874:	2b00      	cmp	r3, #0
  400876:	d148      	bne.n	40090a <SixStepCommutation+0xb6>
  400878:	6a3b      	ldr	r3, [r7, #32]
  40087a:	2b00      	cmp	r3, #0
  40087c:	d145      	bne.n	40090a <SixStepCommutation+0xb6>
  40087e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400880:	2b00      	cmp	r3, #0
  400882:	d042      	beq.n	40090a <SixStepCommutation+0xb6>
		{
			//This register controls which pins are controlled by the PWM.
			//In this case, we want Cupper, Clower, and Blower, to be controlled by the PWM.
			//The rest are GPIO
			REG_PIOD_ABCDSR1 |= (1<<V_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400884:	4a91      	ldr	r2, [pc, #580]	; (400acc <SixStepCommutation+0x278>)
  400886:	4b91      	ldr	r3, [pc, #580]	; (400acc <SixStepCommutation+0x278>)
  400888:	681b      	ldr	r3, [r3, #0]
  40088a:	f043 63c8 	orr.w	r3, r3, #104857600	; 0x6400000
  40088e:	6013      	str	r3, [r2, #0]
			REG_PIOD_PER |= (1<<V_UPPER_OUTPUT) | (1<<U_UPPER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400890:	4a8f      	ldr	r2, [pc, #572]	; (400ad0 <SixStepCommutation+0x27c>)
  400892:	4b8f      	ldr	r3, [pc, #572]	; (400ad0 <SixStepCommutation+0x27c>)
  400894:	681b      	ldr	r3, [r3, #0]
  400896:	f043 7398 	orr.w	r3, r3, #19922944	; 0x1300000
  40089a:	6013      	str	r3, [r2, #0]
			REG_PIOD_PDR |= (1<<W_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<V_LOWER_OUTPUT);
  40089c:	4a8d      	ldr	r2, [pc, #564]	; (400ad4 <SixStepCommutation+0x280>)
  40089e:	4b8d      	ldr	r3, [pc, #564]	; (400ad4 <SixStepCommutation+0x280>)
  4008a0:	681b      	ldr	r3, [r3, #0]
  4008a2:	f043 63c8 	orr.w	r3, r3, #104857600	; 0x6400000
  4008a6:	6013      	str	r3, [r2, #0]
			
			//Disable PWM because polarity needs to be adjusted
			REG_PWM_DIS |= PWM_DIS_CHID0;
  4008a8:	4a8b      	ldr	r2, [pc, #556]	; (400ad8 <SixStepCommutation+0x284>)
  4008aa:	4b8b      	ldr	r3, [pc, #556]	; (400ad8 <SixStepCommutation+0x284>)
  4008ac:	681b      	ldr	r3, [r3, #0]
  4008ae:	f043 0301 	orr.w	r3, r3, #1
  4008b2:	6013      	str	r3, [r2, #0]
			//Set needed polarities. Setting all of them so I don't need to keep track.
			REG_PWM_CMR0 &= ~(PWM_CMR_CPOL);//U Output non-inverted
  4008b4:	4a89      	ldr	r2, [pc, #548]	; (400adc <SixStepCommutation+0x288>)
  4008b6:	4b89      	ldr	r3, [pc, #548]	; (400adc <SixStepCommutation+0x288>)
  4008b8:	681b      	ldr	r3, [r3, #0]
  4008ba:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  4008be:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR1 &= ~(PWM_CMR_CPOL);//V Output non-inverted
  4008c0:	4a87      	ldr	r2, [pc, #540]	; (400ae0 <SixStepCommutation+0x28c>)
  4008c2:	4b87      	ldr	r3, [pc, #540]	; (400ae0 <SixStepCommutation+0x28c>)
  4008c4:	681b      	ldr	r3, [r3, #0]
  4008c6:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  4008ca:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR2 |= PWM_CMR_CPOL;//W Output inverted
  4008cc:	4a85      	ldr	r2, [pc, #532]	; (400ae4 <SixStepCommutation+0x290>)
  4008ce:	4b85      	ldr	r3, [pc, #532]	; (400ae4 <SixStepCommutation+0x290>)
  4008d0:	681b      	ldr	r3, [r3, #0]
  4008d2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  4008d6:	6013      	str	r3, [r2, #0]
			//Now, set the duty cycle for both W and V to be pretty low, probs 15%.
			//Not using the update registers since the PWM is disabled above.
			REG_PWM_CDTY0 = 720;
  4008d8:	4b83      	ldr	r3, [pc, #524]	; (400ae8 <SixStepCommutation+0x294>)
  4008da:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  4008de:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY1 = 720;
  4008e0:	4b82      	ldr	r3, [pc, #520]	; (400aec <SixStepCommutation+0x298>)
  4008e2:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  4008e6:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY2 = 720;
  4008e8:	4b81      	ldr	r3, [pc, #516]	; (400af0 <SixStepCommutation+0x29c>)
  4008ea:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  4008ee:	601a      	str	r2, [r3, #0]
			//REG_PWM_SCUC = PWM_SCUC_UPDULOCK;
			//Enable PWM
			REG_PWM_ENA |= PWM_ENA_CHID0;
  4008f0:	4a80      	ldr	r2, [pc, #512]	; (400af4 <SixStepCommutation+0x2a0>)
  4008f2:	4b80      	ldr	r3, [pc, #512]	; (400af4 <SixStepCommutation+0x2a0>)
  4008f4:	681b      	ldr	r3, [r3, #0]
  4008f6:	f043 0301 	orr.w	r3, r3, #1
  4008fa:	6013      	str	r3, [r2, #0]
			
			//REG_PIOD_SODR = (1<<HALLCUPPER) | (1<<HALLBLOWER);
			//REG_PIOD_OER |= (1<<U_LOWER_OUTPUT) | (1<<V_UPPER_OUTPUT) |(1<<U_UPPER_OUTPUT);
			REG_PIOD_CODR |= (1<<U_LOWER_OUTPUT) | (1<<V_UPPER_OUTPUT) |(1<<U_UPPER_OUTPUT);
  4008fc:	4a7e      	ldr	r2, [pc, #504]	; (400af8 <SixStepCommutation+0x2a4>)
  4008fe:	4b7e      	ldr	r3, [pc, #504]	; (400af8 <SixStepCommutation+0x2a4>)
  400900:	681b      	ldr	r3, [r3, #0]
  400902:	f043 7398 	orr.w	r3, r3, #19922944	; 0x1300000
  400906:	6013      	str	r3, [r2, #0]
  400908:	e1a9      	b.n	400c5e <SixStepCommutation+0x40a>
			//|float|-|+|
		}else if ((HallA > 0) && (HallB == 0) && (HallC > 0))//101
  40090a:	683b      	ldr	r3, [r7, #0]
  40090c:	2b00      	cmp	r3, #0
  40090e:	d046      	beq.n	40099e <SixStepCommutation+0x14a>
  400910:	6a3b      	ldr	r3, [r7, #32]
  400912:	2b00      	cmp	r3, #0
  400914:	d143      	bne.n	40099e <SixStepCommutation+0x14a>
  400916:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400918:	2b00      	cmp	r3, #0
  40091a:	d040      	beq.n	40099e <SixStepCommutation+0x14a>
		{
			//Need Aupper, Alower, and Blower to be controlled by PWM
			REG_PIOD_ABCDSR1 |= (1<<U_UPPER_OUTPUT) | (1<<U_LOWER_OUTPUT) | (1<<V_LOWER_OUTPUT);
  40091c:	4a6b      	ldr	r2, [pc, #428]	; (400acc <SixStepCommutation+0x278>)
  40091e:	4b6b      	ldr	r3, [pc, #428]	; (400acc <SixStepCommutation+0x278>)
  400920:	681b      	ldr	r3, [r3, #0]
  400922:	f043 7344 	orr.w	r3, r3, #51380224	; 0x3100000
  400926:	6013      	str	r3, [r2, #0]
			REG_PIOD_PER |= (1<<V_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400928:	4a69      	ldr	r2, [pc, #420]	; (400ad0 <SixStepCommutation+0x27c>)
  40092a:	4b69      	ldr	r3, [pc, #420]	; (400ad0 <SixStepCommutation+0x27c>)
  40092c:	681b      	ldr	r3, [r3, #0]
  40092e:	f043 638c 	orr.w	r3, r3, #73400320	; 0x4600000
  400932:	6013      	str	r3, [r2, #0]
			REG_PIOD_PDR |= (1<<U_UPPER_OUTPUT) | (1<<U_LOWER_OUTPUT) | (1<<V_LOWER_OUTPUT);
  400934:	4a67      	ldr	r2, [pc, #412]	; (400ad4 <SixStepCommutation+0x280>)
  400936:	4b67      	ldr	r3, [pc, #412]	; (400ad4 <SixStepCommutation+0x280>)
  400938:	681b      	ldr	r3, [r3, #0]
  40093a:	f043 7344 	orr.w	r3, r3, #51380224	; 0x3100000
  40093e:	6013      	str	r3, [r2, #0]
			
			//Disable PWM because polarity needs to be adjusted
			REG_PWM_DIS |= PWM_DIS_CHID0;
  400940:	4a65      	ldr	r2, [pc, #404]	; (400ad8 <SixStepCommutation+0x284>)
  400942:	4b65      	ldr	r3, [pc, #404]	; (400ad8 <SixStepCommutation+0x284>)
  400944:	681b      	ldr	r3, [r3, #0]
  400946:	f043 0301 	orr.w	r3, r3, #1
  40094a:	6013      	str	r3, [r2, #0]
			//Set needed polarities. Setting all of them so I don't need to keep track.
			REG_PWM_CMR0 |= (PWM_CMR_CPOL);
  40094c:	4a63      	ldr	r2, [pc, #396]	; (400adc <SixStepCommutation+0x288>)
  40094e:	4b63      	ldr	r3, [pc, #396]	; (400adc <SixStepCommutation+0x288>)
  400950:	681b      	ldr	r3, [r3, #0]
  400952:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  400956:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR1 &= ~(PWM_CMR_CPOL);
  400958:	4a61      	ldr	r2, [pc, #388]	; (400ae0 <SixStepCommutation+0x28c>)
  40095a:	4b61      	ldr	r3, [pc, #388]	; (400ae0 <SixStepCommutation+0x28c>)
  40095c:	681b      	ldr	r3, [r3, #0]
  40095e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400962:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR2 &= ~(PWM_CMR_CPOL);
  400964:	4a5f      	ldr	r2, [pc, #380]	; (400ae4 <SixStepCommutation+0x290>)
  400966:	4b5f      	ldr	r3, [pc, #380]	; (400ae4 <SixStepCommutation+0x290>)
  400968:	681b      	ldr	r3, [r3, #0]
  40096a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  40096e:	6013      	str	r3, [r2, #0]
			//Now, set the duty cycle to be pretty low, probs 15%.
			REG_PWM_CDTY0 = 720;
  400970:	4b5d      	ldr	r3, [pc, #372]	; (400ae8 <SixStepCommutation+0x294>)
  400972:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400976:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY1 = 720;
  400978:	4b5c      	ldr	r3, [pc, #368]	; (400aec <SixStepCommutation+0x298>)
  40097a:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  40097e:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY2 = 720;
  400980:	4b5b      	ldr	r3, [pc, #364]	; (400af0 <SixStepCommutation+0x29c>)
  400982:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400986:	601a      	str	r2, [r3, #0]
			//REG_PWM_SCUC = PWM_SCUC_UPDULOCK;
			//Enable PWM
			REG_PWM_ENA |= PWM_ENA_CHID0;
  400988:	4a5a      	ldr	r2, [pc, #360]	; (400af4 <SixStepCommutation+0x2a0>)
  40098a:	4b5a      	ldr	r3, [pc, #360]	; (400af4 <SixStepCommutation+0x2a0>)
  40098c:	681b      	ldr	r3, [r3, #0]
  40098e:	f043 0301 	orr.w	r3, r3, #1
  400992:	6013      	str	r3, [r2, #0]
			
			//REG_PIOD_SODR = (1<<HALLAUPPER) | (1<<HALLBLOWER);
			REG_PIOD_CODR =  (1<<W_UPPER_OUTPUT) | (1<<V_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT);
  400994:	4b58      	ldr	r3, [pc, #352]	; (400af8 <SixStepCommutation+0x2a4>)
  400996:	f04f 628c 	mov.w	r2, #73400320	; 0x4600000
  40099a:	601a      	str	r2, [r3, #0]
  40099c:	e15f      	b.n	400c5e <SixStepCommutation+0x40a>
			//|+|-|float|
		}else if ((HallA > 0) && (HallB == 0) && (HallC == 0))//100
  40099e:	683b      	ldr	r3, [r7, #0]
  4009a0:	2b00      	cmp	r3, #0
  4009a2:	d046      	beq.n	400a32 <SixStepCommutation+0x1de>
  4009a4:	6a3b      	ldr	r3, [r7, #32]
  4009a6:	2b00      	cmp	r3, #0
  4009a8:	d143      	bne.n	400a32 <SixStepCommutation+0x1de>
  4009aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4009ac:	2b00      	cmp	r3, #0
  4009ae:	d140      	bne.n	400a32 <SixStepCommutation+0x1de>
		{
			//Need Aupper, Alower, and Clower to be PWM
			REG_PIOD_ABCDSR1 |= (1<<U_UPPER_OUTPUT) | (1<<U_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT);
  4009b0:	4a46      	ldr	r2, [pc, #280]	; (400acc <SixStepCommutation+0x278>)
  4009b2:	4b46      	ldr	r3, [pc, #280]	; (400acc <SixStepCommutation+0x278>)
  4009b4:	681b      	ldr	r3, [r3, #0]
  4009b6:	f043 63a2 	orr.w	r3, r3, #84934656	; 0x5100000
  4009ba:	6013      	str	r3, [r2, #0]
			REG_PIOD_PER |= (1<<V_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  4009bc:	4a44      	ldr	r2, [pc, #272]	; (400ad0 <SixStepCommutation+0x27c>)
  4009be:	4b44      	ldr	r3, [pc, #272]	; (400ad0 <SixStepCommutation+0x27c>)
  4009c0:	681b      	ldr	r3, [r3, #0]
  4009c2:	f043 7318 	orr.w	r3, r3, #39845888	; 0x2600000
  4009c6:	6013      	str	r3, [r2, #0]
			REG_PIOD_PDR |= (1<<U_UPPER_OUTPUT) | (1<<U_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT);
  4009c8:	4a42      	ldr	r2, [pc, #264]	; (400ad4 <SixStepCommutation+0x280>)
  4009ca:	4b42      	ldr	r3, [pc, #264]	; (400ad4 <SixStepCommutation+0x280>)
  4009cc:	681b      	ldr	r3, [r3, #0]
  4009ce:	f043 63a2 	orr.w	r3, r3, #84934656	; 0x5100000
  4009d2:	6013      	str	r3, [r2, #0]
			
			//Disable PWM because polarity needs to be adjusted
			REG_PWM_DIS |= PWM_DIS_CHID0;
  4009d4:	4a40      	ldr	r2, [pc, #256]	; (400ad8 <SixStepCommutation+0x284>)
  4009d6:	4b40      	ldr	r3, [pc, #256]	; (400ad8 <SixStepCommutation+0x284>)
  4009d8:	681b      	ldr	r3, [r3, #0]
  4009da:	f043 0301 	orr.w	r3, r3, #1
  4009de:	6013      	str	r3, [r2, #0]
			//Set needed polarities. Setting all of them so I don't need to keep track.
			REG_PWM_CMR0 |= (PWM_CMR_CPOL);
  4009e0:	4a3e      	ldr	r2, [pc, #248]	; (400adc <SixStepCommutation+0x288>)
  4009e2:	4b3e      	ldr	r3, [pc, #248]	; (400adc <SixStepCommutation+0x288>)
  4009e4:	681b      	ldr	r3, [r3, #0]
  4009e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  4009ea:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR1 &= ~(PWM_CMR_CPOL);
  4009ec:	4a3c      	ldr	r2, [pc, #240]	; (400ae0 <SixStepCommutation+0x28c>)
  4009ee:	4b3c      	ldr	r3, [pc, #240]	; (400ae0 <SixStepCommutation+0x28c>)
  4009f0:	681b      	ldr	r3, [r3, #0]
  4009f2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  4009f6:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR2 &= ~(PWM_CMR_CPOL);
  4009f8:	4a3a      	ldr	r2, [pc, #232]	; (400ae4 <SixStepCommutation+0x290>)
  4009fa:	4b3a      	ldr	r3, [pc, #232]	; (400ae4 <SixStepCommutation+0x290>)
  4009fc:	681b      	ldr	r3, [r3, #0]
  4009fe:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400a02:	6013      	str	r3, [r2, #0]
			//Now, set the duty cycle to be pretty low, probs 15%.
			REG_PWM_CDTY0 = 720;
  400a04:	4b38      	ldr	r3, [pc, #224]	; (400ae8 <SixStepCommutation+0x294>)
  400a06:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400a0a:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY1 = 720;
  400a0c:	4b37      	ldr	r3, [pc, #220]	; (400aec <SixStepCommutation+0x298>)
  400a0e:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400a12:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY2 = 720;		
  400a14:	4b36      	ldr	r3, [pc, #216]	; (400af0 <SixStepCommutation+0x29c>)
  400a16:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400a1a:	601a      	str	r2, [r3, #0]
			//REG_PWM_SCUC = PWM_SCUC_UPDULOCK;
			//Enable PWM
			REG_PWM_ENA |= PWM_ENA_CHID0;
  400a1c:	4a35      	ldr	r2, [pc, #212]	; (400af4 <SixStepCommutation+0x2a0>)
  400a1e:	4b35      	ldr	r3, [pc, #212]	; (400af4 <SixStepCommutation+0x2a0>)
  400a20:	681b      	ldr	r3, [r3, #0]
  400a22:	f043 0301 	orr.w	r3, r3, #1
  400a26:	6013      	str	r3, [r2, #0]
			
			//REG_PIOD_SODR = (1<<A_UPPER_OUTPUT) | (1<<C_LOWER_OUTPUT);
			REG_PIOD_CODR = (1<<V_LOWER_OUTPUT) | (1<<W_UPPER_OUTPUT) | (1<<V_UPPER_OUTPUT);
  400a28:	4b33      	ldr	r3, [pc, #204]	; (400af8 <SixStepCommutation+0x2a4>)
  400a2a:	f04f 7218 	mov.w	r2, #39845888	; 0x2600000
  400a2e:	601a      	str	r2, [r3, #0]
  400a30:	e115      	b.n	400c5e <SixStepCommutation+0x40a>
			//|+|float|-|
		}else if ((HallA > 0) && (HallB > 0) && (HallC == 0))//110
  400a32:	683b      	ldr	r3, [r7, #0]
  400a34:	2b00      	cmp	r3, #0
  400a36:	d061      	beq.n	400afc <SixStepCommutation+0x2a8>
  400a38:	6a3b      	ldr	r3, [r7, #32]
  400a3a:	2b00      	cmp	r3, #0
  400a3c:	d05e      	beq.n	400afc <SixStepCommutation+0x2a8>
  400a3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400a40:	2b00      	cmp	r3, #0
  400a42:	d15b      	bne.n	400afc <SixStepCommutation+0x2a8>
		{
			//Need Bupper, Blower, and Clower to be PWM
			REG_PIOD_ABCDSR1 |= (1<<V_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT);
  400a44:	4a21      	ldr	r2, [pc, #132]	; (400acc <SixStepCommutation+0x278>)
  400a46:	4b21      	ldr	r3, [pc, #132]	; (400acc <SixStepCommutation+0x278>)
  400a48:	681b      	ldr	r3, [r3, #0]
  400a4a:	f043 63c4 	orr.w	r3, r3, #102760448	; 0x6200000
  400a4e:	6013      	str	r3, [r2, #0]
			REG_PIOD_PER |= (1<<U_UPPER_OUTPUT) | (1<<U_LOWER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400a50:	4a1f      	ldr	r2, [pc, #124]	; (400ad0 <SixStepCommutation+0x27c>)
  400a52:	4b1f      	ldr	r3, [pc, #124]	; (400ad0 <SixStepCommutation+0x27c>)
  400a54:	681b      	ldr	r3, [r3, #0]
  400a56:	f043 73a8 	orr.w	r3, r3, #22020096	; 0x1500000
  400a5a:	6013      	str	r3, [r2, #0]
			REG_PIOD_PDR |= (1<<V_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT);
  400a5c:	4a1d      	ldr	r2, [pc, #116]	; (400ad4 <SixStepCommutation+0x280>)
  400a5e:	4b1d      	ldr	r3, [pc, #116]	; (400ad4 <SixStepCommutation+0x280>)
  400a60:	681b      	ldr	r3, [r3, #0]
  400a62:	f043 63c4 	orr.w	r3, r3, #102760448	; 0x6200000
  400a66:	6013      	str	r3, [r2, #0]
			
			//Disable PWM because polarity needs to be adjusted
			REG_PWM_DIS |= PWM_DIS_CHID0;
  400a68:	4a1b      	ldr	r2, [pc, #108]	; (400ad8 <SixStepCommutation+0x284>)
  400a6a:	4b1b      	ldr	r3, [pc, #108]	; (400ad8 <SixStepCommutation+0x284>)
  400a6c:	681b      	ldr	r3, [r3, #0]
  400a6e:	f043 0301 	orr.w	r3, r3, #1
  400a72:	6013      	str	r3, [r2, #0]
			//Set needed polarities. Setting all of them so I don't need to keep track.
			REG_PWM_CMR0 &= ~(PWM_CMR_CPOL);
  400a74:	4a19      	ldr	r2, [pc, #100]	; (400adc <SixStepCommutation+0x288>)
  400a76:	4b19      	ldr	r3, [pc, #100]	; (400adc <SixStepCommutation+0x288>)
  400a78:	681b      	ldr	r3, [r3, #0]
  400a7a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400a7e:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR1 |= (PWM_CMR_CPOL);
  400a80:	4a17      	ldr	r2, [pc, #92]	; (400ae0 <SixStepCommutation+0x28c>)
  400a82:	4b17      	ldr	r3, [pc, #92]	; (400ae0 <SixStepCommutation+0x28c>)
  400a84:	681b      	ldr	r3, [r3, #0]
  400a86:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  400a8a:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR2 &= ~(PWM_CMR_CPOL);
  400a8c:	4a15      	ldr	r2, [pc, #84]	; (400ae4 <SixStepCommutation+0x290>)
  400a8e:	4b15      	ldr	r3, [pc, #84]	; (400ae4 <SixStepCommutation+0x290>)
  400a90:	681b      	ldr	r3, [r3, #0]
  400a92:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400a96:	6013      	str	r3, [r2, #0]
			//Now, set the duty cycle to be pretty low, probs 15%.
			REG_PWM_CDTY0 = 720;
  400a98:	4b13      	ldr	r3, [pc, #76]	; (400ae8 <SixStepCommutation+0x294>)
  400a9a:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400a9e:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY1 = 720;
  400aa0:	4b12      	ldr	r3, [pc, #72]	; (400aec <SixStepCommutation+0x298>)
  400aa2:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400aa6:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY2 = 720;
  400aa8:	4b11      	ldr	r3, [pc, #68]	; (400af0 <SixStepCommutation+0x29c>)
  400aaa:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400aae:	601a      	str	r2, [r3, #0]
			//REG_PWM_SCUC = PWM_SCUC_UPDULOCK;	
			//Enable PWM
			REG_PWM_ENA |= PWM_ENA_CHID0;		
  400ab0:	4a10      	ldr	r2, [pc, #64]	; (400af4 <SixStepCommutation+0x2a0>)
  400ab2:	4b10      	ldr	r3, [pc, #64]	; (400af4 <SixStepCommutation+0x2a0>)
  400ab4:	681b      	ldr	r3, [r3, #0]
  400ab6:	f043 0301 	orr.w	r3, r3, #1
  400aba:	6013      	str	r3, [r2, #0]
			
			//REG_PIOD_SODR = (1<<C_LOWER_OUTPUT) | (1<<B_UPPER_OUTPUT);
			REG_PIOD_CODR = (1<<U_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400abc:	4b0e      	ldr	r3, [pc, #56]	; (400af8 <SixStepCommutation+0x2a4>)
  400abe:	f04f 7244 	mov.w	r2, #51380224	; 0x3100000
  400ac2:	601a      	str	r2, [r3, #0]
  400ac4:	e0cb      	b.n	400c5e <SixStepCommutation+0x40a>
  400ac6:	bf00      	nop
  400ac8:	400e1410 	.word	0x400e1410
  400acc:	400e1470 	.word	0x400e1470
  400ad0:	400e1400 	.word	0x400e1400
  400ad4:	400e1404 	.word	0x400e1404
  400ad8:	40000008 	.word	0x40000008
  400adc:	40000200 	.word	0x40000200
  400ae0:	40000220 	.word	0x40000220
  400ae4:	40000240 	.word	0x40000240
  400ae8:	40000204 	.word	0x40000204
  400aec:	40000224 	.word	0x40000224
  400af0:	40000244 	.word	0x40000244
  400af4:	40000004 	.word	0x40000004
  400af8:	400e1434 	.word	0x400e1434
			//|float|+|-|
		}else if ((HallA == 0) && (HallB > 0) && (HallC == 0))//010
  400afc:	683b      	ldr	r3, [r7, #0]
  400afe:	2b00      	cmp	r3, #0
  400b00:	d146      	bne.n	400b90 <SixStepCommutation+0x33c>
  400b02:	6a3b      	ldr	r3, [r7, #32]
  400b04:	2b00      	cmp	r3, #0
  400b06:	d043      	beq.n	400b90 <SixStepCommutation+0x33c>
  400b08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400b0a:	2b00      	cmp	r3, #0
  400b0c:	d140      	bne.n	400b90 <SixStepCommutation+0x33c>
		{
			//Need Bupper, Blower, and Alower to be PWM
			REG_PIOD_ABCDSR1 |= (1<<V_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400b0e:	4a62      	ldr	r2, [pc, #392]	; (400c98 <SixStepCommutation+0x444>)
  400b10:	4b61      	ldr	r3, [pc, #388]	; (400c98 <SixStepCommutation+0x444>)
  400b12:	681b      	ldr	r3, [r3, #0]
  400b14:	f043 7348 	orr.w	r3, r3, #52428800	; 0x3200000
  400b18:	6013      	str	r3, [r2, #0]
			REG_PIOD_PER |= (1<<U_UPPER_OUTPUT) | (1<<W_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT);
  400b1a:	4a60      	ldr	r2, [pc, #384]	; (400c9c <SixStepCommutation+0x448>)
  400b1c:	4b5f      	ldr	r3, [pc, #380]	; (400c9c <SixStepCommutation+0x448>)
  400b1e:	681b      	ldr	r3, [r3, #0]
  400b20:	f043 638a 	orr.w	r3, r3, #72351744	; 0x4500000
  400b24:	6013      	str	r3, [r2, #0]
			REG_PIOD_PDR |= (1<<V_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400b26:	4a5e      	ldr	r2, [pc, #376]	; (400ca0 <SixStepCommutation+0x44c>)
  400b28:	4b5d      	ldr	r3, [pc, #372]	; (400ca0 <SixStepCommutation+0x44c>)
  400b2a:	681b      	ldr	r3, [r3, #0]
  400b2c:	f043 7348 	orr.w	r3, r3, #52428800	; 0x3200000
  400b30:	6013      	str	r3, [r2, #0]

			//Disable PWM because polarity needs to be adjusted
			REG_PWM_DIS |= PWM_DIS_CHID0;
  400b32:	4a5c      	ldr	r2, [pc, #368]	; (400ca4 <SixStepCommutation+0x450>)
  400b34:	4b5b      	ldr	r3, [pc, #364]	; (400ca4 <SixStepCommutation+0x450>)
  400b36:	681b      	ldr	r3, [r3, #0]
  400b38:	f043 0301 	orr.w	r3, r3, #1
  400b3c:	6013      	str	r3, [r2, #0]
			//Set needed polarities. Setting all of them so I don't need to keep track.
			REG_PWM_CMR0 &= ~(PWM_CMR_CPOL);
  400b3e:	4a5a      	ldr	r2, [pc, #360]	; (400ca8 <SixStepCommutation+0x454>)
  400b40:	4b59      	ldr	r3, [pc, #356]	; (400ca8 <SixStepCommutation+0x454>)
  400b42:	681b      	ldr	r3, [r3, #0]
  400b44:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400b48:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR1 |= (PWM_CMR_CPOL);
  400b4a:	4a58      	ldr	r2, [pc, #352]	; (400cac <SixStepCommutation+0x458>)
  400b4c:	4b57      	ldr	r3, [pc, #348]	; (400cac <SixStepCommutation+0x458>)
  400b4e:	681b      	ldr	r3, [r3, #0]
  400b50:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  400b54:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR2 &= ~(PWM_CMR_CPOL);
  400b56:	4a56      	ldr	r2, [pc, #344]	; (400cb0 <SixStepCommutation+0x45c>)
  400b58:	4b55      	ldr	r3, [pc, #340]	; (400cb0 <SixStepCommutation+0x45c>)
  400b5a:	681b      	ldr	r3, [r3, #0]
  400b5c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400b60:	6013      	str	r3, [r2, #0]
			//Now, set the duty cycle to be pretty low, probs 15%.
			REG_PWM_CDTY0 = 720;
  400b62:	4b54      	ldr	r3, [pc, #336]	; (400cb4 <SixStepCommutation+0x460>)
  400b64:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400b68:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY1 = 720;
  400b6a:	4b53      	ldr	r3, [pc, #332]	; (400cb8 <SixStepCommutation+0x464>)
  400b6c:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400b70:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY2 = 720;
  400b72:	4b52      	ldr	r3, [pc, #328]	; (400cbc <SixStepCommutation+0x468>)
  400b74:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400b78:	601a      	str	r2, [r3, #0]
			//REG_PWM_SCUC = PWM_SCUC_UPDULOCK;	
			//Enable PWM
			REG_PWM_ENA |= PWM_ENA_CHID0;		
  400b7a:	4a51      	ldr	r2, [pc, #324]	; (400cc0 <SixStepCommutation+0x46c>)
  400b7c:	4b50      	ldr	r3, [pc, #320]	; (400cc0 <SixStepCommutation+0x46c>)
  400b7e:	681b      	ldr	r3, [r3, #0]
  400b80:	f043 0301 	orr.w	r3, r3, #1
  400b84:	6013      	str	r3, [r2, #0]
			
			//REG_PIOD_SODR = (1<<A_LOWER_OUTPUT) | (B_UPPER_OUTPUT);
			REG_PIOD_CODR = (1<<U_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400b86:	4b4f      	ldr	r3, [pc, #316]	; (400cc4 <SixStepCommutation+0x470>)
  400b88:	f04f 628a 	mov.w	r2, #72351744	; 0x4500000
  400b8c:	601a      	str	r2, [r3, #0]
  400b8e:	e066      	b.n	400c5e <SixStepCommutation+0x40a>
			//|-|+|float|
		}else if ((HallA == 0) && (HallB > 0) && (HallC > 0))//011
  400b90:	683b      	ldr	r3, [r7, #0]
  400b92:	2b00      	cmp	r3, #0
  400b94:	d146      	bne.n	400c24 <SixStepCommutation+0x3d0>
  400b96:	6a3b      	ldr	r3, [r7, #32]
  400b98:	2b00      	cmp	r3, #0
  400b9a:	d043      	beq.n	400c24 <SixStepCommutation+0x3d0>
  400b9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400b9e:	2b00      	cmp	r3, #0
  400ba0:	d040      	beq.n	400c24 <SixStepCommutation+0x3d0>
		{
			//Need Cupper, Clower, and Alower to be PWM
			REG_PIOD_ABCDSR1 |= (1<<W_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400ba2:	4a3d      	ldr	r2, [pc, #244]	; (400c98 <SixStepCommutation+0x444>)
  400ba4:	4b3c      	ldr	r3, [pc, #240]	; (400c98 <SixStepCommutation+0x444>)
  400ba6:	681b      	ldr	r3, [r3, #0]
  400ba8:	f043 63a8 	orr.w	r3, r3, #88080384	; 0x5400000
  400bac:	6013      	str	r3, [r2, #0]
			REG_PIOD_PER |= (1<<U_UPPER_OUTPUT) | (1<<V_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT);
  400bae:	4a3b      	ldr	r2, [pc, #236]	; (400c9c <SixStepCommutation+0x448>)
  400bb0:	4b3a      	ldr	r3, [pc, #232]	; (400c9c <SixStepCommutation+0x448>)
  400bb2:	681b      	ldr	r3, [r3, #0]
  400bb4:	f043 730c 	orr.w	r3, r3, #36700160	; 0x2300000
  400bb8:	6013      	str	r3, [r2, #0]
			REG_PIOD_PDR |= (1<<W_UPPER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400bba:	4a39      	ldr	r2, [pc, #228]	; (400ca0 <SixStepCommutation+0x44c>)
  400bbc:	4b38      	ldr	r3, [pc, #224]	; (400ca0 <SixStepCommutation+0x44c>)
  400bbe:	681b      	ldr	r3, [r3, #0]
  400bc0:	f043 63a8 	orr.w	r3, r3, #88080384	; 0x5400000
  400bc4:	6013      	str	r3, [r2, #0]
			
			//Disable PWM because polarity needs to be adjusted
			REG_PWM_DIS |= PWM_DIS_CHID0;
  400bc6:	4a37      	ldr	r2, [pc, #220]	; (400ca4 <SixStepCommutation+0x450>)
  400bc8:	4b36      	ldr	r3, [pc, #216]	; (400ca4 <SixStepCommutation+0x450>)
  400bca:	681b      	ldr	r3, [r3, #0]
  400bcc:	f043 0301 	orr.w	r3, r3, #1
  400bd0:	6013      	str	r3, [r2, #0]
			//Set needed polarities. Setting all of them so I don't need to keep track.
			REG_PWM_CMR0 &= ~(PWM_CMR_CPOL);
  400bd2:	4a35      	ldr	r2, [pc, #212]	; (400ca8 <SixStepCommutation+0x454>)
  400bd4:	4b34      	ldr	r3, [pc, #208]	; (400ca8 <SixStepCommutation+0x454>)
  400bd6:	681b      	ldr	r3, [r3, #0]
  400bd8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400bdc:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR1 &= ~(PWM_CMR_CPOL);
  400bde:	4a33      	ldr	r2, [pc, #204]	; (400cac <SixStepCommutation+0x458>)
  400be0:	4b32      	ldr	r3, [pc, #200]	; (400cac <SixStepCommutation+0x458>)
  400be2:	681b      	ldr	r3, [r3, #0]
  400be4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400be8:	6013      	str	r3, [r2, #0]
			REG_PWM_CMR2 |= (PWM_CMR_CPOL);
  400bea:	4a31      	ldr	r2, [pc, #196]	; (400cb0 <SixStepCommutation+0x45c>)
  400bec:	4b30      	ldr	r3, [pc, #192]	; (400cb0 <SixStepCommutation+0x45c>)
  400bee:	681b      	ldr	r3, [r3, #0]
  400bf0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  400bf4:	6013      	str	r3, [r2, #0]
			//Now, set the duty cycle to be pretty low, probs 15%.
			REG_PWM_CDTY0 = 720;
  400bf6:	4b2f      	ldr	r3, [pc, #188]	; (400cb4 <SixStepCommutation+0x460>)
  400bf8:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400bfc:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY1 = 720;
  400bfe:	4b2e      	ldr	r3, [pc, #184]	; (400cb8 <SixStepCommutation+0x464>)
  400c00:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400c04:	601a      	str	r2, [r3, #0]
			REG_PWM_CDTY2 = 720;
  400c06:	4b2d      	ldr	r3, [pc, #180]	; (400cbc <SixStepCommutation+0x468>)
  400c08:	f44f 7234 	mov.w	r2, #720	; 0x2d0
  400c0c:	601a      	str	r2, [r3, #0]
			//REG_PWM_SCUC = PWM_SCUC_UPDULOCK;	
			//Enable PWM
			REG_PWM_ENA |= PWM_ENA_CHID0;		
  400c0e:	4a2c      	ldr	r2, [pc, #176]	; (400cc0 <SixStepCommutation+0x46c>)
  400c10:	4b2b      	ldr	r3, [pc, #172]	; (400cc0 <SixStepCommutation+0x46c>)
  400c12:	681b      	ldr	r3, [r3, #0]
  400c14:	f043 0301 	orr.w	r3, r3, #1
  400c18:	6013      	str	r3, [r2, #0]
			
			//REG_PIOD_SODR = (1<<A_LOWER_OUTPUT) | (1<<C_UPPER_OUTPUT);
			REG_PIOD_CODR = (1<<V_UPPER_OUTPUT) | (1<<U_UPPER_OUTPUT) | (1<<V_LOWER_OUTPUT);
  400c1a:	4b2a      	ldr	r3, [pc, #168]	; (400cc4 <SixStepCommutation+0x470>)
  400c1c:	f04f 720c 	mov.w	r2, #36700160	; 0x2300000
  400c20:	601a      	str	r2, [r3, #0]
  400c22:	e01c      	b.n	400c5e <SixStepCommutation+0x40a>
			//|-|float|+|
		}else
		{
			
			REG_PIOD_SODR = (1<<V_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400c24:	4b28      	ldr	r3, [pc, #160]	; (400cc8 <SixStepCommutation+0x474>)
  400c26:	f04f 62e0 	mov.w	r2, #117440512	; 0x7000000
  400c2a:	601a      	str	r2, [r3, #0]
			REG_PIOD_CODR = (1<<U_UPPER_OUTPUT) | (1<<V_UPPER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400c2c:	4b25      	ldr	r3, [pc, #148]	; (400cc4 <SixStepCommutation+0x470>)
  400c2e:	f44f 02e0 	mov.w	r2, #7340032	; 0x700000
  400c32:	601a      	str	r2, [r3, #0]
  400c34:	e013      	b.n	400c5e <SixStepCommutation+0x40a>
		}
	}else if (Direction > 2)
  400c36:	687b      	ldr	r3, [r7, #4]
  400c38:	2b02      	cmp	r3, #2
  400c3a:	d908      	bls.n	400c4e <SixStepCommutation+0x3fa>
	{
			REG_PIOD_SODR = (1<<V_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400c3c:	4b22      	ldr	r3, [pc, #136]	; (400cc8 <SixStepCommutation+0x474>)
  400c3e:	f04f 62e0 	mov.w	r2, #117440512	; 0x7000000
  400c42:	601a      	str	r2, [r3, #0]
			REG_PIOD_CODR = (1<<U_UPPER_OUTPUT) | (1<<V_UPPER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400c44:	4b1f      	ldr	r3, [pc, #124]	; (400cc4 <SixStepCommutation+0x470>)
  400c46:	f44f 02e0 	mov.w	r2, #7340032	; 0x700000
  400c4a:	601a      	str	r2, [r3, #0]
  400c4c:	e007      	b.n	400c5e <SixStepCommutation+0x40a>
	}else
	{
			REG_PIOD_SODR = (1<<V_LOWER_OUTPUT) | (1<<W_LOWER_OUTPUT) | (1<<U_LOWER_OUTPUT);
  400c4e:	4b1e      	ldr	r3, [pc, #120]	; (400cc8 <SixStepCommutation+0x474>)
  400c50:	f04f 62e0 	mov.w	r2, #117440512	; 0x7000000
  400c54:	601a      	str	r2, [r3, #0]
			REG_PIOD_CODR = (1<<U_UPPER_OUTPUT) | (1<<V_UPPER_OUTPUT) | (1<<W_UPPER_OUTPUT);
  400c56:	4b1b      	ldr	r3, [pc, #108]	; (400cc4 <SixStepCommutation+0x470>)
  400c58:	f44f 02e0 	mov.w	r2, #7340032	; 0x700000
  400c5c:	601a      	str	r2, [r3, #0]
	}
	
	//Wait some more
	for (uint32_t i = 0; i<OnMax;i++)
  400c5e:	2300      	movs	r3, #0
  400c60:	617b      	str	r3, [r7, #20]
  400c62:	e002      	b.n	400c6a <SixStepCommutation+0x416>
  400c64:	697b      	ldr	r3, [r7, #20]
  400c66:	3301      	adds	r3, #1
  400c68:	617b      	str	r3, [r7, #20]
  400c6a:	697a      	ldr	r2, [r7, #20]
  400c6c:	68fb      	ldr	r3, [r7, #12]
  400c6e:	429a      	cmp	r2, r3
  400c70:	d3f8      	bcc.n	400c64 <SixStepCommutation+0x410>
	{
	}
	
	//Set the outputs to 0.
	//This really sets all FET outputs to 0.
	REG_PIOD_CODR = 0xFFFFFFFF;
  400c72:	4b14      	ldr	r3, [pc, #80]	; (400cc4 <SixStepCommutation+0x470>)
  400c74:	f04f 32ff 	mov.w	r2, #4294967295
  400c78:	601a      	str	r2, [r3, #0]
	
	//wait some time
	//The waits are to make a (very) rough PWM to keep motor speed down
	for (volatile uint32_t i = 0; i<OffMax;i++)
  400c7a:	2300      	movs	r3, #0
  400c7c:	613b      	str	r3, [r7, #16]
  400c7e:	e002      	b.n	400c86 <SixStepCommutation+0x432>
  400c80:	693b      	ldr	r3, [r7, #16]
  400c82:	3301      	adds	r3, #1
  400c84:	613b      	str	r3, [r7, #16]
  400c86:	693a      	ldr	r2, [r7, #16]
  400c88:	68bb      	ldr	r3, [r7, #8]
  400c8a:	429a      	cmp	r2, r3
  400c8c:	d3f8      	bcc.n	400c80 <SixStepCommutation+0x42c>
	{
	}
	
}
  400c8e:	bf00      	nop
  400c90:	371c      	adds	r7, #28
  400c92:	46bd      	mov	sp, r7
  400c94:	bc80      	pop	{r7}
  400c96:	4770      	bx	lr
  400c98:	400e1470 	.word	0x400e1470
  400c9c:	400e1400 	.word	0x400e1400
  400ca0:	400e1404 	.word	0x400e1404
  400ca4:	40000008 	.word	0x40000008
  400ca8:	40000200 	.word	0x40000200
  400cac:	40000220 	.word	0x40000220
  400cb0:	40000240 	.word	0x40000240
  400cb4:	40000204 	.word	0x40000204
  400cb8:	40000224 	.word	0x40000224
  400cbc:	40000244 	.word	0x40000244
  400cc0:	40000004 	.word	0x40000004
  400cc4:	400e1434 	.word	0x400e1434
  400cc8:	400e1430 	.word	0x400e1430

00400ccc <cos>:
  400ccc:	b530      	push	{r4, r5, lr}
  400cce:	4a22      	ldr	r2, [pc, #136]	; (400d58 <cos+0x8c>)
  400cd0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  400cd4:	4293      	cmp	r3, r2
  400cd6:	b087      	sub	sp, #28
  400cd8:	dd1b      	ble.n	400d12 <cos+0x46>
  400cda:	4a20      	ldr	r2, [pc, #128]	; (400d5c <cos+0x90>)
  400cdc:	4293      	cmp	r3, r2
  400cde:	dd05      	ble.n	400cec <cos+0x20>
  400ce0:	4602      	mov	r2, r0
  400ce2:	460b      	mov	r3, r1
  400ce4:	f001 f9e2 	bl	4020ac <__aeabi_dsub>
  400ce8:	b007      	add	sp, #28
  400cea:	bd30      	pop	{r4, r5, pc}
  400cec:	aa02      	add	r2, sp, #8
  400cee:	f000 f87b 	bl	400de8 <__ieee754_rem_pio2>
  400cf2:	f000 0303 	and.w	r3, r0, #3
  400cf6:	2b01      	cmp	r3, #1
  400cf8:	d01a      	beq.n	400d30 <cos+0x64>
  400cfa:	2b02      	cmp	r3, #2
  400cfc:	d00f      	beq.n	400d1e <cos+0x52>
  400cfe:	b31b      	cbz	r3, 400d48 <cos+0x7c>
  400d00:	2401      	movs	r4, #1
  400d02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400d06:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d0a:	9400      	str	r4, [sp, #0]
  400d0c:	f000 fffc 	bl	401d08 <__kernel_sin>
  400d10:	e7ea      	b.n	400ce8 <cos+0x1c>
  400d12:	2200      	movs	r2, #0
  400d14:	2300      	movs	r3, #0
  400d16:	f000 fa8b 	bl	401230 <__kernel_cos>
  400d1a:	b007      	add	sp, #28
  400d1c:	bd30      	pop	{r4, r5, pc}
  400d1e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400d22:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d26:	f000 fa83 	bl	401230 <__kernel_cos>
  400d2a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400d2e:	e7db      	b.n	400ce8 <cos+0x1c>
  400d30:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  400d34:	9300      	str	r3, [sp, #0]
  400d36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d3a:	4622      	mov	r2, r4
  400d3c:	462b      	mov	r3, r5
  400d3e:	f000 ffe3 	bl	401d08 <__kernel_sin>
  400d42:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400d46:	e7cf      	b.n	400ce8 <cos+0x1c>
  400d48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400d4c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d50:	f000 fa6e 	bl	401230 <__kernel_cos>
  400d54:	e7c8      	b.n	400ce8 <cos+0x1c>
  400d56:	bf00      	nop
  400d58:	3fe921fb 	.word	0x3fe921fb
  400d5c:	7fefffff 	.word	0x7fefffff

00400d60 <sin>:
  400d60:	b530      	push	{r4, r5, lr}
  400d62:	4a1f      	ldr	r2, [pc, #124]	; (400de0 <sin+0x80>)
  400d64:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  400d68:	4293      	cmp	r3, r2
  400d6a:	b087      	sub	sp, #28
  400d6c:	dd1b      	ble.n	400da6 <sin+0x46>
  400d6e:	4a1d      	ldr	r2, [pc, #116]	; (400de4 <sin+0x84>)
  400d70:	4293      	cmp	r3, r2
  400d72:	dd05      	ble.n	400d80 <sin+0x20>
  400d74:	4602      	mov	r2, r0
  400d76:	460b      	mov	r3, r1
  400d78:	f001 f998 	bl	4020ac <__aeabi_dsub>
  400d7c:	b007      	add	sp, #28
  400d7e:	bd30      	pop	{r4, r5, pc}
  400d80:	aa02      	add	r2, sp, #8
  400d82:	f000 f831 	bl	400de8 <__ieee754_rem_pio2>
  400d86:	f000 0003 	and.w	r0, r0, #3
  400d8a:	2801      	cmp	r0, #1
  400d8c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400d90:	d01a      	beq.n	400dc8 <sin+0x68>
  400d92:	2802      	cmp	r0, #2
  400d94:	d00f      	beq.n	400db6 <sin+0x56>
  400d96:	b1e0      	cbz	r0, 400dd2 <sin+0x72>
  400d98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400d9c:	f000 fa48 	bl	401230 <__kernel_cos>
  400da0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400da4:	e7ea      	b.n	400d7c <sin+0x1c>
  400da6:	2300      	movs	r3, #0
  400da8:	9300      	str	r3, [sp, #0]
  400daa:	2200      	movs	r2, #0
  400dac:	2300      	movs	r3, #0
  400dae:	f000 ffab 	bl	401d08 <__kernel_sin>
  400db2:	b007      	add	sp, #28
  400db4:	bd30      	pop	{r4, r5, pc}
  400db6:	2401      	movs	r4, #1
  400db8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400dbc:	9400      	str	r4, [sp, #0]
  400dbe:	f000 ffa3 	bl	401d08 <__kernel_sin>
  400dc2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  400dc6:	e7d9      	b.n	400d7c <sin+0x1c>
  400dc8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400dcc:	f000 fa30 	bl	401230 <__kernel_cos>
  400dd0:	e7d4      	b.n	400d7c <sin+0x1c>
  400dd2:	2401      	movs	r4, #1
  400dd4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400dd8:	9400      	str	r4, [sp, #0]
  400dda:	f000 ff95 	bl	401d08 <__kernel_sin>
  400dde:	e7cd      	b.n	400d7c <sin+0x1c>
  400de0:	3fe921fb 	.word	0x3fe921fb
  400de4:	7fefffff 	.word	0x7fefffff

00400de8 <__ieee754_rem_pio2>:
  400de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400dec:	4e9a      	ldr	r6, [pc, #616]	; (401058 <__ieee754_rem_pio2+0x270>)
  400dee:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  400df2:	42b7      	cmp	r7, r6
  400df4:	b091      	sub	sp, #68	; 0x44
  400df6:	f340 808e 	ble.w	400f16 <__ieee754_rem_pio2+0x12e>
  400dfa:	4692      	mov	sl, r2
  400dfc:	4a97      	ldr	r2, [pc, #604]	; (40105c <__ieee754_rem_pio2+0x274>)
  400dfe:	4297      	cmp	r7, r2
  400e00:	460c      	mov	r4, r1
  400e02:	dc26      	bgt.n	400e52 <__ieee754_rem_pio2+0x6a>
  400e04:	2900      	cmp	r1, #0
  400e06:	a38a      	add	r3, pc, #552	; (adr r3, 401030 <__ieee754_rem_pio2+0x248>)
  400e08:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e0c:	f340 81b4 	ble.w	401178 <__ieee754_rem_pio2+0x390>
  400e10:	f001 f94c 	bl	4020ac <__aeabi_dsub>
  400e14:	4b92      	ldr	r3, [pc, #584]	; (401060 <__ieee754_rem_pio2+0x278>)
  400e16:	429f      	cmp	r7, r3
  400e18:	4604      	mov	r4, r0
  400e1a:	460d      	mov	r5, r1
  400e1c:	f000 8090 	beq.w	400f40 <__ieee754_rem_pio2+0x158>
  400e20:	a385      	add	r3, pc, #532	; (adr r3, 401038 <__ieee754_rem_pio2+0x250>)
  400e22:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e26:	f001 f941 	bl	4020ac <__aeabi_dsub>
  400e2a:	4602      	mov	r2, r0
  400e2c:	460b      	mov	r3, r1
  400e2e:	e9ca 2300 	strd	r2, r3, [sl]
  400e32:	4620      	mov	r0, r4
  400e34:	4629      	mov	r1, r5
  400e36:	f001 f939 	bl	4020ac <__aeabi_dsub>
  400e3a:	a37f      	add	r3, pc, #508	; (adr r3, 401038 <__ieee754_rem_pio2+0x250>)
  400e3c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e40:	f001 f934 	bl	4020ac <__aeabi_dsub>
  400e44:	2501      	movs	r5, #1
  400e46:	e9ca 0102 	strd	r0, r1, [sl, #8]
  400e4a:	4628      	mov	r0, r5
  400e4c:	b011      	add	sp, #68	; 0x44
  400e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400e52:	4a84      	ldr	r2, [pc, #528]	; (401064 <__ieee754_rem_pio2+0x27c>)
  400e54:	4297      	cmp	r7, r2
  400e56:	f340 8090 	ble.w	400f7a <__ieee754_rem_pio2+0x192>
  400e5a:	4a83      	ldr	r2, [pc, #524]	; (401068 <__ieee754_rem_pio2+0x280>)
  400e5c:	4297      	cmp	r7, r2
  400e5e:	dc65      	bgt.n	400f2c <__ieee754_rem_pio2+0x144>
  400e60:	153d      	asrs	r5, r7, #20
  400e62:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
  400e66:	eba7 5305 	sub.w	r3, r7, r5, lsl #20
  400e6a:	4619      	mov	r1, r3
  400e6c:	461f      	mov	r7, r3
  400e6e:	4606      	mov	r6, r0
  400e70:	f001 fd6a 	bl	402948 <__aeabi_d2iz>
  400e74:	f001 fa68 	bl	402348 <__aeabi_i2d>
  400e78:	4680      	mov	r8, r0
  400e7a:	4689      	mov	r9, r1
  400e7c:	4602      	mov	r2, r0
  400e7e:	460b      	mov	r3, r1
  400e80:	4630      	mov	r0, r6
  400e82:	4639      	mov	r1, r7
  400e84:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  400e88:	f001 f910 	bl	4020ac <__aeabi_dsub>
  400e8c:	2200      	movs	r2, #0
  400e8e:	4b77      	ldr	r3, [pc, #476]	; (40106c <__ieee754_rem_pio2+0x284>)
  400e90:	f001 fac0 	bl	402414 <__aeabi_dmul>
  400e94:	4689      	mov	r9, r1
  400e96:	4680      	mov	r8, r0
  400e98:	f001 fd56 	bl	402948 <__aeabi_d2iz>
  400e9c:	f001 fa54 	bl	402348 <__aeabi_i2d>
  400ea0:	4602      	mov	r2, r0
  400ea2:	460b      	mov	r3, r1
  400ea4:	4606      	mov	r6, r0
  400ea6:	460f      	mov	r7, r1
  400ea8:	4640      	mov	r0, r8
  400eaa:	4649      	mov	r1, r9
  400eac:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
  400eb0:	f001 f8fc 	bl	4020ac <__aeabi_dsub>
  400eb4:	2200      	movs	r2, #0
  400eb6:	4b6d      	ldr	r3, [pc, #436]	; (40106c <__ieee754_rem_pio2+0x284>)
  400eb8:	f001 faac 	bl	402414 <__aeabi_dmul>
  400ebc:	2200      	movs	r2, #0
  400ebe:	2300      	movs	r3, #0
  400ec0:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  400ec4:	f001 fd0e 	bl	4028e4 <__aeabi_dcmpeq>
  400ec8:	2800      	cmp	r0, #0
  400eca:	f000 8173 	beq.w	4011b4 <__ieee754_rem_pio2+0x3cc>
  400ece:	2300      	movs	r3, #0
  400ed0:	4630      	mov	r0, r6
  400ed2:	4639      	mov	r1, r7
  400ed4:	2200      	movs	r2, #0
  400ed6:	f001 fd05 	bl	4028e4 <__aeabi_dcmpeq>
  400eda:	2800      	cmp	r0, #0
  400edc:	bf14      	ite	ne
  400ede:	2301      	movne	r3, #1
  400ee0:	2302      	moveq	r3, #2
  400ee2:	4a63      	ldr	r2, [pc, #396]	; (401070 <__ieee754_rem_pio2+0x288>)
  400ee4:	9201      	str	r2, [sp, #4]
  400ee6:	2102      	movs	r1, #2
  400ee8:	462a      	mov	r2, r5
  400eea:	9100      	str	r1, [sp, #0]
  400eec:	a80a      	add	r0, sp, #40	; 0x28
  400eee:	4651      	mov	r1, sl
  400ef0:	f000 fac2 	bl	401478 <__kernel_rem_pio2>
  400ef4:	2c00      	cmp	r4, #0
  400ef6:	4605      	mov	r5, r0
  400ef8:	da14      	bge.n	400f24 <__ieee754_rem_pio2+0x13c>
  400efa:	f8da 2004 	ldr.w	r2, [sl, #4]
  400efe:	f8da 300c 	ldr.w	r3, [sl, #12]
  400f02:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  400f06:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  400f0a:	4245      	negs	r5, r0
  400f0c:	f8ca 2004 	str.w	r2, [sl, #4]
  400f10:	f8ca 300c 	str.w	r3, [sl, #12]
  400f14:	e006      	b.n	400f24 <__ieee754_rem_pio2+0x13c>
  400f16:	e9c2 0100 	strd	r0, r1, [r2]
  400f1a:	2500      	movs	r5, #0
  400f1c:	2400      	movs	r4, #0
  400f1e:	e9c2 4502 	strd	r4, r5, [r2, #8]
  400f22:	2500      	movs	r5, #0
  400f24:	4628      	mov	r0, r5
  400f26:	b011      	add	sp, #68	; 0x44
  400f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400f2c:	4602      	mov	r2, r0
  400f2e:	460b      	mov	r3, r1
  400f30:	f001 f8bc 	bl	4020ac <__aeabi_dsub>
  400f34:	2500      	movs	r5, #0
  400f36:	e9ca 0102 	strd	r0, r1, [sl, #8]
  400f3a:	e9ca 0100 	strd	r0, r1, [sl]
  400f3e:	e7f1      	b.n	400f24 <__ieee754_rem_pio2+0x13c>
  400f40:	a33f      	add	r3, pc, #252	; (adr r3, 401040 <__ieee754_rem_pio2+0x258>)
  400f42:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f46:	f001 f8b1 	bl	4020ac <__aeabi_dsub>
  400f4a:	a33f      	add	r3, pc, #252	; (adr r3, 401048 <__ieee754_rem_pio2+0x260>)
  400f4c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f50:	460d      	mov	r5, r1
  400f52:	4604      	mov	r4, r0
  400f54:	f001 f8aa 	bl	4020ac <__aeabi_dsub>
  400f58:	4602      	mov	r2, r0
  400f5a:	460b      	mov	r3, r1
  400f5c:	e9ca 2300 	strd	r2, r3, [sl]
  400f60:	4629      	mov	r1, r5
  400f62:	4620      	mov	r0, r4
  400f64:	f001 f8a2 	bl	4020ac <__aeabi_dsub>
  400f68:	a337      	add	r3, pc, #220	; (adr r3, 401048 <__ieee754_rem_pio2+0x260>)
  400f6a:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f6e:	f001 f89d 	bl	4020ac <__aeabi_dsub>
  400f72:	2501      	movs	r5, #1
  400f74:	e9ca 0102 	strd	r0, r1, [sl, #8]
  400f78:	e7d4      	b.n	400f24 <__ieee754_rem_pio2+0x13c>
  400f7a:	f000 ff7b 	bl	401e74 <fabs>
  400f7e:	a334      	add	r3, pc, #208	; (adr r3, 401050 <__ieee754_rem_pio2+0x268>)
  400f80:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f84:	4680      	mov	r8, r0
  400f86:	4689      	mov	r9, r1
  400f88:	f001 fa44 	bl	402414 <__aeabi_dmul>
  400f8c:	2200      	movs	r2, #0
  400f8e:	4b39      	ldr	r3, [pc, #228]	; (401074 <__ieee754_rem_pio2+0x28c>)
  400f90:	f001 f88e 	bl	4020b0 <__adddf3>
  400f94:	f001 fcd8 	bl	402948 <__aeabi_d2iz>
  400f98:	4605      	mov	r5, r0
  400f9a:	f001 f9d5 	bl	402348 <__aeabi_i2d>
  400f9e:	a324      	add	r3, pc, #144	; (adr r3, 401030 <__ieee754_rem_pio2+0x248>)
  400fa0:	e9d3 2300 	ldrd	r2, r3, [r3]
  400fa4:	e9cd 0104 	strd	r0, r1, [sp, #16]
  400fa8:	f001 fa34 	bl	402414 <__aeabi_dmul>
  400fac:	4602      	mov	r2, r0
  400fae:	460b      	mov	r3, r1
  400fb0:	4640      	mov	r0, r8
  400fb2:	4649      	mov	r1, r9
  400fb4:	f001 f87a 	bl	4020ac <__aeabi_dsub>
  400fb8:	a31f      	add	r3, pc, #124	; (adr r3, 401038 <__ieee754_rem_pio2+0x250>)
  400fba:	e9d3 2300 	ldrd	r2, r3, [r3]
  400fbe:	4680      	mov	r8, r0
  400fc0:	4689      	mov	r9, r1
  400fc2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400fc6:	f001 fa25 	bl	402414 <__aeabi_dmul>
  400fca:	2d1f      	cmp	r5, #31
  400fcc:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400fd0:	dc54      	bgt.n	40107c <__ieee754_rem_pio2+0x294>
  400fd2:	4b29      	ldr	r3, [pc, #164]	; (401078 <__ieee754_rem_pio2+0x290>)
  400fd4:	1e6a      	subs	r2, r5, #1
  400fd6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  400fda:	429f      	cmp	r7, r3
  400fdc:	d04e      	beq.n	40107c <__ieee754_rem_pio2+0x294>
  400fde:	4602      	mov	r2, r0
  400fe0:	460b      	mov	r3, r1
  400fe2:	4640      	mov	r0, r8
  400fe4:	4649      	mov	r1, r9
  400fe6:	f001 f861 	bl	4020ac <__aeabi_dsub>
  400fea:	4602      	mov	r2, r0
  400fec:	460b      	mov	r3, r1
  400fee:	e9ca 2300 	strd	r2, r3, [sl]
  400ff2:	4683      	mov	fp, r0
  400ff4:	460e      	mov	r6, r1
  400ff6:	465a      	mov	r2, fp
  400ff8:	4633      	mov	r3, r6
  400ffa:	4640      	mov	r0, r8
  400ffc:	4649      	mov	r1, r9
  400ffe:	f001 f855 	bl	4020ac <__aeabi_dsub>
  401002:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401006:	f001 f851 	bl	4020ac <__aeabi_dsub>
  40100a:	2c00      	cmp	r4, #0
  40100c:	4602      	mov	r2, r0
  40100e:	460b      	mov	r3, r1
  401010:	e9ca 2302 	strd	r2, r3, [sl, #8]
  401014:	da86      	bge.n	400f24 <__ieee754_rem_pio2+0x13c>
  401016:	465b      	mov	r3, fp
  401018:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
  40101c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  401020:	e88a 0048 	stmia.w	sl, {r3, r6}
  401024:	f8ca 100c 	str.w	r1, [sl, #12]
  401028:	f8ca 0008 	str.w	r0, [sl, #8]
  40102c:	426d      	negs	r5, r5
  40102e:	e779      	b.n	400f24 <__ieee754_rem_pio2+0x13c>
  401030:	54400000 	.word	0x54400000
  401034:	3ff921fb 	.word	0x3ff921fb
  401038:	1a626331 	.word	0x1a626331
  40103c:	3dd0b461 	.word	0x3dd0b461
  401040:	1a600000 	.word	0x1a600000
  401044:	3dd0b461 	.word	0x3dd0b461
  401048:	2e037073 	.word	0x2e037073
  40104c:	3ba3198a 	.word	0x3ba3198a
  401050:	6dc9c883 	.word	0x6dc9c883
  401054:	3fe45f30 	.word	0x3fe45f30
  401058:	3fe921fb 	.word	0x3fe921fb
  40105c:	4002d97b 	.word	0x4002d97b
  401060:	3ff921fb 	.word	0x3ff921fb
  401064:	413921fb 	.word	0x413921fb
  401068:	7fefffff 	.word	0x7fefffff
  40106c:	41700000 	.word	0x41700000
  401070:	00402e44 	.word	0x00402e44
  401074:	3fe00000 	.word	0x3fe00000
  401078:	00402dc4 	.word	0x00402dc4
  40107c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401080:	4640      	mov	r0, r8
  401082:	4649      	mov	r1, r9
  401084:	f001 f812 	bl	4020ac <__aeabi_dsub>
  401088:	153a      	asrs	r2, r7, #20
  40108a:	f3c1 530a 	ubfx	r3, r1, #20, #11
  40108e:	1ad3      	subs	r3, r2, r3
  401090:	2b10      	cmp	r3, #16
  401092:	4683      	mov	fp, r0
  401094:	460e      	mov	r6, r1
  401096:	9209      	str	r2, [sp, #36]	; 0x24
  401098:	e9ca 0100 	strd	r0, r1, [sl]
  40109c:	ddab      	ble.n	400ff6 <__ieee754_rem_pio2+0x20e>
  40109e:	a358      	add	r3, pc, #352	; (adr r3, 401200 <__ieee754_rem_pio2+0x418>)
  4010a0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4010a4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4010a8:	f001 f9b4 	bl	402414 <__aeabi_dmul>
  4010ac:	4606      	mov	r6, r0
  4010ae:	460f      	mov	r7, r1
  4010b0:	4602      	mov	r2, r0
  4010b2:	460b      	mov	r3, r1
  4010b4:	4640      	mov	r0, r8
  4010b6:	4649      	mov	r1, r9
  4010b8:	f000 fff8 	bl	4020ac <__aeabi_dsub>
  4010bc:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4010c0:	4602      	mov	r2, r0
  4010c2:	460b      	mov	r3, r1
  4010c4:	4640      	mov	r0, r8
  4010c6:	4649      	mov	r1, r9
  4010c8:	f000 fff0 	bl	4020ac <__aeabi_dsub>
  4010cc:	4632      	mov	r2, r6
  4010ce:	463b      	mov	r3, r7
  4010d0:	f000 ffec 	bl	4020ac <__aeabi_dsub>
  4010d4:	a34c      	add	r3, pc, #304	; (adr r3, 401208 <__ieee754_rem_pio2+0x420>)
  4010d6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4010da:	4606      	mov	r6, r0
  4010dc:	460f      	mov	r7, r1
  4010de:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4010e2:	f001 f997 	bl	402414 <__aeabi_dmul>
  4010e6:	4632      	mov	r2, r6
  4010e8:	463b      	mov	r3, r7
  4010ea:	f000 ffdf 	bl	4020ac <__aeabi_dsub>
  4010ee:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  4010f2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4010f6:	4602      	mov	r2, r0
  4010f8:	460b      	mov	r3, r1
  4010fa:	4640      	mov	r0, r8
  4010fc:	4649      	mov	r1, r9
  4010fe:	f000 ffd5 	bl	4020ac <__aeabi_dsub>
  401102:	460b      	mov	r3, r1
  401104:	f3c1 570a 	ubfx	r7, r1, #20, #11
  401108:	460e      	mov	r6, r1
  40110a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40110c:	1bcf      	subs	r7, r1, r7
  40110e:	4602      	mov	r2, r0
  401110:	2f31      	cmp	r7, #49	; 0x31
  401112:	4683      	mov	fp, r0
  401114:	e9ca 2300 	strd	r2, r3, [sl]
  401118:	dd6c      	ble.n	4011f4 <__ieee754_rem_pio2+0x40c>
  40111a:	a33d      	add	r3, pc, #244	; (adr r3, 401210 <__ieee754_rem_pio2+0x428>)
  40111c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401120:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401124:	f001 f976 	bl	402414 <__aeabi_dmul>
  401128:	4606      	mov	r6, r0
  40112a:	460f      	mov	r7, r1
  40112c:	4602      	mov	r2, r0
  40112e:	460b      	mov	r3, r1
  401130:	4640      	mov	r0, r8
  401132:	4649      	mov	r1, r9
  401134:	e9cd 8906 	strd	r8, r9, [sp, #24]
  401138:	f000 ffb8 	bl	4020ac <__aeabi_dsub>
  40113c:	4602      	mov	r2, r0
  40113e:	460b      	mov	r3, r1
  401140:	4680      	mov	r8, r0
  401142:	4689      	mov	r9, r1
  401144:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  401148:	f000 ffb0 	bl	4020ac <__aeabi_dsub>
  40114c:	4632      	mov	r2, r6
  40114e:	463b      	mov	r3, r7
  401150:	f000 ffac 	bl	4020ac <__aeabi_dsub>
  401154:	a330      	add	r3, pc, #192	; (adr r3, 401218 <__ieee754_rem_pio2+0x430>)
  401156:	e9d3 2300 	ldrd	r2, r3, [r3]
  40115a:	4606      	mov	r6, r0
  40115c:	460f      	mov	r7, r1
  40115e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401162:	f001 f957 	bl	402414 <__aeabi_dmul>
  401166:	4632      	mov	r2, r6
  401168:	463b      	mov	r3, r7
  40116a:	f000 ff9f 	bl	4020ac <__aeabi_dsub>
  40116e:	4602      	mov	r2, r0
  401170:	460b      	mov	r3, r1
  401172:	e9cd 2302 	strd	r2, r3, [sp, #8]
  401176:	e734      	b.n	400fe2 <__ieee754_rem_pio2+0x1fa>
  401178:	f000 ff9a 	bl	4020b0 <__adddf3>
  40117c:	4b2a      	ldr	r3, [pc, #168]	; (401228 <__ieee754_rem_pio2+0x440>)
  40117e:	429f      	cmp	r7, r3
  401180:	4604      	mov	r4, r0
  401182:	460d      	mov	r5, r1
  401184:	d018      	beq.n	4011b8 <__ieee754_rem_pio2+0x3d0>
  401186:	a326      	add	r3, pc, #152	; (adr r3, 401220 <__ieee754_rem_pio2+0x438>)
  401188:	e9d3 2300 	ldrd	r2, r3, [r3]
  40118c:	f000 ff90 	bl	4020b0 <__adddf3>
  401190:	4602      	mov	r2, r0
  401192:	460b      	mov	r3, r1
  401194:	e9ca 2300 	strd	r2, r3, [sl]
  401198:	4629      	mov	r1, r5
  40119a:	4620      	mov	r0, r4
  40119c:	f000 ff86 	bl	4020ac <__aeabi_dsub>
  4011a0:	a31f      	add	r3, pc, #124	; (adr r3, 401220 <__ieee754_rem_pio2+0x438>)
  4011a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011a6:	f000 ff83 	bl	4020b0 <__adddf3>
  4011aa:	f04f 35ff 	mov.w	r5, #4294967295
  4011ae:	e9ca 0102 	strd	r0, r1, [sl, #8]
  4011b2:	e6b7      	b.n	400f24 <__ieee754_rem_pio2+0x13c>
  4011b4:	2303      	movs	r3, #3
  4011b6:	e694      	b.n	400ee2 <__ieee754_rem_pio2+0xfa>
  4011b8:	a311      	add	r3, pc, #68	; (adr r3, 401200 <__ieee754_rem_pio2+0x418>)
  4011ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011be:	f000 ff77 	bl	4020b0 <__adddf3>
  4011c2:	a311      	add	r3, pc, #68	; (adr r3, 401208 <__ieee754_rem_pio2+0x420>)
  4011c4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011c8:	460d      	mov	r5, r1
  4011ca:	4604      	mov	r4, r0
  4011cc:	f000 ff70 	bl	4020b0 <__adddf3>
  4011d0:	4602      	mov	r2, r0
  4011d2:	460b      	mov	r3, r1
  4011d4:	e9ca 2300 	strd	r2, r3, [sl]
  4011d8:	4629      	mov	r1, r5
  4011da:	4620      	mov	r0, r4
  4011dc:	f000 ff66 	bl	4020ac <__aeabi_dsub>
  4011e0:	a309      	add	r3, pc, #36	; (adr r3, 401208 <__ieee754_rem_pio2+0x420>)
  4011e2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011e6:	f000 ff63 	bl	4020b0 <__adddf3>
  4011ea:	f04f 35ff 	mov.w	r5, #4294967295
  4011ee:	e9ca 0102 	strd	r0, r1, [sl, #8]
  4011f2:	e697      	b.n	400f24 <__ieee754_rem_pio2+0x13c>
  4011f4:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  4011f8:	e6fd      	b.n	400ff6 <__ieee754_rem_pio2+0x20e>
  4011fa:	bf00      	nop
  4011fc:	f3af 8000 	nop.w
  401200:	1a600000 	.word	0x1a600000
  401204:	3dd0b461 	.word	0x3dd0b461
  401208:	2e037073 	.word	0x2e037073
  40120c:	3ba3198a 	.word	0x3ba3198a
  401210:	2e000000 	.word	0x2e000000
  401214:	3ba3198a 	.word	0x3ba3198a
  401218:	252049c1 	.word	0x252049c1
  40121c:	397b839a 	.word	0x397b839a
  401220:	1a626331 	.word	0x1a626331
  401224:	3dd0b461 	.word	0x3dd0b461
  401228:	3ff921fb 	.word	0x3ff921fb
  40122c:	00000000 	.word	0x00000000

00401230 <__kernel_cos>:
  401230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401234:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  401238:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  40123c:	b085      	sub	sp, #20
  40123e:	460c      	mov	r4, r1
  401240:	4692      	mov	sl, r2
  401242:	469b      	mov	fp, r3
  401244:	4605      	mov	r5, r0
  401246:	da6b      	bge.n	401320 <__kernel_cos+0xf0>
  401248:	f001 fb7e 	bl	402948 <__aeabi_d2iz>
  40124c:	2800      	cmp	r0, #0
  40124e:	f000 80e8 	beq.w	401422 <__kernel_cos+0x1f2>
  401252:	462a      	mov	r2, r5
  401254:	4623      	mov	r3, r4
  401256:	4628      	mov	r0, r5
  401258:	4621      	mov	r1, r4
  40125a:	f001 f8db 	bl	402414 <__aeabi_dmul>
  40125e:	a374      	add	r3, pc, #464	; (adr r3, 401430 <__kernel_cos+0x200>)
  401260:	e9d3 2300 	ldrd	r2, r3, [r3]
  401264:	4680      	mov	r8, r0
  401266:	4689      	mov	r9, r1
  401268:	f001 f8d4 	bl	402414 <__aeabi_dmul>
  40126c:	a372      	add	r3, pc, #456	; (adr r3, 401438 <__kernel_cos+0x208>)
  40126e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401272:	f000 ff1d 	bl	4020b0 <__adddf3>
  401276:	4642      	mov	r2, r8
  401278:	464b      	mov	r3, r9
  40127a:	f001 f8cb 	bl	402414 <__aeabi_dmul>
  40127e:	a370      	add	r3, pc, #448	; (adr r3, 401440 <__kernel_cos+0x210>)
  401280:	e9d3 2300 	ldrd	r2, r3, [r3]
  401284:	f000 ff12 	bl	4020ac <__aeabi_dsub>
  401288:	4642      	mov	r2, r8
  40128a:	464b      	mov	r3, r9
  40128c:	f001 f8c2 	bl	402414 <__aeabi_dmul>
  401290:	a36d      	add	r3, pc, #436	; (adr r3, 401448 <__kernel_cos+0x218>)
  401292:	e9d3 2300 	ldrd	r2, r3, [r3]
  401296:	f000 ff0b 	bl	4020b0 <__adddf3>
  40129a:	4642      	mov	r2, r8
  40129c:	464b      	mov	r3, r9
  40129e:	f001 f8b9 	bl	402414 <__aeabi_dmul>
  4012a2:	a36b      	add	r3, pc, #428	; (adr r3, 401450 <__kernel_cos+0x220>)
  4012a4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012a8:	f000 ff00 	bl	4020ac <__aeabi_dsub>
  4012ac:	4642      	mov	r2, r8
  4012ae:	464b      	mov	r3, r9
  4012b0:	f001 f8b0 	bl	402414 <__aeabi_dmul>
  4012b4:	a368      	add	r3, pc, #416	; (adr r3, 401458 <__kernel_cos+0x228>)
  4012b6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012ba:	f000 fef9 	bl	4020b0 <__adddf3>
  4012be:	4642      	mov	r2, r8
  4012c0:	464b      	mov	r3, r9
  4012c2:	f001 f8a7 	bl	402414 <__aeabi_dmul>
  4012c6:	e9cd 0100 	strd	r0, r1, [sp]
  4012ca:	2200      	movs	r2, #0
  4012cc:	4b64      	ldr	r3, [pc, #400]	; (401460 <__kernel_cos+0x230>)
  4012ce:	4640      	mov	r0, r8
  4012d0:	4649      	mov	r1, r9
  4012d2:	f001 f89f 	bl	402414 <__aeabi_dmul>
  4012d6:	e9dd 2300 	ldrd	r2, r3, [sp]
  4012da:	4606      	mov	r6, r0
  4012dc:	460f      	mov	r7, r1
  4012de:	4640      	mov	r0, r8
  4012e0:	4649      	mov	r1, r9
  4012e2:	f001 f897 	bl	402414 <__aeabi_dmul>
  4012e6:	4652      	mov	r2, sl
  4012e8:	4680      	mov	r8, r0
  4012ea:	4689      	mov	r9, r1
  4012ec:	465b      	mov	r3, fp
  4012ee:	4628      	mov	r0, r5
  4012f0:	4621      	mov	r1, r4
  4012f2:	f001 f88f 	bl	402414 <__aeabi_dmul>
  4012f6:	4602      	mov	r2, r0
  4012f8:	460b      	mov	r3, r1
  4012fa:	4640      	mov	r0, r8
  4012fc:	4649      	mov	r1, r9
  4012fe:	f000 fed5 	bl	4020ac <__aeabi_dsub>
  401302:	4602      	mov	r2, r0
  401304:	460b      	mov	r3, r1
  401306:	4630      	mov	r0, r6
  401308:	4639      	mov	r1, r7
  40130a:	f000 fecf 	bl	4020ac <__aeabi_dsub>
  40130e:	4602      	mov	r2, r0
  401310:	460b      	mov	r3, r1
  401312:	2000      	movs	r0, #0
  401314:	4953      	ldr	r1, [pc, #332]	; (401464 <__kernel_cos+0x234>)
  401316:	f000 fec9 	bl	4020ac <__aeabi_dsub>
  40131a:	b005      	add	sp, #20
  40131c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401320:	4602      	mov	r2, r0
  401322:	460b      	mov	r3, r1
  401324:	f001 f876 	bl	402414 <__aeabi_dmul>
  401328:	a341      	add	r3, pc, #260	; (adr r3, 401430 <__kernel_cos+0x200>)
  40132a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40132e:	4680      	mov	r8, r0
  401330:	4689      	mov	r9, r1
  401332:	f001 f86f 	bl	402414 <__aeabi_dmul>
  401336:	a340      	add	r3, pc, #256	; (adr r3, 401438 <__kernel_cos+0x208>)
  401338:	e9d3 2300 	ldrd	r2, r3, [r3]
  40133c:	f000 feb8 	bl	4020b0 <__adddf3>
  401340:	4642      	mov	r2, r8
  401342:	464b      	mov	r3, r9
  401344:	f001 f866 	bl	402414 <__aeabi_dmul>
  401348:	a33d      	add	r3, pc, #244	; (adr r3, 401440 <__kernel_cos+0x210>)
  40134a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40134e:	f000 fead 	bl	4020ac <__aeabi_dsub>
  401352:	4642      	mov	r2, r8
  401354:	464b      	mov	r3, r9
  401356:	f001 f85d 	bl	402414 <__aeabi_dmul>
  40135a:	a33b      	add	r3, pc, #236	; (adr r3, 401448 <__kernel_cos+0x218>)
  40135c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401360:	f000 fea6 	bl	4020b0 <__adddf3>
  401364:	4642      	mov	r2, r8
  401366:	464b      	mov	r3, r9
  401368:	f001 f854 	bl	402414 <__aeabi_dmul>
  40136c:	a338      	add	r3, pc, #224	; (adr r3, 401450 <__kernel_cos+0x220>)
  40136e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401372:	f000 fe9b 	bl	4020ac <__aeabi_dsub>
  401376:	4642      	mov	r2, r8
  401378:	464b      	mov	r3, r9
  40137a:	f001 f84b 	bl	402414 <__aeabi_dmul>
  40137e:	a336      	add	r3, pc, #216	; (adr r3, 401458 <__kernel_cos+0x228>)
  401380:	e9d3 2300 	ldrd	r2, r3, [r3]
  401384:	f000 fe94 	bl	4020b0 <__adddf3>
  401388:	464b      	mov	r3, r9
  40138a:	4642      	mov	r2, r8
  40138c:	f001 f842 	bl	402414 <__aeabi_dmul>
  401390:	4b35      	ldr	r3, [pc, #212]	; (401468 <__kernel_cos+0x238>)
  401392:	429e      	cmp	r6, r3
  401394:	e9cd 0100 	strd	r0, r1, [sp]
  401398:	dd97      	ble.n	4012ca <__kernel_cos+0x9a>
  40139a:	4b34      	ldr	r3, [pc, #208]	; (40146c <__kernel_cos+0x23c>)
  40139c:	429e      	cmp	r6, r3
  40139e:	f04f 0200 	mov.w	r2, #0
  4013a2:	dc38      	bgt.n	401416 <__kernel_cos+0x1e6>
  4013a4:	f5a6 1300 	sub.w	r3, r6, #2097152	; 0x200000
  4013a8:	2000      	movs	r0, #0
  4013aa:	492e      	ldr	r1, [pc, #184]	; (401464 <__kernel_cos+0x234>)
  4013ac:	4616      	mov	r6, r2
  4013ae:	461f      	mov	r7, r3
  4013b0:	f000 fe7c 	bl	4020ac <__aeabi_dsub>
  4013b4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4013b8:	2200      	movs	r2, #0
  4013ba:	4b29      	ldr	r3, [pc, #164]	; (401460 <__kernel_cos+0x230>)
  4013bc:	4640      	mov	r0, r8
  4013be:	4649      	mov	r1, r9
  4013c0:	f001 f828 	bl	402414 <__aeabi_dmul>
  4013c4:	4632      	mov	r2, r6
  4013c6:	463b      	mov	r3, r7
  4013c8:	f000 fe70 	bl	4020ac <__aeabi_dsub>
  4013cc:	e9dd 2300 	ldrd	r2, r3, [sp]
  4013d0:	4606      	mov	r6, r0
  4013d2:	460f      	mov	r7, r1
  4013d4:	4640      	mov	r0, r8
  4013d6:	4649      	mov	r1, r9
  4013d8:	f001 f81c 	bl	402414 <__aeabi_dmul>
  4013dc:	4652      	mov	r2, sl
  4013de:	4680      	mov	r8, r0
  4013e0:	4689      	mov	r9, r1
  4013e2:	465b      	mov	r3, fp
  4013e4:	4628      	mov	r0, r5
  4013e6:	4621      	mov	r1, r4
  4013e8:	f001 f814 	bl	402414 <__aeabi_dmul>
  4013ec:	4602      	mov	r2, r0
  4013ee:	460b      	mov	r3, r1
  4013f0:	4640      	mov	r0, r8
  4013f2:	4649      	mov	r1, r9
  4013f4:	f000 fe5a 	bl	4020ac <__aeabi_dsub>
  4013f8:	4602      	mov	r2, r0
  4013fa:	460b      	mov	r3, r1
  4013fc:	4630      	mov	r0, r6
  4013fe:	4639      	mov	r1, r7
  401400:	f000 fe54 	bl	4020ac <__aeabi_dsub>
  401404:	4602      	mov	r2, r0
  401406:	460b      	mov	r3, r1
  401408:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40140c:	f000 fe4e 	bl	4020ac <__aeabi_dsub>
  401410:	b005      	add	sp, #20
  401412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401416:	4b16      	ldr	r3, [pc, #88]	; (401470 <__kernel_cos+0x240>)
  401418:	4f16      	ldr	r7, [pc, #88]	; (401474 <__kernel_cos+0x244>)
  40141a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  40141e:	2600      	movs	r6, #0
  401420:	e7ca      	b.n	4013b8 <__kernel_cos+0x188>
  401422:	4910      	ldr	r1, [pc, #64]	; (401464 <__kernel_cos+0x234>)
  401424:	2000      	movs	r0, #0
  401426:	b005      	add	sp, #20
  401428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40142c:	f3af 8000 	nop.w
  401430:	be8838d4 	.word	0xbe8838d4
  401434:	bda8fae9 	.word	0xbda8fae9
  401438:	bdb4b1c4 	.word	0xbdb4b1c4
  40143c:	3e21ee9e 	.word	0x3e21ee9e
  401440:	809c52ad 	.word	0x809c52ad
  401444:	3e927e4f 	.word	0x3e927e4f
  401448:	19cb1590 	.word	0x19cb1590
  40144c:	3efa01a0 	.word	0x3efa01a0
  401450:	16c15177 	.word	0x16c15177
  401454:	3f56c16c 	.word	0x3f56c16c
  401458:	5555554c 	.word	0x5555554c
  40145c:	3fa55555 	.word	0x3fa55555
  401460:	3fe00000 	.word	0x3fe00000
  401464:	3ff00000 	.word	0x3ff00000
  401468:	3fd33332 	.word	0x3fd33332
  40146c:	3fe90000 	.word	0x3fe90000
  401470:	3fe70000 	.word	0x3fe70000
  401474:	3fd20000 	.word	0x3fd20000

00401478 <__kernel_rem_pio2>:
  401478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40147c:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
  401480:	4c9c      	ldr	r4, [pc, #624]	; (4016f4 <__kernel_rem_pio2+0x27c>)
  401482:	9ea2      	ldr	r6, [sp, #648]	; 0x288
  401484:	4d9c      	ldr	r5, [pc, #624]	; (4016f8 <__kernel_rem_pio2+0x280>)
  401486:	f854 4026 	ldr.w	r4, [r4, r6, lsl #2]
  40148a:	9405      	str	r4, [sp, #20]
  40148c:	4626      	mov	r6, r4
  40148e:	1ed4      	subs	r4, r2, #3
  401490:	fb85 7504 	smull	r7, r5, r5, r4
  401494:	17e4      	asrs	r4, r4, #31
  401496:	ebc4 04a5 	rsb	r4, r4, r5, asr #2
  40149a:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
  40149e:	461d      	mov	r5, r3
  4014a0:	9308      	str	r3, [sp, #32]
  4014a2:	1c63      	adds	r3, r4, #1
  4014a4:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
  4014a8:	3d01      	subs	r5, #1
  4014aa:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  4014ae:	9304      	str	r3, [sp, #16]
  4014b0:	462b      	mov	r3, r5
  4014b2:	9409      	str	r4, [sp, #36]	; 0x24
  4014b4:	9502      	str	r5, [sp, #8]
  4014b6:	1b65      	subs	r5, r4, r5
  4014b8:	18f4      	adds	r4, r6, r3
  4014ba:	9003      	str	r0, [sp, #12]
  4014bc:	9106      	str	r1, [sp, #24]
  4014be:	d41a      	bmi.n	4014f6 <__kernel_rem_pio2+0x7e>
  4014c0:	442c      	add	r4, r5
  4014c2:	3401      	adds	r4, #1
  4014c4:	f10d 0878 	add.w	r8, sp, #120	; 0x78
  4014c8:	2600      	movs	r6, #0
  4014ca:	2700      	movs	r7, #0
  4014cc:	f8dd 928c 	ldr.w	r9, [sp, #652]	; 0x28c
  4014d0:	e008      	b.n	4014e4 <__kernel_rem_pio2+0x6c>
  4014d2:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
  4014d6:	f000 ff37 	bl	402348 <__aeabi_i2d>
  4014da:	3501      	adds	r5, #1
  4014dc:	42a5      	cmp	r5, r4
  4014de:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  4014e2:	d008      	beq.n	4014f6 <__kernel_rem_pio2+0x7e>
  4014e4:	2d00      	cmp	r5, #0
  4014e6:	daf4      	bge.n	4014d2 <__kernel_rem_pio2+0x5a>
  4014e8:	3501      	adds	r5, #1
  4014ea:	4630      	mov	r0, r6
  4014ec:	4639      	mov	r1, r7
  4014ee:	42a5      	cmp	r5, r4
  4014f0:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  4014f4:	d1f6      	bne.n	4014e4 <__kernel_rem_pio2+0x6c>
  4014f6:	9b05      	ldr	r3, [sp, #20]
  4014f8:	2b00      	cmp	r3, #0
  4014fa:	db2e      	blt.n	40155a <__kernel_rem_pio2+0xe2>
  4014fc:	9b08      	ldr	r3, [sp, #32]
  4014fe:	ea4f 09c3 	mov.w	r9, r3, lsl #3
  401502:	9b03      	ldr	r3, [sp, #12]
  401504:	f1a9 0808 	sub.w	r8, r9, #8
  401508:	4498      	add	r8, r3
  40150a:	ab20      	add	r3, sp, #128	; 0x80
  40150c:	4499      	add	r9, r3
  40150e:	9b05      	ldr	r3, [sp, #20]
  401510:	aa70      	add	r2, sp, #448	; 0x1c0
  401512:	eb02 0bc3 	add.w	fp, r2, r3, lsl #3
  401516:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  40151a:	9b02      	ldr	r3, [sp, #8]
  40151c:	2b00      	cmp	r3, #0
  40151e:	f2c0 830f 	blt.w	401b40 <__kernel_rem_pio2+0x6c8>
  401522:	9b03      	ldr	r3, [sp, #12]
  401524:	464d      	mov	r5, r9
  401526:	f1a3 0408 	sub.w	r4, r3, #8
  40152a:	2600      	movs	r6, #0
  40152c:	2700      	movs	r7, #0
  40152e:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  401532:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  401536:	f000 ff6d 	bl	402414 <__aeabi_dmul>
  40153a:	4602      	mov	r2, r0
  40153c:	460b      	mov	r3, r1
  40153e:	4630      	mov	r0, r6
  401540:	4639      	mov	r1, r7
  401542:	f000 fdb5 	bl	4020b0 <__adddf3>
  401546:	4544      	cmp	r4, r8
  401548:	4606      	mov	r6, r0
  40154a:	460f      	mov	r7, r1
  40154c:	d1ef      	bne.n	40152e <__kernel_rem_pio2+0xb6>
  40154e:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  401552:	45da      	cmp	sl, fp
  401554:	f109 0908 	add.w	r9, r9, #8
  401558:	d1df      	bne.n	40151a <__kernel_rem_pio2+0xa2>
  40155a:	9805      	ldr	r0, [sp, #20]
  40155c:	9a08      	ldr	r2, [sp, #32]
  40155e:	9000      	str	r0, [sp, #0]
  401560:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  401564:	3b01      	subs	r3, #1
  401566:	009b      	lsls	r3, r3, #2
  401568:	ac0c      	add	r4, sp, #48	; 0x30
  40156a:	1f19      	subs	r1, r3, #4
  40156c:	4423      	add	r3, r4
  40156e:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
  401572:	930b      	str	r3, [sp, #44]	; 0x2c
  401574:	9b03      	ldr	r3, [sp, #12]
  401576:	3a01      	subs	r2, #1
  401578:	4421      	add	r1, r4
  40157a:	910a      	str	r1, [sp, #40]	; 0x28
  40157c:	eb03 0bc2 	add.w	fp, r3, r2, lsl #3
  401580:	9a00      	ldr	r2, [sp, #0]
  401582:	a998      	add	r1, sp, #608	; 0x260
  401584:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  401588:	2a00      	cmp	r2, #0
  40158a:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
  40158e:	4613      	mov	r3, r2
  401590:	dd2b      	ble.n	4015ea <__kernel_rem_pio2+0x172>
  401592:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  401596:	f1a8 08a8 	sub.w	r8, r8, #168	; 0xa8
  40159a:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  40159e:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  4015a2:	2200      	movs	r2, #0
  4015a4:	4b55      	ldr	r3, [pc, #340]	; (4016fc <__kernel_rem_pio2+0x284>)
  4015a6:	4620      	mov	r0, r4
  4015a8:	4629      	mov	r1, r5
  4015aa:	f000 ff33 	bl	402414 <__aeabi_dmul>
  4015ae:	f001 f9cb 	bl	402948 <__aeabi_d2iz>
  4015b2:	f000 fec9 	bl	402348 <__aeabi_i2d>
  4015b6:	2200      	movs	r2, #0
  4015b8:	4b51      	ldr	r3, [pc, #324]	; (401700 <__kernel_rem_pio2+0x288>)
  4015ba:	4606      	mov	r6, r0
  4015bc:	460f      	mov	r7, r1
  4015be:	f000 ff29 	bl	402414 <__aeabi_dmul>
  4015c2:	4602      	mov	r2, r0
  4015c4:	460b      	mov	r3, r1
  4015c6:	4620      	mov	r0, r4
  4015c8:	4629      	mov	r1, r5
  4015ca:	f000 fd6f 	bl	4020ac <__aeabi_dsub>
  4015ce:	f001 f9bb 	bl	402948 <__aeabi_d2iz>
  4015d2:	e878 2302 	ldrd	r2, r3, [r8], #-8
  4015d6:	f849 0f04 	str.w	r0, [r9, #4]!
  4015da:	4639      	mov	r1, r7
  4015dc:	4630      	mov	r0, r6
  4015de:	f000 fd67 	bl	4020b0 <__adddf3>
  4015e2:	45d0      	cmp	r8, sl
  4015e4:	4604      	mov	r4, r0
  4015e6:	460d      	mov	r5, r1
  4015e8:	d1db      	bne.n	4015a2 <__kernel_rem_pio2+0x12a>
  4015ea:	f8dd 9010 	ldr.w	r9, [sp, #16]
  4015ee:	4620      	mov	r0, r4
  4015f0:	4629      	mov	r1, r5
  4015f2:	464a      	mov	r2, r9
  4015f4:	f000 fcd0 	bl	401f98 <scalbn>
  4015f8:	2200      	movs	r2, #0
  4015fa:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
  4015fe:	4604      	mov	r4, r0
  401600:	460d      	mov	r5, r1
  401602:	f000 ff07 	bl	402414 <__aeabi_dmul>
  401606:	f000 fc3b 	bl	401e80 <floor>
  40160a:	2200      	movs	r2, #0
  40160c:	4b3d      	ldr	r3, [pc, #244]	; (401704 <__kernel_rem_pio2+0x28c>)
  40160e:	f000 ff01 	bl	402414 <__aeabi_dmul>
  401612:	4602      	mov	r2, r0
  401614:	460b      	mov	r3, r1
  401616:	4620      	mov	r0, r4
  401618:	4629      	mov	r1, r5
  40161a:	f000 fd47 	bl	4020ac <__aeabi_dsub>
  40161e:	460d      	mov	r5, r1
  401620:	4604      	mov	r4, r0
  401622:	f001 f991 	bl	402948 <__aeabi_d2iz>
  401626:	4680      	mov	r8, r0
  401628:	f000 fe8e 	bl	402348 <__aeabi_i2d>
  40162c:	460b      	mov	r3, r1
  40162e:	4602      	mov	r2, r0
  401630:	4629      	mov	r1, r5
  401632:	4620      	mov	r0, r4
  401634:	f000 fd3a 	bl	4020ac <__aeabi_dsub>
  401638:	464b      	mov	r3, r9
  40163a:	2b00      	cmp	r3, #0
  40163c:	4606      	mov	r6, r0
  40163e:	460f      	mov	r7, r1
  401640:	f340 80f7 	ble.w	401832 <__kernel_rem_pio2+0x3ba>
  401644:	9a00      	ldr	r2, [sp, #0]
  401646:	a90c      	add	r1, sp, #48	; 0x30
  401648:	3a01      	subs	r2, #1
  40164a:	f1c9 0318 	rsb	r3, r9, #24
  40164e:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
  401652:	fa45 f103 	asr.w	r1, r5, r3
  401656:	fa01 f303 	lsl.w	r3, r1, r3
  40165a:	a80c      	add	r0, sp, #48	; 0x30
  40165c:	1aeb      	subs	r3, r5, r3
  40165e:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  401662:	f1c9 0517 	rsb	r5, r9, #23
  401666:	4488      	add	r8, r1
  401668:	fa43 f505 	asr.w	r5, r3, r5
  40166c:	2d00      	cmp	r5, #0
  40166e:	dd63      	ble.n	401738 <__kernel_rem_pio2+0x2c0>
  401670:	9b00      	ldr	r3, [sp, #0]
  401672:	2b00      	cmp	r3, #0
  401674:	f108 0801 	add.w	r8, r8, #1
  401678:	f340 8281 	ble.w	401b7e <__kernel_rem_pio2+0x706>
  40167c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40167e:	2c00      	cmp	r4, #0
  401680:	f000 8318 	beq.w	401cb4 <__kernel_rem_pio2+0x83c>
  401684:	2001      	movs	r0, #1
  401686:	2300      	movs	r3, #0
  401688:	aa0c      	add	r2, sp, #48	; 0x30
  40168a:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
  40168e:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
  401692:	9a00      	ldr	r2, [sp, #0]
  401694:	4282      	cmp	r2, r0
  401696:	dd19      	ble.n	4016cc <__kernel_rem_pio2+0x254>
  401698:	aa0c      	add	r2, sp, #48	; 0x30
  40169a:	ac0c      	add	r4, sp, #48	; 0x30
  40169c:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
  4016a0:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
  4016a4:	1a51      	subs	r1, r2, r1
  4016a6:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
  4016aa:	9900      	ldr	r1, [sp, #0]
  4016ac:	3302      	adds	r3, #2
  4016ae:	4299      	cmp	r1, r3
  4016b0:	dd0c      	ble.n	4016cc <__kernel_rem_pio2+0x254>
  4016b2:	4610      	mov	r0, r2
  4016b4:	9a00      	ldr	r2, [sp, #0]
  4016b6:	a90c      	add	r1, sp, #48	; 0x30
  4016b8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  4016bc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
  4016c0:	681a      	ldr	r2, [r3, #0]
  4016c2:	1a82      	subs	r2, r0, r2
  4016c4:	f843 2b04 	str.w	r2, [r3], #4
  4016c8:	428b      	cmp	r3, r1
  4016ca:	d1f9      	bne.n	4016c0 <__kernel_rem_pio2+0x248>
  4016cc:	9b04      	ldr	r3, [sp, #16]
  4016ce:	2b00      	cmp	r3, #0
  4016d0:	dd1a      	ble.n	401708 <__kernel_rem_pio2+0x290>
  4016d2:	9b04      	ldr	r3, [sp, #16]
  4016d4:	2b01      	cmp	r3, #1
  4016d6:	f04f 0401 	mov.w	r4, #1
  4016da:	f040 8258 	bne.w	401b8e <__kernel_rem_pio2+0x716>
  4016de:	9b00      	ldr	r3, [sp, #0]
  4016e0:	1e5a      	subs	r2, r3, #1
  4016e2:	ab0c      	add	r3, sp, #48	; 0x30
  4016e4:	a90c      	add	r1, sp, #48	; 0x30
  4016e6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  4016ea:	f3c3 0316 	ubfx	r3, r3, #0, #23
  4016ee:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  4016f2:	e258      	b.n	401ba6 <__kernel_rem_pio2+0x72e>
  4016f4:	00402f90 	.word	0x00402f90
  4016f8:	2aaaaaab 	.word	0x2aaaaaab
  4016fc:	3e700000 	.word	0x3e700000
  401700:	41700000 	.word	0x41700000
  401704:	40200000 	.word	0x40200000
  401708:	2d02      	cmp	r5, #2
  40170a:	d115      	bne.n	401738 <__kernel_rem_pio2+0x2c0>
  40170c:	4632      	mov	r2, r6
  40170e:	463b      	mov	r3, r7
  401710:	2000      	movs	r0, #0
  401712:	4997      	ldr	r1, [pc, #604]	; (401970 <__kernel_rem_pio2+0x4f8>)
  401714:	f000 fcca 	bl	4020ac <__aeabi_dsub>
  401718:	4606      	mov	r6, r0
  40171a:	460f      	mov	r7, r1
  40171c:	9a04      	ldr	r2, [sp, #16]
  40171e:	4994      	ldr	r1, [pc, #592]	; (401970 <__kernel_rem_pio2+0x4f8>)
  401720:	2000      	movs	r0, #0
  401722:	f000 fc39 	bl	401f98 <scalbn>
  401726:	4602      	mov	r2, r0
  401728:	460b      	mov	r3, r1
  40172a:	4630      	mov	r0, r6
  40172c:	4639      	mov	r1, r7
  40172e:	f000 fcbd 	bl	4020ac <__aeabi_dsub>
  401732:	2502      	movs	r5, #2
  401734:	4606      	mov	r6, r0
  401736:	460f      	mov	r7, r1
  401738:	2200      	movs	r2, #0
  40173a:	2300      	movs	r3, #0
  40173c:	4630      	mov	r0, r6
  40173e:	4639      	mov	r1, r7
  401740:	f001 f8d0 	bl	4028e4 <__aeabi_dcmpeq>
  401744:	2800      	cmp	r0, #0
  401746:	f000 8252 	beq.w	401bee <__kernel_rem_pio2+0x776>
  40174a:	9a00      	ldr	r2, [sp, #0]
  40174c:	9b05      	ldr	r3, [sp, #20]
  40174e:	1e50      	subs	r0, r2, #1
  401750:	4283      	cmp	r3, r0
  401752:	dc0f      	bgt.n	401774 <__kernel_rem_pio2+0x2fc>
  401754:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
  401758:	3b01      	subs	r3, #1
  40175a:	aa0c      	add	r2, sp, #48	; 0x30
  40175c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40175e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  401762:	2200      	movs	r2, #0
  401764:	f853 1904 	ldr.w	r1, [r3], #-4
  401768:	42a3      	cmp	r3, r4
  40176a:	ea42 0201 	orr.w	r2, r2, r1
  40176e:	d1f9      	bne.n	401764 <__kernel_rem_pio2+0x2ec>
  401770:	2a00      	cmp	r2, #0
  401772:	d16f      	bne.n	401854 <__kernel_rem_pio2+0x3dc>
  401774:	9b05      	ldr	r3, [sp, #20]
  401776:	aa0c      	add	r2, sp, #48	; 0x30
  401778:	3b01      	subs	r3, #1
  40177a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  40177e:	2b00      	cmp	r3, #0
  401780:	f040 8233 	bne.w	401bea <__kernel_rem_pio2+0x772>
  401784:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  401786:	2301      	movs	r3, #1
  401788:	f852 1904 	ldr.w	r1, [r2], #-4
  40178c:	3301      	adds	r3, #1
  40178e:	2900      	cmp	r1, #0
  401790:	d0fa      	beq.n	401788 <__kernel_rem_pio2+0x310>
  401792:	9a00      	ldr	r2, [sp, #0]
  401794:	18d3      	adds	r3, r2, r3
  401796:	f102 0a01 	add.w	sl, r2, #1
  40179a:	459a      	cmp	sl, r3
  40179c:	9307      	str	r3, [sp, #28]
  40179e:	dc3d      	bgt.n	40181c <__kernel_rem_pio2+0x3a4>
  4017a0:	9b00      	ldr	r3, [sp, #0]
  4017a2:	9908      	ldr	r1, [sp, #32]
  4017a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4017a6:	440b      	add	r3, r1
  4017a8:	9907      	ldr	r1, [sp, #28]
  4017aa:	eb0a 0802 	add.w	r8, sl, r2
  4017ae:	4699      	mov	r9, r3
  4017b0:	ab20      	add	r3, sp, #128	; 0x80
  4017b2:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
  4017b6:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
  4017ba:	188b      	adds	r3, r1, r2
  4017bc:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  4017be:	f108 38ff 	add.w	r8, r8, #4294967295
  4017c2:	eb02 0888 	add.w	r8, r2, r8, lsl #2
  4017c6:	aa70      	add	r2, sp, #448	; 0x1c0
  4017c8:	eb02 0aca 	add.w	sl, r2, sl, lsl #3
  4017cc:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  4017ce:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4017d2:	9300      	str	r3, [sp, #0]
  4017d4:	f858 0f04 	ldr.w	r0, [r8, #4]!
  4017d8:	f000 fdb6 	bl	402348 <__aeabi_i2d>
  4017dc:	9b02      	ldr	r3, [sp, #8]
  4017de:	2b00      	cmp	r3, #0
  4017e0:	e8e9 0102 	strd	r0, r1, [r9], #8
  4017e4:	db1d      	blt.n	401822 <__kernel_rem_pio2+0x3aa>
  4017e6:	9b03      	ldr	r3, [sp, #12]
  4017e8:	464d      	mov	r5, r9
  4017ea:	f1a3 0408 	sub.w	r4, r3, #8
  4017ee:	2600      	movs	r6, #0
  4017f0:	2700      	movs	r7, #0
  4017f2:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  4017f6:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  4017fa:	f000 fe0b 	bl	402414 <__aeabi_dmul>
  4017fe:	4602      	mov	r2, r0
  401800:	460b      	mov	r3, r1
  401802:	4630      	mov	r0, r6
  401804:	4639      	mov	r1, r7
  401806:	f000 fc53 	bl	4020b0 <__adddf3>
  40180a:	455c      	cmp	r4, fp
  40180c:	4606      	mov	r6, r0
  40180e:	460f      	mov	r7, r1
  401810:	d1ef      	bne.n	4017f2 <__kernel_rem_pio2+0x37a>
  401812:	9b00      	ldr	r3, [sp, #0]
  401814:	4598      	cmp	r8, r3
  401816:	e8ea 6702 	strd	r6, r7, [sl], #8
  40181a:	d1db      	bne.n	4017d4 <__kernel_rem_pio2+0x35c>
  40181c:	9b07      	ldr	r3, [sp, #28]
  40181e:	9300      	str	r3, [sp, #0]
  401820:	e6ae      	b.n	401580 <__kernel_rem_pio2+0x108>
  401822:	9b00      	ldr	r3, [sp, #0]
  401824:	2600      	movs	r6, #0
  401826:	2700      	movs	r7, #0
  401828:	4598      	cmp	r8, r3
  40182a:	e8ea 6702 	strd	r6, r7, [sl], #8
  40182e:	d1d1      	bne.n	4017d4 <__kernel_rem_pio2+0x35c>
  401830:	e7f4      	b.n	40181c <__kernel_rem_pio2+0x3a4>
  401832:	d106      	bne.n	401842 <__kernel_rem_pio2+0x3ca>
  401834:	9b00      	ldr	r3, [sp, #0]
  401836:	aa0c      	add	r2, sp, #48	; 0x30
  401838:	3b01      	subs	r3, #1
  40183a:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  40183e:	15ed      	asrs	r5, r5, #23
  401840:	e714      	b.n	40166c <__kernel_rem_pio2+0x1f4>
  401842:	2200      	movs	r2, #0
  401844:	4b4b      	ldr	r3, [pc, #300]	; (401974 <__kernel_rem_pio2+0x4fc>)
  401846:	f001 f86b 	bl	402920 <__aeabi_dcmpge>
  40184a:	2800      	cmp	r0, #0
  40184c:	f040 8182 	bne.w	401b54 <__kernel_rem_pio2+0x6dc>
  401850:	4605      	mov	r5, r0
  401852:	e771      	b.n	401738 <__kernel_rem_pio2+0x2c0>
  401854:	a90c      	add	r1, sp, #48	; 0x30
  401856:	9502      	str	r5, [sp, #8]
  401858:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
  40185c:	9904      	ldr	r1, [sp, #16]
  40185e:	f8cd 801c 	str.w	r8, [sp, #28]
  401862:	3918      	subs	r1, #24
  401864:	4602      	mov	r2, r0
  401866:	9000      	str	r0, [sp, #0]
  401868:	9104      	str	r1, [sp, #16]
  40186a:	b96b      	cbnz	r3, 401888 <__kernel_rem_pio2+0x410>
  40186c:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  401870:	3b01      	subs	r3, #1
  401872:	a80c      	add	r0, sp, #48	; 0x30
  401874:	eb00 0383 	add.w	r3, r0, r3, lsl #2
  401878:	f853 0904 	ldr.w	r0, [r3], #-4
  40187c:	3a01      	subs	r2, #1
  40187e:	3918      	subs	r1, #24
  401880:	2800      	cmp	r0, #0
  401882:	d0f9      	beq.n	401878 <__kernel_rem_pio2+0x400>
  401884:	9200      	str	r2, [sp, #0]
  401886:	9104      	str	r1, [sp, #16]
  401888:	9a04      	ldr	r2, [sp, #16]
  40188a:	4939      	ldr	r1, [pc, #228]	; (401970 <__kernel_rem_pio2+0x4f8>)
  40188c:	2000      	movs	r0, #0
  40188e:	f000 fb83 	bl	401f98 <scalbn>
  401892:	9b00      	ldr	r3, [sp, #0]
  401894:	2b00      	cmp	r3, #0
  401896:	4604      	mov	r4, r0
  401898:	460d      	mov	r5, r1
  40189a:	f2c0 8203 	blt.w	401ca4 <__kernel_rem_pio2+0x82c>
  40189e:	00da      	lsls	r2, r3, #3
  4018a0:	a970      	add	r1, sp, #448	; 0x1c0
  4018a2:	eb01 0b02 	add.w	fp, r1, r2
  4018a6:	9204      	str	r2, [sp, #16]
  4018a8:	aa0c      	add	r2, sp, #48	; 0x30
  4018aa:	eb02 0683 	add.w	r6, r2, r3, lsl #2
  4018ae:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 401978 <__kernel_rem_pio2+0x500>
  4018b2:	f10b 0708 	add.w	r7, fp, #8
  4018b6:	3604      	adds	r6, #4
  4018b8:	f04f 0800 	mov.w	r8, #0
  4018bc:	f856 0d04 	ldr.w	r0, [r6, #-4]!
  4018c0:	f000 fd42 	bl	402348 <__aeabi_i2d>
  4018c4:	4622      	mov	r2, r4
  4018c6:	462b      	mov	r3, r5
  4018c8:	f000 fda4 	bl	402414 <__aeabi_dmul>
  4018cc:	464b      	mov	r3, r9
  4018ce:	e967 0102 	strd	r0, r1, [r7, #-8]!
  4018d2:	4642      	mov	r2, r8
  4018d4:	4620      	mov	r0, r4
  4018d6:	4629      	mov	r1, r5
  4018d8:	f000 fd9c 	bl	402414 <__aeabi_dmul>
  4018dc:	ab0c      	add	r3, sp, #48	; 0x30
  4018de:	429e      	cmp	r6, r3
  4018e0:	4604      	mov	r4, r0
  4018e2:	460d      	mov	r5, r1
  4018e4:	d1ea      	bne.n	4018bc <__kernel_rem_pio2+0x444>
  4018e6:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  4018ea:	f8cd a00c 	str.w	sl, [sp, #12]
  4018ee:	f8dd a014 	ldr.w	sl, [sp, #20]
  4018f2:	f04f 0900 	mov.w	r9, #0
  4018f6:	f1ba 0f00 	cmp.w	sl, #0
  4018fa:	f2c0 813d 	blt.w	401b78 <__kernel_rem_pio2+0x700>
  4018fe:	f8df 807c 	ldr.w	r8, [pc, #124]	; 40197c <__kernel_rem_pio2+0x504>
  401902:	465d      	mov	r5, fp
  401904:	a118      	add	r1, pc, #96	; (adr r1, 401968 <__kernel_rem_pio2+0x4f0>)
  401906:	e9d1 0100 	ldrd	r0, r1, [r1]
  40190a:	2600      	movs	r6, #0
  40190c:	2700      	movs	r7, #0
  40190e:	2400      	movs	r4, #0
  401910:	e003      	b.n	40191a <__kernel_rem_pio2+0x4a2>
  401912:	454c      	cmp	r4, r9
  401914:	dc10      	bgt.n	401938 <__kernel_rem_pio2+0x4c0>
  401916:	e8f8 0102 	ldrd	r0, r1, [r8], #8
  40191a:	e8f5 2302 	ldrd	r2, r3, [r5], #8
  40191e:	f000 fd79 	bl	402414 <__aeabi_dmul>
  401922:	4602      	mov	r2, r0
  401924:	460b      	mov	r3, r1
  401926:	4630      	mov	r0, r6
  401928:	4639      	mov	r1, r7
  40192a:	f000 fbc1 	bl	4020b0 <__adddf3>
  40192e:	3401      	adds	r4, #1
  401930:	45a2      	cmp	sl, r4
  401932:	4606      	mov	r6, r0
  401934:	460f      	mov	r7, r1
  401936:	daec      	bge.n	401912 <__kernel_rem_pio2+0x49a>
  401938:	9b03      	ldr	r3, [sp, #12]
  40193a:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  40193e:	f1ab 0b08 	sub.w	fp, fp, #8
  401942:	e9c3 6700 	strd	r6, r7, [r3]
  401946:	ab6e      	add	r3, sp, #440	; 0x1b8
  401948:	455b      	cmp	r3, fp
  40194a:	f109 0901 	add.w	r9, r9, #1
  40194e:	d1d2      	bne.n	4018f6 <__kernel_rem_pio2+0x47e>
  401950:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  401952:	f8dd a00c 	ldr.w	sl, [sp, #12]
  401956:	2b03      	cmp	r3, #3
  401958:	f200 808b 	bhi.w	401a72 <__kernel_rem_pio2+0x5fa>
  40195c:	e8df f013 	tbh	[pc, r3, lsl #1]
  401960:	009000d1 	.word	0x009000d1
  401964:	00100090 	.word	0x00100090
  401968:	40000000 	.word	0x40000000
  40196c:	3ff921fb 	.word	0x3ff921fb
  401970:	3ff00000 	.word	0x3ff00000
  401974:	3fe00000 	.word	0x3fe00000
  401978:	3e700000 	.word	0x3e700000
  40197c:	00402f58 	.word	0x00402f58
  401980:	9b00      	ldr	r3, [sp, #0]
  401982:	2b00      	cmp	r3, #0
  401984:	f340 81a4 	ble.w	401cd0 <__kernel_rem_pio2+0x858>
  401988:	9b04      	ldr	r3, [sp, #16]
  40198a:	eb0a 0803 	add.w	r8, sl, r3
  40198e:	e9d8 6700 	ldrd	r6, r7, [r8]
  401992:	46d3      	mov	fp, sl
  401994:	e958 9a02 	ldrd	r9, sl, [r8, #-8]
  401998:	4632      	mov	r2, r6
  40199a:	463b      	mov	r3, r7
  40199c:	4648      	mov	r0, r9
  40199e:	4651      	mov	r1, sl
  4019a0:	f000 fb86 	bl	4020b0 <__adddf3>
  4019a4:	4604      	mov	r4, r0
  4019a6:	460d      	mov	r5, r1
  4019a8:	4602      	mov	r2, r0
  4019aa:	460b      	mov	r3, r1
  4019ac:	4648      	mov	r0, r9
  4019ae:	4651      	mov	r1, sl
  4019b0:	f000 fb7c 	bl	4020ac <__aeabi_dsub>
  4019b4:	4632      	mov	r2, r6
  4019b6:	463b      	mov	r3, r7
  4019b8:	f000 fb7a 	bl	4020b0 <__adddf3>
  4019bc:	e9c8 0100 	strd	r0, r1, [r8]
  4019c0:	e968 4502 	strd	r4, r5, [r8, #-8]!
  4019c4:	45c3      	cmp	fp, r8
  4019c6:	4626      	mov	r6, r4
  4019c8:	462f      	mov	r7, r5
  4019ca:	d1e3      	bne.n	401994 <__kernel_rem_pio2+0x51c>
  4019cc:	9b00      	ldr	r3, [sp, #0]
  4019ce:	2b01      	cmp	r3, #1
  4019d0:	46da      	mov	sl, fp
  4019d2:	f340 817d 	ble.w	401cd0 <__kernel_rem_pio2+0x858>
  4019d6:	9b04      	ldr	r3, [sp, #16]
  4019d8:	445b      	add	r3, fp
  4019da:	e9d3 6700 	ldrd	r6, r7, [r3]
  4019de:	4698      	mov	r8, r3
  4019e0:	4699      	mov	r9, r3
  4019e2:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
  4019e6:	e959 3402 	ldrd	r3, r4, [r9, #-8]
  4019ea:	4632      	mov	r2, r6
  4019ec:	4618      	mov	r0, r3
  4019ee:	4621      	mov	r1, r4
  4019f0:	463b      	mov	r3, r7
  4019f2:	e9cd 0100 	strd	r0, r1, [sp]
  4019f6:	f000 fb5b 	bl	4020b0 <__adddf3>
  4019fa:	4604      	mov	r4, r0
  4019fc:	460d      	mov	r5, r1
  4019fe:	4602      	mov	r2, r0
  401a00:	460b      	mov	r3, r1
  401a02:	e9dd 0100 	ldrd	r0, r1, [sp]
  401a06:	f000 fb51 	bl	4020ac <__aeabi_dsub>
  401a0a:	4632      	mov	r2, r6
  401a0c:	463b      	mov	r3, r7
  401a0e:	f000 fb4f 	bl	4020b0 <__adddf3>
  401a12:	e9c9 0100 	strd	r0, r1, [r9]
  401a16:	e969 4502 	strd	r4, r5, [r9, #-8]!
  401a1a:	45cb      	cmp	fp, r9
  401a1c:	4626      	mov	r6, r4
  401a1e:	462f      	mov	r7, r5
  401a20:	d1e1      	bne.n	4019e6 <__kernel_rem_pio2+0x56e>
  401a22:	2300      	movs	r3, #0
  401a24:	f108 0808 	add.w	r8, r8, #8
  401a28:	461d      	mov	r5, r3
  401a2a:	ac4c      	add	r4, sp, #304	; 0x130
  401a2c:	4618      	mov	r0, r3
  401a2e:	4629      	mov	r1, r5
  401a30:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
  401a34:	f000 fb3c 	bl	4020b0 <__adddf3>
  401a38:	4544      	cmp	r4, r8
  401a3a:	4603      	mov	r3, r0
  401a3c:	460d      	mov	r5, r1
  401a3e:	d1f5      	bne.n	401a2c <__kernel_rem_pio2+0x5b4>
  401a40:	9a02      	ldr	r2, [sp, #8]
  401a42:	2a00      	cmp	r2, #0
  401a44:	f000 8120 	beq.w	401c88 <__kernel_rem_pio2+0x810>
  401a48:	f8da 4004 	ldr.w	r4, [sl, #4]
  401a4c:	f8da 200c 	ldr.w	r2, [sl, #12]
  401a50:	9f06      	ldr	r7, [sp, #24]
  401a52:	f8da 1000 	ldr.w	r1, [sl]
  401a56:	f8da 0008 	ldr.w	r0, [sl, #8]
  401a5a:	613b      	str	r3, [r7, #16]
  401a5c:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
  401a60:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
  401a64:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  401a68:	617d      	str	r5, [r7, #20]
  401a6a:	607c      	str	r4, [r7, #4]
  401a6c:	60fa      	str	r2, [r7, #12]
  401a6e:	6039      	str	r1, [r7, #0]
  401a70:	60b8      	str	r0, [r7, #8]
  401a72:	9b07      	ldr	r3, [sp, #28]
  401a74:	f003 0007 	and.w	r0, r3, #7
  401a78:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  401a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a80:	9c04      	ldr	r4, [sp, #16]
  401a82:	2600      	movs	r6, #0
  401a84:	3408      	adds	r4, #8
  401a86:	4454      	add	r4, sl
  401a88:	4633      	mov	r3, r6
  401a8a:	4630      	mov	r0, r6
  401a8c:	4619      	mov	r1, r3
  401a8e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  401a92:	f000 fb0d 	bl	4020b0 <__adddf3>
  401a96:	4554      	cmp	r4, sl
  401a98:	4606      	mov	r6, r0
  401a9a:	460b      	mov	r3, r1
  401a9c:	d1f5      	bne.n	401a8a <__kernel_rem_pio2+0x612>
  401a9e:	9a02      	ldr	r2, [sp, #8]
  401aa0:	4630      	mov	r0, r6
  401aa2:	4619      	mov	r1, r3
  401aa4:	2a00      	cmp	r2, #0
  401aa6:	f000 80da 	beq.w	401c5e <__kernel_rem_pio2+0x7e6>
  401aaa:	9806      	ldr	r0, [sp, #24]
  401aac:	f103 4400 	add.w	r4, r3, #2147483648	; 0x80000000
  401ab0:	4632      	mov	r2, r6
  401ab2:	6044      	str	r4, [r0, #4]
  401ab4:	6006      	str	r6, [r0, #0]
  401ab6:	e9da 0100 	ldrd	r0, r1, [sl]
  401aba:	f000 faf7 	bl	4020ac <__aeabi_dsub>
  401abe:	460b      	mov	r3, r1
  401ac0:	9900      	ldr	r1, [sp, #0]
  401ac2:	2900      	cmp	r1, #0
  401ac4:	4602      	mov	r2, r0
  401ac6:	dd0e      	ble.n	401ae6 <__kernel_rem_pio2+0x66e>
  401ac8:	2401      	movs	r4, #1
  401aca:	4610      	mov	r0, r2
  401acc:	4619      	mov	r1, r3
  401ace:	e9fa 2302 	ldrd	r2, r3, [sl, #8]!
  401ad2:	f000 faed 	bl	4020b0 <__adddf3>
  401ad6:	460b      	mov	r3, r1
  401ad8:	9900      	ldr	r1, [sp, #0]
  401ada:	3401      	adds	r4, #1
  401adc:	42a1      	cmp	r1, r4
  401ade:	4602      	mov	r2, r0
  401ae0:	daf3      	bge.n	401aca <__kernel_rem_pio2+0x652>
  401ae2:	9902      	ldr	r1, [sp, #8]
  401ae4:	b109      	cbz	r1, 401aea <__kernel_rem_pio2+0x672>
  401ae6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  401aea:	4619      	mov	r1, r3
  401aec:	9b06      	ldr	r3, [sp, #24]
  401aee:	4610      	mov	r0, r2
  401af0:	e9c3 0102 	strd	r0, r1, [r3, #8]
  401af4:	9b07      	ldr	r3, [sp, #28]
  401af6:	f003 0007 	and.w	r0, r3, #7
  401afa:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  401afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b02:	9c04      	ldr	r4, [sp, #16]
  401b04:	2200      	movs	r2, #0
  401b06:	3408      	adds	r4, #8
  401b08:	4454      	add	r4, sl
  401b0a:	4613      	mov	r3, r2
  401b0c:	4610      	mov	r0, r2
  401b0e:	4619      	mov	r1, r3
  401b10:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  401b14:	f000 facc 	bl	4020b0 <__adddf3>
  401b18:	45a2      	cmp	sl, r4
  401b1a:	4602      	mov	r2, r0
  401b1c:	460b      	mov	r3, r1
  401b1e:	d1f5      	bne.n	401b0c <__kernel_rem_pio2+0x694>
  401b20:	9902      	ldr	r1, [sp, #8]
  401b22:	b109      	cbz	r1, 401b28 <__kernel_rem_pio2+0x6b0>
  401b24:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  401b28:	4619      	mov	r1, r3
  401b2a:	9b06      	ldr	r3, [sp, #24]
  401b2c:	4610      	mov	r0, r2
  401b2e:	e9c3 0100 	strd	r0, r1, [r3]
  401b32:	9b07      	ldr	r3, [sp, #28]
  401b34:	f003 0007 	and.w	r0, r3, #7
  401b38:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  401b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b40:	2600      	movs	r6, #0
  401b42:	2700      	movs	r7, #0
  401b44:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  401b48:	45da      	cmp	sl, fp
  401b4a:	f109 0908 	add.w	r9, r9, #8
  401b4e:	f47f ace4 	bne.w	40151a <__kernel_rem_pio2+0xa2>
  401b52:	e502      	b.n	40155a <__kernel_rem_pio2+0xe2>
  401b54:	9b00      	ldr	r3, [sp, #0]
  401b56:	2b00      	cmp	r3, #0
  401b58:	f108 0801 	add.w	r8, r8, #1
  401b5c:	bfc8      	it	gt
  401b5e:	2502      	movgt	r5, #2
  401b60:	f73f ad8c 	bgt.w	40167c <__kernel_rem_pio2+0x204>
  401b64:	4632      	mov	r2, r6
  401b66:	463b      	mov	r3, r7
  401b68:	2000      	movs	r0, #0
  401b6a:	4963      	ldr	r1, [pc, #396]	; (401cf8 <__kernel_rem_pio2+0x880>)
  401b6c:	f000 fa9e 	bl	4020ac <__aeabi_dsub>
  401b70:	2502      	movs	r5, #2
  401b72:	4606      	mov	r6, r0
  401b74:	460f      	mov	r7, r1
  401b76:	e5df      	b.n	401738 <__kernel_rem_pio2+0x2c0>
  401b78:	2600      	movs	r6, #0
  401b7a:	2700      	movs	r7, #0
  401b7c:	e6dc      	b.n	401938 <__kernel_rem_pio2+0x4c0>
  401b7e:	9b04      	ldr	r3, [sp, #16]
  401b80:	2b00      	cmp	r3, #0
  401b82:	dd26      	ble.n	401bd2 <__kernel_rem_pio2+0x75a>
  401b84:	2400      	movs	r4, #0
  401b86:	9b04      	ldr	r3, [sp, #16]
  401b88:	2b01      	cmp	r3, #1
  401b8a:	f43f ada8 	beq.w	4016de <__kernel_rem_pio2+0x266>
  401b8e:	2b02      	cmp	r3, #2
  401b90:	d109      	bne.n	401ba6 <__kernel_rem_pio2+0x72e>
  401b92:	9b00      	ldr	r3, [sp, #0]
  401b94:	1e5a      	subs	r2, r3, #1
  401b96:	ab0c      	add	r3, sp, #48	; 0x30
  401b98:	a90c      	add	r1, sp, #48	; 0x30
  401b9a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  401b9e:	f3c3 0315 	ubfx	r3, r3, #0, #22
  401ba2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  401ba6:	2d02      	cmp	r5, #2
  401ba8:	f47f adc6 	bne.w	401738 <__kernel_rem_pio2+0x2c0>
  401bac:	4632      	mov	r2, r6
  401bae:	463b      	mov	r3, r7
  401bb0:	2000      	movs	r0, #0
  401bb2:	4951      	ldr	r1, [pc, #324]	; (401cf8 <__kernel_rem_pio2+0x880>)
  401bb4:	f000 fa7a 	bl	4020ac <__aeabi_dsub>
  401bb8:	4606      	mov	r6, r0
  401bba:	460f      	mov	r7, r1
  401bbc:	2c00      	cmp	r4, #0
  401bbe:	f43f adbb 	beq.w	401738 <__kernel_rem_pio2+0x2c0>
  401bc2:	e5ab      	b.n	40171c <__kernel_rem_pio2+0x2a4>
  401bc4:	9900      	ldr	r1, [sp, #0]
  401bc6:	3301      	adds	r3, #1
  401bc8:	4299      	cmp	r1, r3
  401bca:	d178      	bne.n	401cbe <__kernel_rem_pio2+0x846>
  401bcc:	9b04      	ldr	r3, [sp, #16]
  401bce:	2b00      	cmp	r3, #0
  401bd0:	dcd9      	bgt.n	401b86 <__kernel_rem_pio2+0x70e>
  401bd2:	2d02      	cmp	r5, #2
  401bd4:	f47f adb0 	bne.w	401738 <__kernel_rem_pio2+0x2c0>
  401bd8:	4632      	mov	r2, r6
  401bda:	463b      	mov	r3, r7
  401bdc:	2000      	movs	r0, #0
  401bde:	4946      	ldr	r1, [pc, #280]	; (401cf8 <__kernel_rem_pio2+0x880>)
  401be0:	f000 fa64 	bl	4020ac <__aeabi_dsub>
  401be4:	4606      	mov	r6, r0
  401be6:	460f      	mov	r7, r1
  401be8:	e5a6      	b.n	401738 <__kernel_rem_pio2+0x2c0>
  401bea:	2301      	movs	r3, #1
  401bec:	e5d1      	b.n	401792 <__kernel_rem_pio2+0x31a>
  401bee:	4639      	mov	r1, r7
  401bf0:	9f04      	ldr	r7, [sp, #16]
  401bf2:	9502      	str	r5, [sp, #8]
  401bf4:	427a      	negs	r2, r7
  401bf6:	4630      	mov	r0, r6
  401bf8:	f8cd 801c 	str.w	r8, [sp, #28]
  401bfc:	f000 f9cc 	bl	401f98 <scalbn>
  401c00:	2200      	movs	r2, #0
  401c02:	4b3e      	ldr	r3, [pc, #248]	; (401cfc <__kernel_rem_pio2+0x884>)
  401c04:	4604      	mov	r4, r0
  401c06:	460d      	mov	r5, r1
  401c08:	f000 fe8a 	bl	402920 <__aeabi_dcmpge>
  401c0c:	2800      	cmp	r0, #0
  401c0e:	d062      	beq.n	401cd6 <__kernel_rem_pio2+0x85e>
  401c10:	2200      	movs	r2, #0
  401c12:	4b3b      	ldr	r3, [pc, #236]	; (401d00 <__kernel_rem_pio2+0x888>)
  401c14:	4620      	mov	r0, r4
  401c16:	4629      	mov	r1, r5
  401c18:	f000 fbfc 	bl	402414 <__aeabi_dmul>
  401c1c:	f000 fe94 	bl	402948 <__aeabi_d2iz>
  401c20:	4606      	mov	r6, r0
  401c22:	f000 fb91 	bl	402348 <__aeabi_i2d>
  401c26:	2200      	movs	r2, #0
  401c28:	4b34      	ldr	r3, [pc, #208]	; (401cfc <__kernel_rem_pio2+0x884>)
  401c2a:	f000 fbf3 	bl	402414 <__aeabi_dmul>
  401c2e:	4602      	mov	r2, r0
  401c30:	460b      	mov	r3, r1
  401c32:	4620      	mov	r0, r4
  401c34:	4629      	mov	r1, r5
  401c36:	f000 fa39 	bl	4020ac <__aeabi_dsub>
  401c3a:	f000 fe85 	bl	402948 <__aeabi_d2iz>
  401c3e:	9900      	ldr	r1, [sp, #0]
  401c40:	460b      	mov	r3, r1
  401c42:	3301      	adds	r3, #1
  401c44:	461a      	mov	r2, r3
  401c46:	9300      	str	r3, [sp, #0]
  401c48:	463b      	mov	r3, r7
  401c4a:	3318      	adds	r3, #24
  401c4c:	9304      	str	r3, [sp, #16]
  401c4e:	460b      	mov	r3, r1
  401c50:	a90c      	add	r1, sp, #48	; 0x30
  401c52:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  401c56:	4613      	mov	r3, r2
  401c58:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
  401c5c:	e614      	b.n	401888 <__kernel_rem_pio2+0x410>
  401c5e:	9b06      	ldr	r3, [sp, #24]
  401c60:	4632      	mov	r2, r6
  401c62:	e9c3 0100 	strd	r0, r1, [r3]
  401c66:	460b      	mov	r3, r1
  401c68:	e9da 0100 	ldrd	r0, r1, [sl]
  401c6c:	f000 fa1e 	bl	4020ac <__aeabi_dsub>
  401c70:	460b      	mov	r3, r1
  401c72:	9900      	ldr	r1, [sp, #0]
  401c74:	2900      	cmp	r1, #0
  401c76:	4602      	mov	r2, r0
  401c78:	f73f af26 	bgt.w	401ac8 <__kernel_rem_pio2+0x650>
  401c7c:	4619      	mov	r1, r3
  401c7e:	9b06      	ldr	r3, [sp, #24]
  401c80:	4610      	mov	r0, r2
  401c82:	e9c3 0102 	strd	r0, r1, [r3, #8]
  401c86:	e735      	b.n	401af4 <__kernel_rem_pio2+0x67c>
  401c88:	4618      	mov	r0, r3
  401c8a:	4629      	mov	r1, r5
  401c8c:	e9da 2300 	ldrd	r2, r3, [sl]
  401c90:	e9da 4502 	ldrd	r4, r5, [sl, #8]
  401c94:	9f06      	ldr	r7, [sp, #24]
  401c96:	e9c7 0104 	strd	r0, r1, [r7, #16]
  401c9a:	e9c7 2300 	strd	r2, r3, [r7]
  401c9e:	e9c7 4502 	strd	r4, r5, [r7, #8]
  401ca2:	e6e6      	b.n	401a72 <__kernel_rem_pio2+0x5fa>
  401ca4:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  401ca6:	2b03      	cmp	r3, #3
  401ca8:	f63f aee3 	bhi.w	401a72 <__kernel_rem_pio2+0x5fa>
  401cac:	e8df f003 	tbb	[pc, r3]
  401cb0:	0e1c1c21 	.word	0x0e1c1c21
  401cb4:	9b00      	ldr	r3, [sp, #0]
  401cb6:	2b01      	cmp	r3, #1
  401cb8:	dd88      	ble.n	401bcc <__kernel_rem_pio2+0x754>
  401cba:	aa0c      	add	r2, sp, #48	; 0x30
  401cbc:	2301      	movs	r3, #1
  401cbe:	f852 4f04 	ldr.w	r4, [r2, #4]!
  401cc2:	2c00      	cmp	r4, #0
  401cc4:	f43f af7e 	beq.w	401bc4 <__kernel_rem_pio2+0x74c>
  401cc8:	1c58      	adds	r0, r3, #1
  401cca:	e4dd      	b.n	401688 <__kernel_rem_pio2+0x210>
  401ccc:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  401cd0:	2300      	movs	r3, #0
  401cd2:	461d      	mov	r5, r3
  401cd4:	e6b4      	b.n	401a40 <__kernel_rem_pio2+0x5c8>
  401cd6:	4629      	mov	r1, r5
  401cd8:	4620      	mov	r0, r4
  401cda:	f000 fe35 	bl	402948 <__aeabi_d2iz>
  401cde:	9a00      	ldr	r2, [sp, #0]
  401ce0:	a90c      	add	r1, sp, #48	; 0x30
  401ce2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
  401ce6:	e5cf      	b.n	401888 <__kernel_rem_pio2+0x410>
  401ce8:	2600      	movs	r6, #0
  401cea:	4633      	mov	r3, r6
  401cec:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  401cf0:	e6d5      	b.n	401a9e <__kernel_rem_pio2+0x626>
  401cf2:	2200      	movs	r2, #0
  401cf4:	4613      	mov	r3, r2
  401cf6:	e713      	b.n	401b20 <__kernel_rem_pio2+0x6a8>
  401cf8:	3ff00000 	.word	0x3ff00000
  401cfc:	41700000 	.word	0x41700000
  401d00:	3e700000 	.word	0x3e700000
  401d04:	00000000 	.word	0x00000000

00401d08 <__kernel_sin>:
  401d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401d0c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  401d10:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  401d14:	b085      	sub	sp, #20
  401d16:	460c      	mov	r4, r1
  401d18:	4690      	mov	r8, r2
  401d1a:	4699      	mov	r9, r3
  401d1c:	4605      	mov	r5, r0
  401d1e:	da04      	bge.n	401d2a <__kernel_sin+0x22>
  401d20:	f000 fe12 	bl	402948 <__aeabi_d2iz>
  401d24:	2800      	cmp	r0, #0
  401d26:	f000 8085 	beq.w	401e34 <__kernel_sin+0x12c>
  401d2a:	462a      	mov	r2, r5
  401d2c:	4623      	mov	r3, r4
  401d2e:	4628      	mov	r0, r5
  401d30:	4621      	mov	r1, r4
  401d32:	f000 fb6f 	bl	402414 <__aeabi_dmul>
  401d36:	4606      	mov	r6, r0
  401d38:	460f      	mov	r7, r1
  401d3a:	4602      	mov	r2, r0
  401d3c:	460b      	mov	r3, r1
  401d3e:	4628      	mov	r0, r5
  401d40:	4621      	mov	r1, r4
  401d42:	f000 fb67 	bl	402414 <__aeabi_dmul>
  401d46:	a33e      	add	r3, pc, #248	; (adr r3, 401e40 <__kernel_sin+0x138>)
  401d48:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d4c:	4682      	mov	sl, r0
  401d4e:	468b      	mov	fp, r1
  401d50:	4630      	mov	r0, r6
  401d52:	4639      	mov	r1, r7
  401d54:	f000 fb5e 	bl	402414 <__aeabi_dmul>
  401d58:	a33b      	add	r3, pc, #236	; (adr r3, 401e48 <__kernel_sin+0x140>)
  401d5a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d5e:	f000 f9a5 	bl	4020ac <__aeabi_dsub>
  401d62:	4632      	mov	r2, r6
  401d64:	463b      	mov	r3, r7
  401d66:	f000 fb55 	bl	402414 <__aeabi_dmul>
  401d6a:	a339      	add	r3, pc, #228	; (adr r3, 401e50 <__kernel_sin+0x148>)
  401d6c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d70:	f000 f99e 	bl	4020b0 <__adddf3>
  401d74:	4632      	mov	r2, r6
  401d76:	463b      	mov	r3, r7
  401d78:	f000 fb4c 	bl	402414 <__aeabi_dmul>
  401d7c:	a336      	add	r3, pc, #216	; (adr r3, 401e58 <__kernel_sin+0x150>)
  401d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d82:	f000 f993 	bl	4020ac <__aeabi_dsub>
  401d86:	4632      	mov	r2, r6
  401d88:	463b      	mov	r3, r7
  401d8a:	f000 fb43 	bl	402414 <__aeabi_dmul>
  401d8e:	a334      	add	r3, pc, #208	; (adr r3, 401e60 <__kernel_sin+0x158>)
  401d90:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d94:	f000 f98c 	bl	4020b0 <__adddf3>
  401d98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401d9a:	e9cd 0100 	strd	r0, r1, [sp]
  401d9e:	b39b      	cbz	r3, 401e08 <__kernel_sin+0x100>
  401da0:	2200      	movs	r2, #0
  401da2:	4b33      	ldr	r3, [pc, #204]	; (401e70 <__kernel_sin+0x168>)
  401da4:	4640      	mov	r0, r8
  401da6:	4649      	mov	r1, r9
  401da8:	f000 fb34 	bl	402414 <__aeabi_dmul>
  401dac:	e9dd 2300 	ldrd	r2, r3, [sp]
  401db0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401db4:	4650      	mov	r0, sl
  401db6:	4659      	mov	r1, fp
  401db8:	f000 fb2c 	bl	402414 <__aeabi_dmul>
  401dbc:	4602      	mov	r2, r0
  401dbe:	460b      	mov	r3, r1
  401dc0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401dc4:	f000 f972 	bl	4020ac <__aeabi_dsub>
  401dc8:	4632      	mov	r2, r6
  401dca:	463b      	mov	r3, r7
  401dcc:	f000 fb22 	bl	402414 <__aeabi_dmul>
  401dd0:	4642      	mov	r2, r8
  401dd2:	464b      	mov	r3, r9
  401dd4:	f000 f96a 	bl	4020ac <__aeabi_dsub>
  401dd8:	a323      	add	r3, pc, #140	; (adr r3, 401e68 <__kernel_sin+0x160>)
  401dda:	e9d3 2300 	ldrd	r2, r3, [r3]
  401dde:	4606      	mov	r6, r0
  401de0:	460f      	mov	r7, r1
  401de2:	4650      	mov	r0, sl
  401de4:	4659      	mov	r1, fp
  401de6:	f000 fb15 	bl	402414 <__aeabi_dmul>
  401dea:	4602      	mov	r2, r0
  401dec:	460b      	mov	r3, r1
  401dee:	4630      	mov	r0, r6
  401df0:	4639      	mov	r1, r7
  401df2:	f000 f95d 	bl	4020b0 <__adddf3>
  401df6:	4602      	mov	r2, r0
  401df8:	460b      	mov	r3, r1
  401dfa:	4628      	mov	r0, r5
  401dfc:	4621      	mov	r1, r4
  401dfe:	f000 f955 	bl	4020ac <__aeabi_dsub>
  401e02:	b005      	add	sp, #20
  401e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e08:	4602      	mov	r2, r0
  401e0a:	460b      	mov	r3, r1
  401e0c:	4630      	mov	r0, r6
  401e0e:	4639      	mov	r1, r7
  401e10:	f000 fb00 	bl	402414 <__aeabi_dmul>
  401e14:	a314      	add	r3, pc, #80	; (adr r3, 401e68 <__kernel_sin+0x160>)
  401e16:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e1a:	f000 f947 	bl	4020ac <__aeabi_dsub>
  401e1e:	4652      	mov	r2, sl
  401e20:	465b      	mov	r3, fp
  401e22:	f000 faf7 	bl	402414 <__aeabi_dmul>
  401e26:	462a      	mov	r2, r5
  401e28:	4623      	mov	r3, r4
  401e2a:	f000 f941 	bl	4020b0 <__adddf3>
  401e2e:	b005      	add	sp, #20
  401e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e34:	4628      	mov	r0, r5
  401e36:	4621      	mov	r1, r4
  401e38:	b005      	add	sp, #20
  401e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e3e:	bf00      	nop
  401e40:	5acfd57c 	.word	0x5acfd57c
  401e44:	3de5d93a 	.word	0x3de5d93a
  401e48:	8a2b9ceb 	.word	0x8a2b9ceb
  401e4c:	3e5ae5e6 	.word	0x3e5ae5e6
  401e50:	57b1fe7d 	.word	0x57b1fe7d
  401e54:	3ec71de3 	.word	0x3ec71de3
  401e58:	19c161d5 	.word	0x19c161d5
  401e5c:	3f2a01a0 	.word	0x3f2a01a0
  401e60:	1110f8a6 	.word	0x1110f8a6
  401e64:	3f811111 	.word	0x3f811111
  401e68:	55555549 	.word	0x55555549
  401e6c:	3fc55555 	.word	0x3fc55555
  401e70:	3fe00000 	.word	0x3fe00000

00401e74 <fabs>:
  401e74:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401e78:	4770      	bx	lr
  401e7a:	bf00      	nop
  401e7c:	0000      	movs	r0, r0
	...

00401e80 <floor>:
  401e80:	f3c1 520a 	ubfx	r2, r1, #20, #11
  401e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401e88:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
  401e8c:	2e13      	cmp	r6, #19
  401e8e:	460b      	mov	r3, r1
  401e90:	460d      	mov	r5, r1
  401e92:	4604      	mov	r4, r0
  401e94:	4688      	mov	r8, r1
  401e96:	4607      	mov	r7, r0
  401e98:	dc1d      	bgt.n	401ed6 <floor+0x56>
  401e9a:	2e00      	cmp	r6, #0
  401e9c:	db40      	blt.n	401f20 <floor+0xa0>
  401e9e:	4a3c      	ldr	r2, [pc, #240]	; (401f90 <floor+0x110>)
  401ea0:	fa42 f906 	asr.w	r9, r2, r6
  401ea4:	ea01 0209 	and.w	r2, r1, r9
  401ea8:	4302      	orrs	r2, r0
  401eaa:	4686      	mov	lr, r0
  401eac:	d018      	beq.n	401ee0 <floor+0x60>
  401eae:	a336      	add	r3, pc, #216	; (adr r3, 401f88 <floor+0x108>)
  401eb0:	e9d3 2300 	ldrd	r2, r3, [r3]
  401eb4:	f000 f8fc 	bl	4020b0 <__adddf3>
  401eb8:	2200      	movs	r2, #0
  401eba:	2300      	movs	r3, #0
  401ebc:	f000 fd3a 	bl	402934 <__aeabi_dcmpgt>
  401ec0:	b120      	cbz	r0, 401ecc <floor+0x4c>
  401ec2:	2d00      	cmp	r5, #0
  401ec4:	db42      	blt.n	401f4c <floor+0xcc>
  401ec6:	ea28 0509 	bic.w	r5, r8, r9
  401eca:	2700      	movs	r7, #0
  401ecc:	463c      	mov	r4, r7
  401ece:	4629      	mov	r1, r5
  401ed0:	4620      	mov	r0, r4
  401ed2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401ed6:	2e33      	cmp	r6, #51	; 0x33
  401ed8:	dd06      	ble.n	401ee8 <floor+0x68>
  401eda:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  401ede:	d02f      	beq.n	401f40 <floor+0xc0>
  401ee0:	4619      	mov	r1, r3
  401ee2:	4620      	mov	r0, r4
  401ee4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401ee8:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
  401eec:	f04f 39ff 	mov.w	r9, #4294967295
  401ef0:	fa29 f902 	lsr.w	r9, r9, r2
  401ef4:	ea10 0f09 	tst.w	r0, r9
  401ef8:	d0f2      	beq.n	401ee0 <floor+0x60>
  401efa:	a323      	add	r3, pc, #140	; (adr r3, 401f88 <floor+0x108>)
  401efc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f00:	f000 f8d6 	bl	4020b0 <__adddf3>
  401f04:	2200      	movs	r2, #0
  401f06:	2300      	movs	r3, #0
  401f08:	f000 fd14 	bl	402934 <__aeabi_dcmpgt>
  401f0c:	2800      	cmp	r0, #0
  401f0e:	d0dd      	beq.n	401ecc <floor+0x4c>
  401f10:	2d00      	cmp	r5, #0
  401f12:	db21      	blt.n	401f58 <floor+0xd8>
  401f14:	4645      	mov	r5, r8
  401f16:	ea27 0709 	bic.w	r7, r7, r9
  401f1a:	463c      	mov	r4, r7
  401f1c:	4629      	mov	r1, r5
  401f1e:	e7d7      	b.n	401ed0 <floor+0x50>
  401f20:	a319      	add	r3, pc, #100	; (adr r3, 401f88 <floor+0x108>)
  401f22:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f26:	f000 f8c3 	bl	4020b0 <__adddf3>
  401f2a:	2200      	movs	r2, #0
  401f2c:	2300      	movs	r3, #0
  401f2e:	f000 fd01 	bl	402934 <__aeabi_dcmpgt>
  401f32:	2800      	cmp	r0, #0
  401f34:	d0ca      	beq.n	401ecc <floor+0x4c>
  401f36:	2d00      	cmp	r5, #0
  401f38:	db19      	blt.n	401f6e <floor+0xee>
  401f3a:	2700      	movs	r7, #0
  401f3c:	463d      	mov	r5, r7
  401f3e:	e7c5      	b.n	401ecc <floor+0x4c>
  401f40:	4602      	mov	r2, r0
  401f42:	460b      	mov	r3, r1
  401f44:	f000 f8b4 	bl	4020b0 <__adddf3>
  401f48:	4604      	mov	r4, r0
  401f4a:	e7ca      	b.n	401ee2 <floor+0x62>
  401f4c:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  401f50:	fa43 f606 	asr.w	r6, r3, r6
  401f54:	44b0      	add	r8, r6
  401f56:	e7b6      	b.n	401ec6 <floor+0x46>
  401f58:	2e14      	cmp	r6, #20
  401f5a:	d010      	beq.n	401f7e <floor+0xfe>
  401f5c:	2301      	movs	r3, #1
  401f5e:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
  401f62:	fa03 f606 	lsl.w	r6, r3, r6
  401f66:	1937      	adds	r7, r6, r4
  401f68:	bf28      	it	cs
  401f6a:	4498      	addcs	r8, r3
  401f6c:	e7d2      	b.n	401f14 <floor+0x94>
  401f6e:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
  401f72:	4b08      	ldr	r3, [pc, #32]	; (401f94 <floor+0x114>)
  401f74:	4322      	orrs	r2, r4
  401f76:	bf18      	it	ne
  401f78:	461d      	movne	r5, r3
  401f7a:	2700      	movs	r7, #0
  401f7c:	e7a6      	b.n	401ecc <floor+0x4c>
  401f7e:	f105 0801 	add.w	r8, r5, #1
  401f82:	e7c7      	b.n	401f14 <floor+0x94>
  401f84:	f3af 8000 	nop.w
  401f88:	8800759c 	.word	0x8800759c
  401f8c:	7e37e43c 	.word	0x7e37e43c
  401f90:	000fffff 	.word	0x000fffff
  401f94:	bff00000 	.word	0xbff00000

00401f98 <scalbn>:
  401f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401f9a:	f3c1 560a 	ubfx	r6, r1, #20, #11
  401f9e:	4604      	mov	r4, r0
  401fa0:	460d      	mov	r5, r1
  401fa2:	460b      	mov	r3, r1
  401fa4:	4617      	mov	r7, r2
  401fa6:	bb0e      	cbnz	r6, 401fec <scalbn+0x54>
  401fa8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  401fac:	4303      	orrs	r3, r0
  401fae:	4686      	mov	lr, r0
  401fb0:	d025      	beq.n	401ffe <scalbn+0x66>
  401fb2:	2200      	movs	r2, #0
  401fb4:	4b34      	ldr	r3, [pc, #208]	; (402088 <scalbn+0xf0>)
  401fb6:	f000 fa2d 	bl	402414 <__aeabi_dmul>
  401fba:	4a34      	ldr	r2, [pc, #208]	; (40208c <scalbn+0xf4>)
  401fbc:	4297      	cmp	r7, r2
  401fbe:	4604      	mov	r4, r0
  401fc0:	460d      	mov	r5, r1
  401fc2:	460b      	mov	r3, r1
  401fc4:	db2a      	blt.n	40201c <scalbn+0x84>
  401fc6:	f3c1 560a 	ubfx	r6, r1, #20, #11
  401fca:	3e36      	subs	r6, #54	; 0x36
  401fcc:	443e      	add	r6, r7
  401fce:	f240 72fe 	movw	r2, #2046	; 0x7fe
  401fd2:	4296      	cmp	r6, r2
  401fd4:	dc28      	bgt.n	402028 <scalbn+0x90>
  401fd6:	2e00      	cmp	r6, #0
  401fd8:	dd12      	ble.n	402000 <scalbn+0x68>
  401fda:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  401fde:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  401fe2:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  401fe6:	4620      	mov	r0, r4
  401fe8:	4629      	mov	r1, r5
  401fea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401fec:	f240 72ff 	movw	r2, #2047	; 0x7ff
  401ff0:	4296      	cmp	r6, r2
  401ff2:	d1eb      	bne.n	401fcc <scalbn+0x34>
  401ff4:	4602      	mov	r2, r0
  401ff6:	460b      	mov	r3, r1
  401ff8:	f000 f85a 	bl	4020b0 <__adddf3>
  401ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401ffe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402000:	f116 0f35 	cmn.w	r6, #53	; 0x35
  402004:	da1d      	bge.n	402042 <scalbn+0xaa>
  402006:	f24c 3350 	movw	r3, #50000	; 0xc350
  40200a:	429f      	cmp	r7, r3
  40200c:	4622      	mov	r2, r4
  40200e:	462b      	mov	r3, r5
  402010:	dc25      	bgt.n	40205e <scalbn+0xc6>
  402012:	a119      	add	r1, pc, #100	; (adr r1, 402078 <scalbn+0xe0>)
  402014:	e9d1 0100 	ldrd	r0, r1, [r1]
  402018:	f000 f83c 	bl	402094 <copysign>
  40201c:	a316      	add	r3, pc, #88	; (adr r3, 402078 <scalbn+0xe0>)
  40201e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402022:	f000 f9f7 	bl	402414 <__aeabi_dmul>
  402026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402028:	4622      	mov	r2, r4
  40202a:	462b      	mov	r3, r5
  40202c:	a114      	add	r1, pc, #80	; (adr r1, 402080 <scalbn+0xe8>)
  40202e:	e9d1 0100 	ldrd	r0, r1, [r1]
  402032:	f000 f82f 	bl	402094 <copysign>
  402036:	a312      	add	r3, pc, #72	; (adr r3, 402080 <scalbn+0xe8>)
  402038:	e9d3 2300 	ldrd	r2, r3, [r3]
  40203c:	f000 f9ea 	bl	402414 <__aeabi_dmul>
  402040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402042:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  402046:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  40204a:	3636      	adds	r6, #54	; 0x36
  40204c:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  402050:	4620      	mov	r0, r4
  402052:	4629      	mov	r1, r5
  402054:	2200      	movs	r2, #0
  402056:	4b0e      	ldr	r3, [pc, #56]	; (402090 <scalbn+0xf8>)
  402058:	f000 f9dc 	bl	402414 <__aeabi_dmul>
  40205c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40205e:	a108      	add	r1, pc, #32	; (adr r1, 402080 <scalbn+0xe8>)
  402060:	e9d1 0100 	ldrd	r0, r1, [r1]
  402064:	f000 f816 	bl	402094 <copysign>
  402068:	a305      	add	r3, pc, #20	; (adr r3, 402080 <scalbn+0xe8>)
  40206a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40206e:	f000 f9d1 	bl	402414 <__aeabi_dmul>
  402072:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402074:	f3af 8000 	nop.w
  402078:	c2f8f359 	.word	0xc2f8f359
  40207c:	01a56e1f 	.word	0x01a56e1f
  402080:	8800759c 	.word	0x8800759c
  402084:	7e37e43c 	.word	0x7e37e43c
  402088:	43500000 	.word	0x43500000
  40208c:	ffff3cb0 	.word	0xffff3cb0
  402090:	3c900000 	.word	0x3c900000

00402094 <copysign>:
  402094:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
  402098:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  40209c:	ea42 0103 	orr.w	r1, r2, r3
  4020a0:	4770      	bx	lr
  4020a2:	bf00      	nop

004020a4 <__aeabi_drsub>:
  4020a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4020a8:	e002      	b.n	4020b0 <__adddf3>
  4020aa:	bf00      	nop

004020ac <__aeabi_dsub>:
  4020ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004020b0 <__adddf3>:
  4020b0:	b530      	push	{r4, r5, lr}
  4020b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4020b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4020ba:	ea94 0f05 	teq	r4, r5
  4020be:	bf08      	it	eq
  4020c0:	ea90 0f02 	teqeq	r0, r2
  4020c4:	bf1f      	itttt	ne
  4020c6:	ea54 0c00 	orrsne.w	ip, r4, r0
  4020ca:	ea55 0c02 	orrsne.w	ip, r5, r2
  4020ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4020d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4020d6:	f000 80e2 	beq.w	40229e <__adddf3+0x1ee>
  4020da:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4020de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4020e2:	bfb8      	it	lt
  4020e4:	426d      	neglt	r5, r5
  4020e6:	dd0c      	ble.n	402102 <__adddf3+0x52>
  4020e8:	442c      	add	r4, r5
  4020ea:	ea80 0202 	eor.w	r2, r0, r2
  4020ee:	ea81 0303 	eor.w	r3, r1, r3
  4020f2:	ea82 0000 	eor.w	r0, r2, r0
  4020f6:	ea83 0101 	eor.w	r1, r3, r1
  4020fa:	ea80 0202 	eor.w	r2, r0, r2
  4020fe:	ea81 0303 	eor.w	r3, r1, r3
  402102:	2d36      	cmp	r5, #54	; 0x36
  402104:	bf88      	it	hi
  402106:	bd30      	pophi	{r4, r5, pc}
  402108:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40210c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402110:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  402114:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402118:	d002      	beq.n	402120 <__adddf3+0x70>
  40211a:	4240      	negs	r0, r0
  40211c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402120:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  402124:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402128:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40212c:	d002      	beq.n	402134 <__adddf3+0x84>
  40212e:	4252      	negs	r2, r2
  402130:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  402134:	ea94 0f05 	teq	r4, r5
  402138:	f000 80a7 	beq.w	40228a <__adddf3+0x1da>
  40213c:	f1a4 0401 	sub.w	r4, r4, #1
  402140:	f1d5 0e20 	rsbs	lr, r5, #32
  402144:	db0d      	blt.n	402162 <__adddf3+0xb2>
  402146:	fa02 fc0e 	lsl.w	ip, r2, lr
  40214a:	fa22 f205 	lsr.w	r2, r2, r5
  40214e:	1880      	adds	r0, r0, r2
  402150:	f141 0100 	adc.w	r1, r1, #0
  402154:	fa03 f20e 	lsl.w	r2, r3, lr
  402158:	1880      	adds	r0, r0, r2
  40215a:	fa43 f305 	asr.w	r3, r3, r5
  40215e:	4159      	adcs	r1, r3
  402160:	e00e      	b.n	402180 <__adddf3+0xd0>
  402162:	f1a5 0520 	sub.w	r5, r5, #32
  402166:	f10e 0e20 	add.w	lr, lr, #32
  40216a:	2a01      	cmp	r2, #1
  40216c:	fa03 fc0e 	lsl.w	ip, r3, lr
  402170:	bf28      	it	cs
  402172:	f04c 0c02 	orrcs.w	ip, ip, #2
  402176:	fa43 f305 	asr.w	r3, r3, r5
  40217a:	18c0      	adds	r0, r0, r3
  40217c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  402180:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402184:	d507      	bpl.n	402196 <__adddf3+0xe6>
  402186:	f04f 0e00 	mov.w	lr, #0
  40218a:	f1dc 0c00 	rsbs	ip, ip, #0
  40218e:	eb7e 0000 	sbcs.w	r0, lr, r0
  402192:	eb6e 0101 	sbc.w	r1, lr, r1
  402196:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40219a:	d31b      	bcc.n	4021d4 <__adddf3+0x124>
  40219c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4021a0:	d30c      	bcc.n	4021bc <__adddf3+0x10c>
  4021a2:	0849      	lsrs	r1, r1, #1
  4021a4:	ea5f 0030 	movs.w	r0, r0, rrx
  4021a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4021ac:	f104 0401 	add.w	r4, r4, #1
  4021b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4021b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4021b8:	f080 809a 	bcs.w	4022f0 <__adddf3+0x240>
  4021bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4021c0:	bf08      	it	eq
  4021c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4021c6:	f150 0000 	adcs.w	r0, r0, #0
  4021ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4021ce:	ea41 0105 	orr.w	r1, r1, r5
  4021d2:	bd30      	pop	{r4, r5, pc}
  4021d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4021d8:	4140      	adcs	r0, r0
  4021da:	eb41 0101 	adc.w	r1, r1, r1
  4021de:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4021e2:	f1a4 0401 	sub.w	r4, r4, #1
  4021e6:	d1e9      	bne.n	4021bc <__adddf3+0x10c>
  4021e8:	f091 0f00 	teq	r1, #0
  4021ec:	bf04      	itt	eq
  4021ee:	4601      	moveq	r1, r0
  4021f0:	2000      	moveq	r0, #0
  4021f2:	fab1 f381 	clz	r3, r1
  4021f6:	bf08      	it	eq
  4021f8:	3320      	addeq	r3, #32
  4021fa:	f1a3 030b 	sub.w	r3, r3, #11
  4021fe:	f1b3 0220 	subs.w	r2, r3, #32
  402202:	da0c      	bge.n	40221e <__adddf3+0x16e>
  402204:	320c      	adds	r2, #12
  402206:	dd08      	ble.n	40221a <__adddf3+0x16a>
  402208:	f102 0c14 	add.w	ip, r2, #20
  40220c:	f1c2 020c 	rsb	r2, r2, #12
  402210:	fa01 f00c 	lsl.w	r0, r1, ip
  402214:	fa21 f102 	lsr.w	r1, r1, r2
  402218:	e00c      	b.n	402234 <__adddf3+0x184>
  40221a:	f102 0214 	add.w	r2, r2, #20
  40221e:	bfd8      	it	le
  402220:	f1c2 0c20 	rsble	ip, r2, #32
  402224:	fa01 f102 	lsl.w	r1, r1, r2
  402228:	fa20 fc0c 	lsr.w	ip, r0, ip
  40222c:	bfdc      	itt	le
  40222e:	ea41 010c 	orrle.w	r1, r1, ip
  402232:	4090      	lslle	r0, r2
  402234:	1ae4      	subs	r4, r4, r3
  402236:	bfa2      	ittt	ge
  402238:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40223c:	4329      	orrge	r1, r5
  40223e:	bd30      	popge	{r4, r5, pc}
  402240:	ea6f 0404 	mvn.w	r4, r4
  402244:	3c1f      	subs	r4, #31
  402246:	da1c      	bge.n	402282 <__adddf3+0x1d2>
  402248:	340c      	adds	r4, #12
  40224a:	dc0e      	bgt.n	40226a <__adddf3+0x1ba>
  40224c:	f104 0414 	add.w	r4, r4, #20
  402250:	f1c4 0220 	rsb	r2, r4, #32
  402254:	fa20 f004 	lsr.w	r0, r0, r4
  402258:	fa01 f302 	lsl.w	r3, r1, r2
  40225c:	ea40 0003 	orr.w	r0, r0, r3
  402260:	fa21 f304 	lsr.w	r3, r1, r4
  402264:	ea45 0103 	orr.w	r1, r5, r3
  402268:	bd30      	pop	{r4, r5, pc}
  40226a:	f1c4 040c 	rsb	r4, r4, #12
  40226e:	f1c4 0220 	rsb	r2, r4, #32
  402272:	fa20 f002 	lsr.w	r0, r0, r2
  402276:	fa01 f304 	lsl.w	r3, r1, r4
  40227a:	ea40 0003 	orr.w	r0, r0, r3
  40227e:	4629      	mov	r1, r5
  402280:	bd30      	pop	{r4, r5, pc}
  402282:	fa21 f004 	lsr.w	r0, r1, r4
  402286:	4629      	mov	r1, r5
  402288:	bd30      	pop	{r4, r5, pc}
  40228a:	f094 0f00 	teq	r4, #0
  40228e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  402292:	bf06      	itte	eq
  402294:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  402298:	3401      	addeq	r4, #1
  40229a:	3d01      	subne	r5, #1
  40229c:	e74e      	b.n	40213c <__adddf3+0x8c>
  40229e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4022a2:	bf18      	it	ne
  4022a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4022a8:	d029      	beq.n	4022fe <__adddf3+0x24e>
  4022aa:	ea94 0f05 	teq	r4, r5
  4022ae:	bf08      	it	eq
  4022b0:	ea90 0f02 	teqeq	r0, r2
  4022b4:	d005      	beq.n	4022c2 <__adddf3+0x212>
  4022b6:	ea54 0c00 	orrs.w	ip, r4, r0
  4022ba:	bf04      	itt	eq
  4022bc:	4619      	moveq	r1, r3
  4022be:	4610      	moveq	r0, r2
  4022c0:	bd30      	pop	{r4, r5, pc}
  4022c2:	ea91 0f03 	teq	r1, r3
  4022c6:	bf1e      	ittt	ne
  4022c8:	2100      	movne	r1, #0
  4022ca:	2000      	movne	r0, #0
  4022cc:	bd30      	popne	{r4, r5, pc}
  4022ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4022d2:	d105      	bne.n	4022e0 <__adddf3+0x230>
  4022d4:	0040      	lsls	r0, r0, #1
  4022d6:	4149      	adcs	r1, r1
  4022d8:	bf28      	it	cs
  4022da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4022de:	bd30      	pop	{r4, r5, pc}
  4022e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4022e4:	bf3c      	itt	cc
  4022e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4022ea:	bd30      	popcc	{r4, r5, pc}
  4022ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4022f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4022f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4022f8:	f04f 0000 	mov.w	r0, #0
  4022fc:	bd30      	pop	{r4, r5, pc}
  4022fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402302:	bf1a      	itte	ne
  402304:	4619      	movne	r1, r3
  402306:	4610      	movne	r0, r2
  402308:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40230c:	bf1c      	itt	ne
  40230e:	460b      	movne	r3, r1
  402310:	4602      	movne	r2, r0
  402312:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402316:	bf06      	itte	eq
  402318:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40231c:	ea91 0f03 	teqeq	r1, r3
  402320:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  402324:	bd30      	pop	{r4, r5, pc}
  402326:	bf00      	nop

00402328 <__aeabi_ui2d>:
  402328:	f090 0f00 	teq	r0, #0
  40232c:	bf04      	itt	eq
  40232e:	2100      	moveq	r1, #0
  402330:	4770      	bxeq	lr
  402332:	b530      	push	{r4, r5, lr}
  402334:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402338:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40233c:	f04f 0500 	mov.w	r5, #0
  402340:	f04f 0100 	mov.w	r1, #0
  402344:	e750      	b.n	4021e8 <__adddf3+0x138>
  402346:	bf00      	nop

00402348 <__aeabi_i2d>:
  402348:	f090 0f00 	teq	r0, #0
  40234c:	bf04      	itt	eq
  40234e:	2100      	moveq	r1, #0
  402350:	4770      	bxeq	lr
  402352:	b530      	push	{r4, r5, lr}
  402354:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402358:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40235c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  402360:	bf48      	it	mi
  402362:	4240      	negmi	r0, r0
  402364:	f04f 0100 	mov.w	r1, #0
  402368:	e73e      	b.n	4021e8 <__adddf3+0x138>
  40236a:	bf00      	nop

0040236c <__aeabi_f2d>:
  40236c:	0042      	lsls	r2, r0, #1
  40236e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  402372:	ea4f 0131 	mov.w	r1, r1, rrx
  402376:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40237a:	bf1f      	itttt	ne
  40237c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  402380:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402384:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  402388:	4770      	bxne	lr
  40238a:	f092 0f00 	teq	r2, #0
  40238e:	bf14      	ite	ne
  402390:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402394:	4770      	bxeq	lr
  402396:	b530      	push	{r4, r5, lr}
  402398:	f44f 7460 	mov.w	r4, #896	; 0x380
  40239c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4023a0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4023a4:	e720      	b.n	4021e8 <__adddf3+0x138>
  4023a6:	bf00      	nop

004023a8 <__aeabi_ul2d>:
  4023a8:	ea50 0201 	orrs.w	r2, r0, r1
  4023ac:	bf08      	it	eq
  4023ae:	4770      	bxeq	lr
  4023b0:	b530      	push	{r4, r5, lr}
  4023b2:	f04f 0500 	mov.w	r5, #0
  4023b6:	e00a      	b.n	4023ce <__aeabi_l2d+0x16>

004023b8 <__aeabi_l2d>:
  4023b8:	ea50 0201 	orrs.w	r2, r0, r1
  4023bc:	bf08      	it	eq
  4023be:	4770      	bxeq	lr
  4023c0:	b530      	push	{r4, r5, lr}
  4023c2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4023c6:	d502      	bpl.n	4023ce <__aeabi_l2d+0x16>
  4023c8:	4240      	negs	r0, r0
  4023ca:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4023ce:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4023d2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4023d6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4023da:	f43f aedc 	beq.w	402196 <__adddf3+0xe6>
  4023de:	f04f 0203 	mov.w	r2, #3
  4023e2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4023e6:	bf18      	it	ne
  4023e8:	3203      	addne	r2, #3
  4023ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4023ee:	bf18      	it	ne
  4023f0:	3203      	addne	r2, #3
  4023f2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4023f6:	f1c2 0320 	rsb	r3, r2, #32
  4023fa:	fa00 fc03 	lsl.w	ip, r0, r3
  4023fe:	fa20 f002 	lsr.w	r0, r0, r2
  402402:	fa01 fe03 	lsl.w	lr, r1, r3
  402406:	ea40 000e 	orr.w	r0, r0, lr
  40240a:	fa21 f102 	lsr.w	r1, r1, r2
  40240e:	4414      	add	r4, r2
  402410:	e6c1      	b.n	402196 <__adddf3+0xe6>
  402412:	bf00      	nop

00402414 <__aeabi_dmul>:
  402414:	b570      	push	{r4, r5, r6, lr}
  402416:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40241a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40241e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402422:	bf1d      	ittte	ne
  402424:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402428:	ea94 0f0c 	teqne	r4, ip
  40242c:	ea95 0f0c 	teqne	r5, ip
  402430:	f000 f8de 	bleq	4025f0 <__aeabi_dmul+0x1dc>
  402434:	442c      	add	r4, r5
  402436:	ea81 0603 	eor.w	r6, r1, r3
  40243a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40243e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  402442:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  402446:	bf18      	it	ne
  402448:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40244c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402450:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  402454:	d038      	beq.n	4024c8 <__aeabi_dmul+0xb4>
  402456:	fba0 ce02 	umull	ip, lr, r0, r2
  40245a:	f04f 0500 	mov.w	r5, #0
  40245e:	fbe1 e502 	umlal	lr, r5, r1, r2
  402462:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  402466:	fbe0 e503 	umlal	lr, r5, r0, r3
  40246a:	f04f 0600 	mov.w	r6, #0
  40246e:	fbe1 5603 	umlal	r5, r6, r1, r3
  402472:	f09c 0f00 	teq	ip, #0
  402476:	bf18      	it	ne
  402478:	f04e 0e01 	orrne.w	lr, lr, #1
  40247c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  402480:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  402484:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  402488:	d204      	bcs.n	402494 <__aeabi_dmul+0x80>
  40248a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40248e:	416d      	adcs	r5, r5
  402490:	eb46 0606 	adc.w	r6, r6, r6
  402494:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  402498:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40249c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4024a0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4024a4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4024a8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4024ac:	bf88      	it	hi
  4024ae:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4024b2:	d81e      	bhi.n	4024f2 <__aeabi_dmul+0xde>
  4024b4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4024b8:	bf08      	it	eq
  4024ba:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4024be:	f150 0000 	adcs.w	r0, r0, #0
  4024c2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4024c6:	bd70      	pop	{r4, r5, r6, pc}
  4024c8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4024cc:	ea46 0101 	orr.w	r1, r6, r1
  4024d0:	ea40 0002 	orr.w	r0, r0, r2
  4024d4:	ea81 0103 	eor.w	r1, r1, r3
  4024d8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4024dc:	bfc2      	ittt	gt
  4024de:	ebd4 050c 	rsbsgt	r5, r4, ip
  4024e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4024e6:	bd70      	popgt	{r4, r5, r6, pc}
  4024e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4024ec:	f04f 0e00 	mov.w	lr, #0
  4024f0:	3c01      	subs	r4, #1
  4024f2:	f300 80ab 	bgt.w	40264c <__aeabi_dmul+0x238>
  4024f6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4024fa:	bfde      	ittt	le
  4024fc:	2000      	movle	r0, #0
  4024fe:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  402502:	bd70      	pople	{r4, r5, r6, pc}
  402504:	f1c4 0400 	rsb	r4, r4, #0
  402508:	3c20      	subs	r4, #32
  40250a:	da35      	bge.n	402578 <__aeabi_dmul+0x164>
  40250c:	340c      	adds	r4, #12
  40250e:	dc1b      	bgt.n	402548 <__aeabi_dmul+0x134>
  402510:	f104 0414 	add.w	r4, r4, #20
  402514:	f1c4 0520 	rsb	r5, r4, #32
  402518:	fa00 f305 	lsl.w	r3, r0, r5
  40251c:	fa20 f004 	lsr.w	r0, r0, r4
  402520:	fa01 f205 	lsl.w	r2, r1, r5
  402524:	ea40 0002 	orr.w	r0, r0, r2
  402528:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40252c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402530:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402534:	fa21 f604 	lsr.w	r6, r1, r4
  402538:	eb42 0106 	adc.w	r1, r2, r6
  40253c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402540:	bf08      	it	eq
  402542:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402546:	bd70      	pop	{r4, r5, r6, pc}
  402548:	f1c4 040c 	rsb	r4, r4, #12
  40254c:	f1c4 0520 	rsb	r5, r4, #32
  402550:	fa00 f304 	lsl.w	r3, r0, r4
  402554:	fa20 f005 	lsr.w	r0, r0, r5
  402558:	fa01 f204 	lsl.w	r2, r1, r4
  40255c:	ea40 0002 	orr.w	r0, r0, r2
  402560:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402564:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402568:	f141 0100 	adc.w	r1, r1, #0
  40256c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402570:	bf08      	it	eq
  402572:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402576:	bd70      	pop	{r4, r5, r6, pc}
  402578:	f1c4 0520 	rsb	r5, r4, #32
  40257c:	fa00 f205 	lsl.w	r2, r0, r5
  402580:	ea4e 0e02 	orr.w	lr, lr, r2
  402584:	fa20 f304 	lsr.w	r3, r0, r4
  402588:	fa01 f205 	lsl.w	r2, r1, r5
  40258c:	ea43 0302 	orr.w	r3, r3, r2
  402590:	fa21 f004 	lsr.w	r0, r1, r4
  402594:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402598:	fa21 f204 	lsr.w	r2, r1, r4
  40259c:	ea20 0002 	bic.w	r0, r0, r2
  4025a0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4025a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4025a8:	bf08      	it	eq
  4025aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4025ae:	bd70      	pop	{r4, r5, r6, pc}
  4025b0:	f094 0f00 	teq	r4, #0
  4025b4:	d10f      	bne.n	4025d6 <__aeabi_dmul+0x1c2>
  4025b6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4025ba:	0040      	lsls	r0, r0, #1
  4025bc:	eb41 0101 	adc.w	r1, r1, r1
  4025c0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4025c4:	bf08      	it	eq
  4025c6:	3c01      	subeq	r4, #1
  4025c8:	d0f7      	beq.n	4025ba <__aeabi_dmul+0x1a6>
  4025ca:	ea41 0106 	orr.w	r1, r1, r6
  4025ce:	f095 0f00 	teq	r5, #0
  4025d2:	bf18      	it	ne
  4025d4:	4770      	bxne	lr
  4025d6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4025da:	0052      	lsls	r2, r2, #1
  4025dc:	eb43 0303 	adc.w	r3, r3, r3
  4025e0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4025e4:	bf08      	it	eq
  4025e6:	3d01      	subeq	r5, #1
  4025e8:	d0f7      	beq.n	4025da <__aeabi_dmul+0x1c6>
  4025ea:	ea43 0306 	orr.w	r3, r3, r6
  4025ee:	4770      	bx	lr
  4025f0:	ea94 0f0c 	teq	r4, ip
  4025f4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4025f8:	bf18      	it	ne
  4025fa:	ea95 0f0c 	teqne	r5, ip
  4025fe:	d00c      	beq.n	40261a <__aeabi_dmul+0x206>
  402600:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402604:	bf18      	it	ne
  402606:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40260a:	d1d1      	bne.n	4025b0 <__aeabi_dmul+0x19c>
  40260c:	ea81 0103 	eor.w	r1, r1, r3
  402610:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402614:	f04f 0000 	mov.w	r0, #0
  402618:	bd70      	pop	{r4, r5, r6, pc}
  40261a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40261e:	bf06      	itte	eq
  402620:	4610      	moveq	r0, r2
  402622:	4619      	moveq	r1, r3
  402624:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402628:	d019      	beq.n	40265e <__aeabi_dmul+0x24a>
  40262a:	ea94 0f0c 	teq	r4, ip
  40262e:	d102      	bne.n	402636 <__aeabi_dmul+0x222>
  402630:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402634:	d113      	bne.n	40265e <__aeabi_dmul+0x24a>
  402636:	ea95 0f0c 	teq	r5, ip
  40263a:	d105      	bne.n	402648 <__aeabi_dmul+0x234>
  40263c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  402640:	bf1c      	itt	ne
  402642:	4610      	movne	r0, r2
  402644:	4619      	movne	r1, r3
  402646:	d10a      	bne.n	40265e <__aeabi_dmul+0x24a>
  402648:	ea81 0103 	eor.w	r1, r1, r3
  40264c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402650:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402654:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402658:	f04f 0000 	mov.w	r0, #0
  40265c:	bd70      	pop	{r4, r5, r6, pc}
  40265e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402662:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  402666:	bd70      	pop	{r4, r5, r6, pc}

00402668 <__aeabi_ddiv>:
  402668:	b570      	push	{r4, r5, r6, lr}
  40266a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40266e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402672:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402676:	bf1d      	ittte	ne
  402678:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40267c:	ea94 0f0c 	teqne	r4, ip
  402680:	ea95 0f0c 	teqne	r5, ip
  402684:	f000 f8a7 	bleq	4027d6 <__aeabi_ddiv+0x16e>
  402688:	eba4 0405 	sub.w	r4, r4, r5
  40268c:	ea81 0e03 	eor.w	lr, r1, r3
  402690:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402694:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402698:	f000 8088 	beq.w	4027ac <__aeabi_ddiv+0x144>
  40269c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4026a0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4026a4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4026a8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4026ac:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4026b0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4026b4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4026b8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4026bc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4026c0:	429d      	cmp	r5, r3
  4026c2:	bf08      	it	eq
  4026c4:	4296      	cmpeq	r6, r2
  4026c6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4026ca:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4026ce:	d202      	bcs.n	4026d6 <__aeabi_ddiv+0x6e>
  4026d0:	085b      	lsrs	r3, r3, #1
  4026d2:	ea4f 0232 	mov.w	r2, r2, rrx
  4026d6:	1ab6      	subs	r6, r6, r2
  4026d8:	eb65 0503 	sbc.w	r5, r5, r3
  4026dc:	085b      	lsrs	r3, r3, #1
  4026de:	ea4f 0232 	mov.w	r2, r2, rrx
  4026e2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4026e6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4026ea:	ebb6 0e02 	subs.w	lr, r6, r2
  4026ee:	eb75 0e03 	sbcs.w	lr, r5, r3
  4026f2:	bf22      	ittt	cs
  4026f4:	1ab6      	subcs	r6, r6, r2
  4026f6:	4675      	movcs	r5, lr
  4026f8:	ea40 000c 	orrcs.w	r0, r0, ip
  4026fc:	085b      	lsrs	r3, r3, #1
  4026fe:	ea4f 0232 	mov.w	r2, r2, rrx
  402702:	ebb6 0e02 	subs.w	lr, r6, r2
  402706:	eb75 0e03 	sbcs.w	lr, r5, r3
  40270a:	bf22      	ittt	cs
  40270c:	1ab6      	subcs	r6, r6, r2
  40270e:	4675      	movcs	r5, lr
  402710:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402714:	085b      	lsrs	r3, r3, #1
  402716:	ea4f 0232 	mov.w	r2, r2, rrx
  40271a:	ebb6 0e02 	subs.w	lr, r6, r2
  40271e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402722:	bf22      	ittt	cs
  402724:	1ab6      	subcs	r6, r6, r2
  402726:	4675      	movcs	r5, lr
  402728:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40272c:	085b      	lsrs	r3, r3, #1
  40272e:	ea4f 0232 	mov.w	r2, r2, rrx
  402732:	ebb6 0e02 	subs.w	lr, r6, r2
  402736:	eb75 0e03 	sbcs.w	lr, r5, r3
  40273a:	bf22      	ittt	cs
  40273c:	1ab6      	subcs	r6, r6, r2
  40273e:	4675      	movcs	r5, lr
  402740:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402744:	ea55 0e06 	orrs.w	lr, r5, r6
  402748:	d018      	beq.n	40277c <__aeabi_ddiv+0x114>
  40274a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40274e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  402752:	ea4f 1606 	mov.w	r6, r6, lsl #4
  402756:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40275a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40275e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  402762:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  402766:	d1c0      	bne.n	4026ea <__aeabi_ddiv+0x82>
  402768:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40276c:	d10b      	bne.n	402786 <__aeabi_ddiv+0x11e>
  40276e:	ea41 0100 	orr.w	r1, r1, r0
  402772:	f04f 0000 	mov.w	r0, #0
  402776:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40277a:	e7b6      	b.n	4026ea <__aeabi_ddiv+0x82>
  40277c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402780:	bf04      	itt	eq
  402782:	4301      	orreq	r1, r0
  402784:	2000      	moveq	r0, #0
  402786:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40278a:	bf88      	it	hi
  40278c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402790:	f63f aeaf 	bhi.w	4024f2 <__aeabi_dmul+0xde>
  402794:	ebb5 0c03 	subs.w	ip, r5, r3
  402798:	bf04      	itt	eq
  40279a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40279e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4027a2:	f150 0000 	adcs.w	r0, r0, #0
  4027a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4027aa:	bd70      	pop	{r4, r5, r6, pc}
  4027ac:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4027b0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4027b4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4027b8:	bfc2      	ittt	gt
  4027ba:	ebd4 050c 	rsbsgt	r5, r4, ip
  4027be:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4027c2:	bd70      	popgt	{r4, r5, r6, pc}
  4027c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4027c8:	f04f 0e00 	mov.w	lr, #0
  4027cc:	3c01      	subs	r4, #1
  4027ce:	e690      	b.n	4024f2 <__aeabi_dmul+0xde>
  4027d0:	ea45 0e06 	orr.w	lr, r5, r6
  4027d4:	e68d      	b.n	4024f2 <__aeabi_dmul+0xde>
  4027d6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4027da:	ea94 0f0c 	teq	r4, ip
  4027de:	bf08      	it	eq
  4027e0:	ea95 0f0c 	teqeq	r5, ip
  4027e4:	f43f af3b 	beq.w	40265e <__aeabi_dmul+0x24a>
  4027e8:	ea94 0f0c 	teq	r4, ip
  4027ec:	d10a      	bne.n	402804 <__aeabi_ddiv+0x19c>
  4027ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4027f2:	f47f af34 	bne.w	40265e <__aeabi_dmul+0x24a>
  4027f6:	ea95 0f0c 	teq	r5, ip
  4027fa:	f47f af25 	bne.w	402648 <__aeabi_dmul+0x234>
  4027fe:	4610      	mov	r0, r2
  402800:	4619      	mov	r1, r3
  402802:	e72c      	b.n	40265e <__aeabi_dmul+0x24a>
  402804:	ea95 0f0c 	teq	r5, ip
  402808:	d106      	bne.n	402818 <__aeabi_ddiv+0x1b0>
  40280a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40280e:	f43f aefd 	beq.w	40260c <__aeabi_dmul+0x1f8>
  402812:	4610      	mov	r0, r2
  402814:	4619      	mov	r1, r3
  402816:	e722      	b.n	40265e <__aeabi_dmul+0x24a>
  402818:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40281c:	bf18      	it	ne
  40281e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402822:	f47f aec5 	bne.w	4025b0 <__aeabi_dmul+0x19c>
  402826:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40282a:	f47f af0d 	bne.w	402648 <__aeabi_dmul+0x234>
  40282e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  402832:	f47f aeeb 	bne.w	40260c <__aeabi_dmul+0x1f8>
  402836:	e712      	b.n	40265e <__aeabi_dmul+0x24a>

00402838 <__gedf2>:
  402838:	f04f 3cff 	mov.w	ip, #4294967295
  40283c:	e006      	b.n	40284c <__cmpdf2+0x4>
  40283e:	bf00      	nop

00402840 <__ledf2>:
  402840:	f04f 0c01 	mov.w	ip, #1
  402844:	e002      	b.n	40284c <__cmpdf2+0x4>
  402846:	bf00      	nop

00402848 <__cmpdf2>:
  402848:	f04f 0c01 	mov.w	ip, #1
  40284c:	f84d cd04 	str.w	ip, [sp, #-4]!
  402850:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402854:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402858:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40285c:	bf18      	it	ne
  40285e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  402862:	d01b      	beq.n	40289c <__cmpdf2+0x54>
  402864:	b001      	add	sp, #4
  402866:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40286a:	bf0c      	ite	eq
  40286c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  402870:	ea91 0f03 	teqne	r1, r3
  402874:	bf02      	ittt	eq
  402876:	ea90 0f02 	teqeq	r0, r2
  40287a:	2000      	moveq	r0, #0
  40287c:	4770      	bxeq	lr
  40287e:	f110 0f00 	cmn.w	r0, #0
  402882:	ea91 0f03 	teq	r1, r3
  402886:	bf58      	it	pl
  402888:	4299      	cmppl	r1, r3
  40288a:	bf08      	it	eq
  40288c:	4290      	cmpeq	r0, r2
  40288e:	bf2c      	ite	cs
  402890:	17d8      	asrcs	r0, r3, #31
  402892:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  402896:	f040 0001 	orr.w	r0, r0, #1
  40289a:	4770      	bx	lr
  40289c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4028a0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4028a4:	d102      	bne.n	4028ac <__cmpdf2+0x64>
  4028a6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4028aa:	d107      	bne.n	4028bc <__cmpdf2+0x74>
  4028ac:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4028b0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4028b4:	d1d6      	bne.n	402864 <__cmpdf2+0x1c>
  4028b6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4028ba:	d0d3      	beq.n	402864 <__cmpdf2+0x1c>
  4028bc:	f85d 0b04 	ldr.w	r0, [sp], #4
  4028c0:	4770      	bx	lr
  4028c2:	bf00      	nop

004028c4 <__aeabi_cdrcmple>:
  4028c4:	4684      	mov	ip, r0
  4028c6:	4610      	mov	r0, r2
  4028c8:	4662      	mov	r2, ip
  4028ca:	468c      	mov	ip, r1
  4028cc:	4619      	mov	r1, r3
  4028ce:	4663      	mov	r3, ip
  4028d0:	e000      	b.n	4028d4 <__aeabi_cdcmpeq>
  4028d2:	bf00      	nop

004028d4 <__aeabi_cdcmpeq>:
  4028d4:	b501      	push	{r0, lr}
  4028d6:	f7ff ffb7 	bl	402848 <__cmpdf2>
  4028da:	2800      	cmp	r0, #0
  4028dc:	bf48      	it	mi
  4028de:	f110 0f00 	cmnmi.w	r0, #0
  4028e2:	bd01      	pop	{r0, pc}

004028e4 <__aeabi_dcmpeq>:
  4028e4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4028e8:	f7ff fff4 	bl	4028d4 <__aeabi_cdcmpeq>
  4028ec:	bf0c      	ite	eq
  4028ee:	2001      	moveq	r0, #1
  4028f0:	2000      	movne	r0, #0
  4028f2:	f85d fb08 	ldr.w	pc, [sp], #8
  4028f6:	bf00      	nop

004028f8 <__aeabi_dcmplt>:
  4028f8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4028fc:	f7ff ffea 	bl	4028d4 <__aeabi_cdcmpeq>
  402900:	bf34      	ite	cc
  402902:	2001      	movcc	r0, #1
  402904:	2000      	movcs	r0, #0
  402906:	f85d fb08 	ldr.w	pc, [sp], #8
  40290a:	bf00      	nop

0040290c <__aeabi_dcmple>:
  40290c:	f84d ed08 	str.w	lr, [sp, #-8]!
  402910:	f7ff ffe0 	bl	4028d4 <__aeabi_cdcmpeq>
  402914:	bf94      	ite	ls
  402916:	2001      	movls	r0, #1
  402918:	2000      	movhi	r0, #0
  40291a:	f85d fb08 	ldr.w	pc, [sp], #8
  40291e:	bf00      	nop

00402920 <__aeabi_dcmpge>:
  402920:	f84d ed08 	str.w	lr, [sp, #-8]!
  402924:	f7ff ffce 	bl	4028c4 <__aeabi_cdrcmple>
  402928:	bf94      	ite	ls
  40292a:	2001      	movls	r0, #1
  40292c:	2000      	movhi	r0, #0
  40292e:	f85d fb08 	ldr.w	pc, [sp], #8
  402932:	bf00      	nop

00402934 <__aeabi_dcmpgt>:
  402934:	f84d ed08 	str.w	lr, [sp, #-8]!
  402938:	f7ff ffc4 	bl	4028c4 <__aeabi_cdrcmple>
  40293c:	bf34      	ite	cc
  40293e:	2001      	movcc	r0, #1
  402940:	2000      	movcs	r0, #0
  402942:	f85d fb08 	ldr.w	pc, [sp], #8
  402946:	bf00      	nop

00402948 <__aeabi_d2iz>:
  402948:	ea4f 0241 	mov.w	r2, r1, lsl #1
  40294c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  402950:	d215      	bcs.n	40297e <__aeabi_d2iz+0x36>
  402952:	d511      	bpl.n	402978 <__aeabi_d2iz+0x30>
  402954:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  402958:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  40295c:	d912      	bls.n	402984 <__aeabi_d2iz+0x3c>
  40295e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402962:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  402966:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40296a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40296e:	fa23 f002 	lsr.w	r0, r3, r2
  402972:	bf18      	it	ne
  402974:	4240      	negne	r0, r0
  402976:	4770      	bx	lr
  402978:	f04f 0000 	mov.w	r0, #0
  40297c:	4770      	bx	lr
  40297e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  402982:	d105      	bne.n	402990 <__aeabi_d2iz+0x48>
  402984:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  402988:	bf08      	it	eq
  40298a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40298e:	4770      	bx	lr
  402990:	f04f 0000 	mov.w	r0, #0
  402994:	4770      	bx	lr
  402996:	bf00      	nop

00402998 <__aeabi_d2f>:
  402998:	ea4f 0241 	mov.w	r2, r1, lsl #1
  40299c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  4029a0:	bf24      	itt	cs
  4029a2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  4029a6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  4029aa:	d90d      	bls.n	4029c8 <__aeabi_d2f+0x30>
  4029ac:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  4029b0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  4029b4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  4029b8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  4029bc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  4029c0:	bf08      	it	eq
  4029c2:	f020 0001 	biceq.w	r0, r0, #1
  4029c6:	4770      	bx	lr
  4029c8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  4029cc:	d121      	bne.n	402a12 <__aeabi_d2f+0x7a>
  4029ce:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  4029d2:	bfbc      	itt	lt
  4029d4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  4029d8:	4770      	bxlt	lr
  4029da:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4029de:	ea4f 5252 	mov.w	r2, r2, lsr #21
  4029e2:	f1c2 0218 	rsb	r2, r2, #24
  4029e6:	f1c2 0c20 	rsb	ip, r2, #32
  4029ea:	fa10 f30c 	lsls.w	r3, r0, ip
  4029ee:	fa20 f002 	lsr.w	r0, r0, r2
  4029f2:	bf18      	it	ne
  4029f4:	f040 0001 	orrne.w	r0, r0, #1
  4029f8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4029fc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  402a00:	fa03 fc0c 	lsl.w	ip, r3, ip
  402a04:	ea40 000c 	orr.w	r0, r0, ip
  402a08:	fa23 f302 	lsr.w	r3, r3, r2
  402a0c:	ea4f 0343 	mov.w	r3, r3, lsl #1
  402a10:	e7cc      	b.n	4029ac <__aeabi_d2f+0x14>
  402a12:	ea7f 5362 	mvns.w	r3, r2, asr #21
  402a16:	d107      	bne.n	402a28 <__aeabi_d2f+0x90>
  402a18:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  402a1c:	bf1e      	ittt	ne
  402a1e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  402a22:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  402a26:	4770      	bxne	lr
  402a28:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  402a2c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  402a30:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402a34:	4770      	bx	lr
  402a36:	bf00      	nop

00402a38 <__aeabi_frsub>:
  402a38:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  402a3c:	e002      	b.n	402a44 <__addsf3>
  402a3e:	bf00      	nop

00402a40 <__aeabi_fsub>:
  402a40:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00402a44 <__addsf3>:
  402a44:	0042      	lsls	r2, r0, #1
  402a46:	bf1f      	itttt	ne
  402a48:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  402a4c:	ea92 0f03 	teqne	r2, r3
  402a50:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  402a54:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  402a58:	d06a      	beq.n	402b30 <__addsf3+0xec>
  402a5a:	ea4f 6212 	mov.w	r2, r2, lsr #24
  402a5e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  402a62:	bfc1      	itttt	gt
  402a64:	18d2      	addgt	r2, r2, r3
  402a66:	4041      	eorgt	r1, r0
  402a68:	4048      	eorgt	r0, r1
  402a6a:	4041      	eorgt	r1, r0
  402a6c:	bfb8      	it	lt
  402a6e:	425b      	neglt	r3, r3
  402a70:	2b19      	cmp	r3, #25
  402a72:	bf88      	it	hi
  402a74:	4770      	bxhi	lr
  402a76:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  402a7a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402a7e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  402a82:	bf18      	it	ne
  402a84:	4240      	negne	r0, r0
  402a86:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402a8a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  402a8e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  402a92:	bf18      	it	ne
  402a94:	4249      	negne	r1, r1
  402a96:	ea92 0f03 	teq	r2, r3
  402a9a:	d03f      	beq.n	402b1c <__addsf3+0xd8>
  402a9c:	f1a2 0201 	sub.w	r2, r2, #1
  402aa0:	fa41 fc03 	asr.w	ip, r1, r3
  402aa4:	eb10 000c 	adds.w	r0, r0, ip
  402aa8:	f1c3 0320 	rsb	r3, r3, #32
  402aac:	fa01 f103 	lsl.w	r1, r1, r3
  402ab0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  402ab4:	d502      	bpl.n	402abc <__addsf3+0x78>
  402ab6:	4249      	negs	r1, r1
  402ab8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  402abc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  402ac0:	d313      	bcc.n	402aea <__addsf3+0xa6>
  402ac2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  402ac6:	d306      	bcc.n	402ad6 <__addsf3+0x92>
  402ac8:	0840      	lsrs	r0, r0, #1
  402aca:	ea4f 0131 	mov.w	r1, r1, rrx
  402ace:	f102 0201 	add.w	r2, r2, #1
  402ad2:	2afe      	cmp	r2, #254	; 0xfe
  402ad4:	d251      	bcs.n	402b7a <__addsf3+0x136>
  402ad6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  402ada:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  402ade:	bf08      	it	eq
  402ae0:	f020 0001 	biceq.w	r0, r0, #1
  402ae4:	ea40 0003 	orr.w	r0, r0, r3
  402ae8:	4770      	bx	lr
  402aea:	0049      	lsls	r1, r1, #1
  402aec:	eb40 0000 	adc.w	r0, r0, r0
  402af0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  402af4:	f1a2 0201 	sub.w	r2, r2, #1
  402af8:	d1ed      	bne.n	402ad6 <__addsf3+0x92>
  402afa:	fab0 fc80 	clz	ip, r0
  402afe:	f1ac 0c08 	sub.w	ip, ip, #8
  402b02:	ebb2 020c 	subs.w	r2, r2, ip
  402b06:	fa00 f00c 	lsl.w	r0, r0, ip
  402b0a:	bfaa      	itet	ge
  402b0c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  402b10:	4252      	neglt	r2, r2
  402b12:	4318      	orrge	r0, r3
  402b14:	bfbc      	itt	lt
  402b16:	40d0      	lsrlt	r0, r2
  402b18:	4318      	orrlt	r0, r3
  402b1a:	4770      	bx	lr
  402b1c:	f092 0f00 	teq	r2, #0
  402b20:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  402b24:	bf06      	itte	eq
  402b26:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  402b2a:	3201      	addeq	r2, #1
  402b2c:	3b01      	subne	r3, #1
  402b2e:	e7b5      	b.n	402a9c <__addsf3+0x58>
  402b30:	ea4f 0341 	mov.w	r3, r1, lsl #1
  402b34:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  402b38:	bf18      	it	ne
  402b3a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  402b3e:	d021      	beq.n	402b84 <__addsf3+0x140>
  402b40:	ea92 0f03 	teq	r2, r3
  402b44:	d004      	beq.n	402b50 <__addsf3+0x10c>
  402b46:	f092 0f00 	teq	r2, #0
  402b4a:	bf08      	it	eq
  402b4c:	4608      	moveq	r0, r1
  402b4e:	4770      	bx	lr
  402b50:	ea90 0f01 	teq	r0, r1
  402b54:	bf1c      	itt	ne
  402b56:	2000      	movne	r0, #0
  402b58:	4770      	bxne	lr
  402b5a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  402b5e:	d104      	bne.n	402b6a <__addsf3+0x126>
  402b60:	0040      	lsls	r0, r0, #1
  402b62:	bf28      	it	cs
  402b64:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  402b68:	4770      	bx	lr
  402b6a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  402b6e:	bf3c      	itt	cc
  402b70:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  402b74:	4770      	bxcc	lr
  402b76:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  402b7a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  402b7e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  402b82:	4770      	bx	lr
  402b84:	ea7f 6222 	mvns.w	r2, r2, asr #24
  402b88:	bf16      	itet	ne
  402b8a:	4608      	movne	r0, r1
  402b8c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  402b90:	4601      	movne	r1, r0
  402b92:	0242      	lsls	r2, r0, #9
  402b94:	bf06      	itte	eq
  402b96:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  402b9a:	ea90 0f01 	teqeq	r0, r1
  402b9e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  402ba2:	4770      	bx	lr

00402ba4 <__aeabi_ui2f>:
  402ba4:	f04f 0300 	mov.w	r3, #0
  402ba8:	e004      	b.n	402bb4 <__aeabi_i2f+0x8>
  402baa:	bf00      	nop

00402bac <__aeabi_i2f>:
  402bac:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  402bb0:	bf48      	it	mi
  402bb2:	4240      	negmi	r0, r0
  402bb4:	ea5f 0c00 	movs.w	ip, r0
  402bb8:	bf08      	it	eq
  402bba:	4770      	bxeq	lr
  402bbc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  402bc0:	4601      	mov	r1, r0
  402bc2:	f04f 0000 	mov.w	r0, #0
  402bc6:	e01c      	b.n	402c02 <__aeabi_l2f+0x2a>

00402bc8 <__aeabi_ul2f>:
  402bc8:	ea50 0201 	orrs.w	r2, r0, r1
  402bcc:	bf08      	it	eq
  402bce:	4770      	bxeq	lr
  402bd0:	f04f 0300 	mov.w	r3, #0
  402bd4:	e00a      	b.n	402bec <__aeabi_l2f+0x14>
  402bd6:	bf00      	nop

00402bd8 <__aeabi_l2f>:
  402bd8:	ea50 0201 	orrs.w	r2, r0, r1
  402bdc:	bf08      	it	eq
  402bde:	4770      	bxeq	lr
  402be0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  402be4:	d502      	bpl.n	402bec <__aeabi_l2f+0x14>
  402be6:	4240      	negs	r0, r0
  402be8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402bec:	ea5f 0c01 	movs.w	ip, r1
  402bf0:	bf02      	ittt	eq
  402bf2:	4684      	moveq	ip, r0
  402bf4:	4601      	moveq	r1, r0
  402bf6:	2000      	moveq	r0, #0
  402bf8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  402bfc:	bf08      	it	eq
  402bfe:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  402c02:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  402c06:	fabc f28c 	clz	r2, ip
  402c0a:	3a08      	subs	r2, #8
  402c0c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  402c10:	db10      	blt.n	402c34 <__aeabi_l2f+0x5c>
  402c12:	fa01 fc02 	lsl.w	ip, r1, r2
  402c16:	4463      	add	r3, ip
  402c18:	fa00 fc02 	lsl.w	ip, r0, r2
  402c1c:	f1c2 0220 	rsb	r2, r2, #32
  402c20:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  402c24:	fa20 f202 	lsr.w	r2, r0, r2
  402c28:	eb43 0002 	adc.w	r0, r3, r2
  402c2c:	bf08      	it	eq
  402c2e:	f020 0001 	biceq.w	r0, r0, #1
  402c32:	4770      	bx	lr
  402c34:	f102 0220 	add.w	r2, r2, #32
  402c38:	fa01 fc02 	lsl.w	ip, r1, r2
  402c3c:	f1c2 0220 	rsb	r2, r2, #32
  402c40:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  402c44:	fa21 f202 	lsr.w	r2, r1, r2
  402c48:	eb43 0002 	adc.w	r0, r3, r2
  402c4c:	bf08      	it	eq
  402c4e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  402c52:	4770      	bx	lr

00402c54 <__libc_init_array>:
  402c54:	b570      	push	{r4, r5, r6, lr}
  402c56:	4e0f      	ldr	r6, [pc, #60]	; (402c94 <__libc_init_array+0x40>)
  402c58:	4d0f      	ldr	r5, [pc, #60]	; (402c98 <__libc_init_array+0x44>)
  402c5a:	1b76      	subs	r6, r6, r5
  402c5c:	10b6      	asrs	r6, r6, #2
  402c5e:	bf18      	it	ne
  402c60:	2400      	movne	r4, #0
  402c62:	d005      	beq.n	402c70 <__libc_init_array+0x1c>
  402c64:	3401      	adds	r4, #1
  402c66:	f855 3b04 	ldr.w	r3, [r5], #4
  402c6a:	4798      	blx	r3
  402c6c:	42a6      	cmp	r6, r4
  402c6e:	d1f9      	bne.n	402c64 <__libc_init_array+0x10>
  402c70:	4e0a      	ldr	r6, [pc, #40]	; (402c9c <__libc_init_array+0x48>)
  402c72:	4d0b      	ldr	r5, [pc, #44]	; (402ca0 <__libc_init_array+0x4c>)
  402c74:	1b76      	subs	r6, r6, r5
  402c76:	f000 f995 	bl	402fa4 <_init>
  402c7a:	10b6      	asrs	r6, r6, #2
  402c7c:	bf18      	it	ne
  402c7e:	2400      	movne	r4, #0
  402c80:	d006      	beq.n	402c90 <__libc_init_array+0x3c>
  402c82:	3401      	adds	r4, #1
  402c84:	f855 3b04 	ldr.w	r3, [r5], #4
  402c88:	4798      	blx	r3
  402c8a:	42a6      	cmp	r6, r4
  402c8c:	d1f9      	bne.n	402c82 <__libc_init_array+0x2e>
  402c8e:	bd70      	pop	{r4, r5, r6, pc}
  402c90:	bd70      	pop	{r4, r5, r6, pc}
  402c92:	bf00      	nop
  402c94:	00402fb0 	.word	0x00402fb0
  402c98:	00402fb0 	.word	0x00402fb0
  402c9c:	00402fb8 	.word	0x00402fb8
  402ca0:	00402fb0 	.word	0x00402fb0

00402ca4 <register_fini>:
  402ca4:	4b02      	ldr	r3, [pc, #8]	; (402cb0 <register_fini+0xc>)
  402ca6:	b113      	cbz	r3, 402cae <register_fini+0xa>
  402ca8:	4802      	ldr	r0, [pc, #8]	; (402cb4 <register_fini+0x10>)
  402caa:	f000 b805 	b.w	402cb8 <atexit>
  402cae:	4770      	bx	lr
  402cb0:	00000000 	.word	0x00000000
  402cb4:	00402cc5 	.word	0x00402cc5

00402cb8 <atexit>:
  402cb8:	2300      	movs	r3, #0
  402cba:	4601      	mov	r1, r0
  402cbc:	461a      	mov	r2, r3
  402cbe:	4618      	mov	r0, r3
  402cc0:	f000 b81e 	b.w	402d00 <__register_exitproc>

00402cc4 <__libc_fini_array>:
  402cc4:	b538      	push	{r3, r4, r5, lr}
  402cc6:	4c0a      	ldr	r4, [pc, #40]	; (402cf0 <__libc_fini_array+0x2c>)
  402cc8:	4d0a      	ldr	r5, [pc, #40]	; (402cf4 <__libc_fini_array+0x30>)
  402cca:	1b64      	subs	r4, r4, r5
  402ccc:	10a4      	asrs	r4, r4, #2
  402cce:	d00a      	beq.n	402ce6 <__libc_fini_array+0x22>
  402cd0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  402cd4:	3b01      	subs	r3, #1
  402cd6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402cda:	3c01      	subs	r4, #1
  402cdc:	f855 3904 	ldr.w	r3, [r5], #-4
  402ce0:	4798      	blx	r3
  402ce2:	2c00      	cmp	r4, #0
  402ce4:	d1f9      	bne.n	402cda <__libc_fini_array+0x16>
  402ce6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402cea:	f000 b965 	b.w	402fb8 <_fini>
  402cee:	bf00      	nop
  402cf0:	00402fc8 	.word	0x00402fc8
  402cf4:	00402fc4 	.word	0x00402fc4

00402cf8 <__retarget_lock_acquire_recursive>:
  402cf8:	4770      	bx	lr
  402cfa:	bf00      	nop

00402cfc <__retarget_lock_release_recursive>:
  402cfc:	4770      	bx	lr
  402cfe:	bf00      	nop

00402d00 <__register_exitproc>:
  402d00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402d04:	4d2c      	ldr	r5, [pc, #176]	; (402db8 <__register_exitproc+0xb8>)
  402d06:	4606      	mov	r6, r0
  402d08:	6828      	ldr	r0, [r5, #0]
  402d0a:	4698      	mov	r8, r3
  402d0c:	460f      	mov	r7, r1
  402d0e:	4691      	mov	r9, r2
  402d10:	f7ff fff2 	bl	402cf8 <__retarget_lock_acquire_recursive>
  402d14:	4b29      	ldr	r3, [pc, #164]	; (402dbc <__register_exitproc+0xbc>)
  402d16:	681c      	ldr	r4, [r3, #0]
  402d18:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  402d1c:	2b00      	cmp	r3, #0
  402d1e:	d03e      	beq.n	402d9e <__register_exitproc+0x9e>
  402d20:	685a      	ldr	r2, [r3, #4]
  402d22:	2a1f      	cmp	r2, #31
  402d24:	dc1c      	bgt.n	402d60 <__register_exitproc+0x60>
  402d26:	f102 0e01 	add.w	lr, r2, #1
  402d2a:	b176      	cbz	r6, 402d4a <__register_exitproc+0x4a>
  402d2c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  402d30:	2401      	movs	r4, #1
  402d32:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  402d36:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  402d3a:	4094      	lsls	r4, r2
  402d3c:	4320      	orrs	r0, r4
  402d3e:	2e02      	cmp	r6, #2
  402d40:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  402d44:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  402d48:	d023      	beq.n	402d92 <__register_exitproc+0x92>
  402d4a:	3202      	adds	r2, #2
  402d4c:	f8c3 e004 	str.w	lr, [r3, #4]
  402d50:	6828      	ldr	r0, [r5, #0]
  402d52:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  402d56:	f7ff ffd1 	bl	402cfc <__retarget_lock_release_recursive>
  402d5a:	2000      	movs	r0, #0
  402d5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402d60:	4b17      	ldr	r3, [pc, #92]	; (402dc0 <__register_exitproc+0xc0>)
  402d62:	b30b      	cbz	r3, 402da8 <__register_exitproc+0xa8>
  402d64:	f44f 70c8 	mov.w	r0, #400	; 0x190
  402d68:	f3af 8000 	nop.w
  402d6c:	4603      	mov	r3, r0
  402d6e:	b1d8      	cbz	r0, 402da8 <__register_exitproc+0xa8>
  402d70:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  402d74:	6002      	str	r2, [r0, #0]
  402d76:	2100      	movs	r1, #0
  402d78:	6041      	str	r1, [r0, #4]
  402d7a:	460a      	mov	r2, r1
  402d7c:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  402d80:	f04f 0e01 	mov.w	lr, #1
  402d84:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  402d88:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  402d8c:	2e00      	cmp	r6, #0
  402d8e:	d0dc      	beq.n	402d4a <__register_exitproc+0x4a>
  402d90:	e7cc      	b.n	402d2c <__register_exitproc+0x2c>
  402d92:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  402d96:	430c      	orrs	r4, r1
  402d98:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  402d9c:	e7d5      	b.n	402d4a <__register_exitproc+0x4a>
  402d9e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  402da2:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  402da6:	e7bb      	b.n	402d20 <__register_exitproc+0x20>
  402da8:	6828      	ldr	r0, [r5, #0]
  402daa:	f7ff ffa7 	bl	402cfc <__retarget_lock_release_recursive>
  402dae:	f04f 30ff 	mov.w	r0, #4294967295
  402db2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402db6:	bf00      	nop
  402db8:	20000430 	.word	0x20000430
  402dbc:	00402fa0 	.word	0x00402fa0
  402dc0:	00000000 	.word	0x00000000

00402dc4 <npio2_hw>:
  402dc4:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
  402dd4:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
  402de4:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
  402df4:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
  402e04:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
  402e14:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
  402e24:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
  402e34:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

00402e44 <two_over_pi>:
  402e44:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
  402e54:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
  402e64:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
  402e74:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
  402e84:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
  402e94:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
  402ea4:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
  402eb4:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
  402ec4:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
  402ed4:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
  402ee4:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
  402ef4:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
  402f04:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
  402f14:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
  402f24:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
  402f34:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
  402f44:	0060e27b 00c08c6b 00000000              {.`.k.......

00402f50 <PIo2>:
  402f50:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
  402f60:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
  402f70:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
  402f80:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

00402f90 <init_jk>:
  402f90:	00000002 00000003 00000004 00000006     ................

00402fa0 <_global_impure_ptr>:
  402fa0:	20000008                                ... 

00402fa4 <_init>:
  402fa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402fa6:	bf00      	nop
  402fa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  402faa:	bc08      	pop	{r3}
  402fac:	469e      	mov	lr, r3
  402fae:	4770      	bx	lr

00402fb0 <__init_array_start>:
  402fb0:	00402ca5 	.word	0x00402ca5

00402fb4 <__frame_dummy_init_array_entry>:
  402fb4:	0040011d                                ..@.

00402fb8 <_fini>:
  402fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402fba:	bf00      	nop
  402fbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  402fbe:	bc08      	pop	{r3}
  402fc0:	469e      	mov	lr, r3
  402fc2:	4770      	bx	lr

00402fc4 <__fini_array_start>:
  402fc4:	004000f9 	.word	0x004000f9
